[{"/Users/tianxingyu/tianxingyu/ECN-Viewer/src/index.js":"1","/Users/tianxingyu/tianxingyu/ECN-Viewer/src/serviceWorker.js":"2","/Users/tianxingyu/tianxingyu/ECN-Viewer/src/App.js":"3","/Users/tianxingyu/tianxingyu/ECN-Viewer/src/Utils/FeedbackContext.js":"4","/Users/tianxingyu/tianxingyu/ECN-Viewer/src/Theme/ThemeProvider.js":"5","/Users/tianxingyu/tianxingyu/ECN-Viewer/src/ControllerProvider/index.js":"6","/Users/tianxingyu/tianxingyu/ECN-Viewer/src/Layout/index.js":"7","/Users/tianxingyu/tianxingyu/ECN-Viewer/src/providers/Config/index.js":"8","/Users/tianxingyu/tianxingyu/ECN-Viewer/src/Utils/Alert.js":"9","/Users/tianxingyu/tianxingyu/ECN-Viewer/src/Utils/Modal.js":"10","/Users/tianxingyu/tianxingyu/ECN-Viewer/src/ECNViewer/index.js":"11","/Users/tianxingyu/tianxingyu/ECN-Viewer/src/Catalog/index.js":"12","/Users/tianxingyu/tianxingyu/ECN-Viewer/src/Config/index.js":"13","/Users/tianxingyu/tianxingyu/ECN-Viewer/src/providers/Map/index.js":"14","/Users/tianxingyu/tianxingyu/ECN-Viewer/src/Utils/FileDrop.js":"15","/Users/tianxingyu/tianxingyu/ECN-Viewer/src/Catalog/AddCatalogItemForm.js":"16","/Users/tianxingyu/tianxingyu/ECN-Viewer/src/Utils/Confirm.js":"17","/Users/tianxingyu/tianxingyu/ECN-Viewer/src/Catalog/CatalogTable.js":"18","/Users/tianxingyu/tianxingyu/ECN-Viewer/src/Utils/Tabs.js":"19","/Users/tianxingyu/tianxingyu/ECN-Viewer/src/ECNViewer/Map.js":"20","/Users/tianxingyu/tianxingyu/ECN-Viewer/src/ECNViewer/ActiveResources.js":"21","/Users/tianxingyu/tianxingyu/ECN-Viewer/src/ECNViewer/ControllerInfo.js":"22","/Users/tianxingyu/tianxingyu/ECN-Viewer/src/ECNViewer/AgentList/index.js":"23","/Users/tianxingyu/tianxingyu/ECN-Viewer/src/ECNViewer/ApplicationList/index.js":"24","/Users/tianxingyu/tianxingyu/ECN-Viewer/src/ECNViewer/myleaflet.js":"25","/Users/tianxingyu/tianxingyu/ECN-Viewer/src/providers/providerInfo.js":"26","/Users/tianxingyu/tianxingyu/ECN-Viewer/src/ECNViewer/utils.js":"27","/Users/tianxingyu/tianxingyu/ECN-Viewer/src/Utils/constants.js":"28","/Users/tianxingyu/tianxingyu/ECN-Viewer/src/ECNViewer/AgentList/RemoveMicroservice.js":"29","/Users/tianxingyu/tianxingyu/ECN-Viewer/src/ECNViewer/AgentList/AddMicroservice.js":"30","/Users/tianxingyu/tianxingyu/ECN-Viewer/src/ECNViewer/AgentList/ConnectNode.js":"31","/Users/tianxingyu/tianxingyu/ECN-Viewer/src/Utils/Autocomplete.js":"32","/Users/tianxingyu/tianxingyu/ECN-Viewer/src/hooks/useInterval.js":"33"},{"size":445,"mtime":1611301280000,"results":"34","hashOfConfig":"35"},{"size":4948,"mtime":1611301280000,"results":"36","hashOfConfig":"35"},{"size":880,"mtime":1611301280000,"results":"37","hashOfConfig":"35"},{"size":2397,"mtime":1611301280000,"results":"38","hashOfConfig":"35"},{"size":721,"mtime":1611301280000,"results":"39","hashOfConfig":"35"},{"size":5981,"mtime":1615963533481,"results":"40","hashOfConfig":"35"},{"size":4785,"mtime":1611301280000,"results":"41","hashOfConfig":"35"},{"size":2149,"mtime":1611735835000,"results":"42","hashOfConfig":"35"},{"size":2307,"mtime":1611301280000,"results":"43","hashOfConfig":"35"},{"size":1677,"mtime":1611301280000,"results":"44","hashOfConfig":"35"},{"size":5521,"mtime":1615949554354,"results":"45","hashOfConfig":"35"},{"size":9529,"mtime":1611735106000,"results":"46","hashOfConfig":"35"},{"size":3636,"mtime":1611301280000,"results":"47","hashOfConfig":"35"},{"size":2360,"mtime":1616054592274,"results":"48","hashOfConfig":"35"},{"size":1510,"mtime":1611301280000,"results":"49","hashOfConfig":"35"},{"size":4339,"mtime":1611301280000,"results":"50","hashOfConfig":"35"},{"size":882,"mtime":1611301280000,"results":"51","hashOfConfig":"35"},{"size":4562,"mtime":1611301280000,"results":"52","hashOfConfig":"35"},{"size":1138,"mtime":1611301280000,"results":"53","hashOfConfig":"35"},{"size":4196,"mtime":1616056270826,"results":"54","hashOfConfig":"35"},{"size":1161,"mtime":1611301280000,"results":"55","hashOfConfig":"35"},{"size":3395,"mtime":1611301280000,"results":"56","hashOfConfig":"35"},{"size":8557,"mtime":1611301280000,"results":"57","hashOfConfig":"35"},{"size":15716,"mtime":1615949969468,"results":"58","hashOfConfig":"35"},{"size":1866,"mtime":1616056214504,"results":"59","hashOfConfig":"35"},{"size":2183,"mtime":1615275620572,"results":"60","hashOfConfig":"35"},{"size":367,"mtime":1611301280000,"results":"61","hashOfConfig":"35"},{"size":95,"mtime":1611301280000,"results":"62","hashOfConfig":"35"},{"size":3156,"mtime":1611301280000,"results":"63","hashOfConfig":"35"},{"size":20503,"mtime":1611301280000,"results":"64","hashOfConfig":"35"},{"size":4873,"mtime":1611301280000,"results":"65","hashOfConfig":"35"},{"size":4031,"mtime":1611301280000,"results":"66","hashOfConfig":"35"},{"size":803,"mtime":1611735088000,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"1tlc30p",{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"70"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"70"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"70"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"70"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"70"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"70"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"/Users/tianxingyu/tianxingyu/ECN-Viewer/src/index.js",[],["141","142"],"/Users/tianxingyu/tianxingyu/ECN-Viewer/src/serviceWorker.js",["143"],"// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\n/* globals fetch */\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","/Users/tianxingyu/tianxingyu/ECN-Viewer/src/App.js",[],"/Users/tianxingyu/tianxingyu/ECN-Viewer/src/Utils/FeedbackContext.js",[],"/Users/tianxingyu/tianxingyu/ECN-Viewer/src/Theme/ThemeProvider.js",[],"/Users/tianxingyu/tianxingyu/ECN-Viewer/src/ControllerProvider/index.js",[],"/Users/tianxingyu/tianxingyu/ECN-Viewer/src/Layout/index.js",[],"/Users/tianxingyu/tianxingyu/ECN-Viewer/src/providers/Config/index.js",["144"],"import { get as lget, set as lset } from 'lodash'\nimport React from 'react'\nimport { useController } from '../../ControllerProvider'\nimport { theme } from '../../Theme/ThemeProvider'\n\nexport const ConfigContext = React.createContext()\nexport const useConfig = () => React.useContext(ConfigContext)\n\nconst _initConfig = {\n  tags: {}\n}\n\nconst defaultTagColor = theme.colors.cobalt\n\nconst ecnViewerConfigKey = 'ecn-viewer-config'\n\nexport const ConfigProvider = ({\n  children\n}) => {\n  const { request } = useController()\n  const [config, setConfig] = React.useState(_initConfig)\n\n  const _fetchConfig = async () => {\n    try {\n      const res = await request(`/api/v3/config/${ecnViewerConfigKey}`)\n      if (res.ok) {\n        const { value: stringifiedConfig } = await res.json()\n        setConfig(JSON.parse(stringifiedConfig))\n      }\n    } catch (e) {\n\n    }\n  }\n\n  const saveConfig = async (newConfig) => {\n    const res = await request('/api/v3/config', {\n      method: 'PUT',\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        key: ecnViewerConfigKey,\n        value: JSON.stringify(newConfig)\n      })\n    })\n    if (res.ok) {\n      setConfig(newConfig)\n    }\n    return res\n  }\n\n  const getTagDisplayInfo = value => {\n    return { ...lget(config, `tags['${value}']`, { color: defaultTagColor }), value }\n  }\n\n  const updateTags = (agents = []) => {\n    let updated = false\n    for (const agent of agents) {\n      if (agent.tags) {\n        for (const tag of agent.tags) {\n          if (!lget(config, `tags['${tag}']`)) {\n            updated = true\n            lset(config, `tags['${tag}']`, { icon: '', color: defaultTagColor })\n          }\n        }\n      }\n    }\n    if (updated) {\n      setConfig(config)\n    }\n  }\n\n  React.useEffect(() => {\n    _fetchConfig()\n  }, [])\n\n  const isDebug = window.location.search.includes('debug=true')\n  return (\n    <ConfigContext.Provider\n      value={{\n        isDebug,\n        editConfig: setConfig,\n        updateTags,\n        getTagDisplayInfo,\n        saveConfig,\n        config\n      }}\n    >\n      {children}\n    </ConfigContext.Provider>\n  )\n}\n","/Users/tianxingyu/tianxingyu/ECN-Viewer/src/Utils/Alert.js",[],"/Users/tianxingyu/tianxingyu/ECN-Viewer/src/Utils/Modal.js",[],"/Users/tianxingyu/tianxingyu/ECN-Viewer/src/ECNViewer/index.js",[],"/Users/tianxingyu/tianxingyu/ECN-Viewer/src/Catalog/index.js",["145"],"import React from 'react'\nimport { makeStyles } from '@material-ui/styles'\nimport ReactJson from 'react-json-view'\nimport yaml from 'js-yaml'\nimport { Avatar, Menu, MenuItem, Divider, Typography } from '@material-ui/core'\n\nimport { ControllerContext } from '../ControllerProvider'\nimport { FeedbackContext } from '../Utils/FeedbackContext'\nimport Modal from '../Utils/Modal'\nimport CatalogTable from './CatalogTable'\nimport AddCatalogItemForm from './AddCatalogItemForm'\nimport Confirm from '../Utils/Confirm'\nimport FileDrop from '../Utils/FileDrop'\n\nimport lget from 'lodash/get'\n\nconst useStyles = makeStyles(theme => ({\n  pointer: {\n    cursor: 'pointer'\n  },\n  avatarContainer: {\n    backgroundColor: theme.colors.chromium\n  },\n  container: {\n    padding: '10px 50px 10px 30px'\n  },\n  flexColumn: {\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  titleRow: {\n    marginBottom: '30px'\n  }\n}))\n\nconst mapImages = (images) => {\n  const supportedPlatforms = []\n  for (const img of images) {\n    if (img.containerImage) {\n      switch (img.fogTypeId) {\n        case 1:\n          supportedPlatforms.push('x86')\n          break\n        case 2:\n          supportedPlatforms.push('arm')\n          break\n        default:\n          break\n      }\n    }\n  }\n  return supportedPlatforms\n}\nconst mapCatalogItem = (item, registries) => {\n  item.supportedPlatforms = mapImages(item.images)\n  item.registry = registries.find(r => r.id === item.registryId)\n  if (item.configExample) {\n    try {\n      item.configExample = JSON.parse(item.configExample)\n    } catch (e) {\n    }\n  }\n  return item\n}\n\nconst getRegistryIdFromRegistry = (registry) => {\n  if (registry === 'remote') {\n    return 1\n  }\n  if (registry === 'local') {\n    return 2\n  }\n  return +(registry)\n}\n\nconst parseCatalogItem = (doc) => {\n  if (doc.apiVersion !== 'iofog.org/v2') {\n    return [{}, `Invalid API Version ${doc.apiVersion}, current version is iofog.org/v2`]\n  }\n  if (doc.kind !== 'CatalogItem') {\n    return [{}, `Invalid kind ${doc.kind}`]\n  }\n  if (!doc.metadata || !doc.spec) {\n    return [{}, 'Invalid YAML format']\n  }\n  const catalogItem = {\n    name: lget(doc, 'metadata.name', lget(doc, 'spec.name', undefined)),\n    images: {\n      x86: lget(doc, 'spec.x86', ''),\n      arm: lget(doc, 'spec.arm', '')\n    },\n    description: lget(doc, 'spec.description', ''),\n    publisher: lget(doc, 'spec.publisher', ''),\n    category: lget(doc, 'spec.category', ''),\n    registry: lget(doc, 'spec.registry', ''),\n    configExample: lget(doc, 'spec.configExample', {})\n  }\n\n  catalogItem.registryId = catalogItem.registry ? getRegistryIdFromRegistry(catalogItem.registry) : 1\n  return [catalogItem]\n}\n\nexport default function Catalog () {\n  const classes = useStyles()\n  const [openDetailsModal, setOpenDetailsModal] = React.useState(false)\n  const [openRemoveConfirm, setOpenRemoveConfirm] = React.useState(false)\n  const [openAddCatalogItemModal, setOpenAddCatalogItemModal] = React.useState(false)\n  const [newCatalogItem, setNewCatalogItem] = React.useState(null)\n  const [fetching, setFetching] = React.useState(true)\n  const [loading, setLoading] = React.useState(false)\n  const [catalog, setCatalog] = React.useState([])\n  const [registries, setRegistries] = React.useState([])\n  const [selectedItem, setSelectedItem] = React.useState({})\n  const [menuAnchorEl, setMenuAnchorEl] = React.useState(null)\n  const { request } = React.useContext(ControllerContext)\n  const { pushFeedback } = React.useContext(FeedbackContext)\n\n  const handleCloseMenu = () => setMenuAnchorEl(null)\n  const openMenu = (item, e) => {\n    setSelectedItem(item)\n    setMenuAnchorEl(e.currentTarget)\n  }\n  const openDetails = () => {\n    setOpenDetailsModal(true)\n    handleCloseMenu()\n  }\n  const openRemove = () => {\n    setOpenRemoveConfirm(true)\n    handleCloseMenu()\n  }\n\n  async function fetchCatalog () {\n    try {\n      setFetching(true)\n      const catalogItemsResponse = await request('/api/v3/catalog/microservices')\n      if (!catalogItemsResponse.ok) {\n        pushFeedback({ message: catalogItemsResponse.statusText, type: 'error' })\n        setFetching(false)\n        return\n      }\n      let catalogItems = (await catalogItemsResponse.json()).catalogItems\n      const registriesResponse = await request('/api/v3/registries')\n      if (!registriesResponse.ok) {\n        pushFeedback({ message: registriesResponse.statusText, type: 'error' })\n        setFetching(false)\n        return\n      }\n      const registries = (await registriesResponse.json()).registries\n      catalogItems = catalogItems.map(item => mapCatalogItem(item, registries))\n      console.log({ catalogItems })\n      setCatalog(catalogItems)\n      setRegistries(registries)\n      setFetching(false)\n    } catch (e) {\n      pushFeedback({ message: e.message, type: 'error' })\n      setFetching(false)\n    }\n  }\n\n  React.useEffect(fetchCatalog(), [])\n\n  const addCatalogItem = async (item) => {\n    const newItem = {\n      ...item,\n      images: [{\n        fogTypeId: 1,\n        containerImage: item.images.x86\n      }, {\n        fogTypeId: 2,\n        containerImage: item.images.arm\n      }]\n    }\n    if (newItem.configExample && typeof newItem.configExample === typeof ({})) {\n      newItem.configExample = JSON.stringify(newItem.configExample)\n    }\n    setLoading(true)\n    const response = await request('/api/v3/catalog/microservices', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newItem)\n    })\n    if (response.ok) {\n      pushFeedback({ message: 'Item added to the Catalog!', type: 'success' })\n      newItem.id = (await response.json()).id\n      setCatalog([mapCatalogItem(newItem, registries), ...catalog])\n      setLoading(false)\n    } else {\n      pushFeedback({ message: response.statusText, type: 'error' })\n      setLoading(false)\n    }\n  }\n\n  const removeCatalogItem = async (item) => {\n    try {\n      setLoading(true)\n      const res = await request(`/api/v3/catalog/microservices/${item.id}`, {\n        method: 'DELETE'\n      })\n      if (!res.ok) {\n        pushFeedback({ message: res.statusText, type: 'error' })\n      } else {\n        setCatalog(catalog.filter(i => i.id !== item.id))\n        pushFeedback({ message: 'Catalog item deleted', type: 'success' })\n      }\n      setLoading(false)\n    } catch (e) {\n      pushFeedback({ message: e.message, type: 'error', uuid: 'error' })\n      setLoading(false)\n    }\n  }\n\n  const readCatalogItemFile = async (item) => {\n    const file = item.files[0]\n    if (file) {\n      const reader = new window.FileReader()\n\n      reader.onload = function (evt) {\n        console.log({ evt })\n        try {\n          const doc = yaml.safeLoad(evt.target.result)\n          const [catalogItem, err] = parseCatalogItem(doc)\n          if (err) {\n            return pushFeedback({ message: err, type: 'error' })\n          }\n          setNewCatalogItem(catalogItem)\n          setOpenAddCatalogItemModal(true)\n        } catch (e) {\n          console.error({ e })\n          pushFeedback({ message: 'Could not parse the file', type: 'error' })\n        }\n      }\n\n      reader.onerror = function (evt) {\n        pushFeedback({ message: evt, type: 'error' })\n      }\n\n      reader.readAsText(file, 'UTF-8')\n    }\n  }\n\n  return (\n    <>\n      <div className={classes.container}>\n        <div className={classes.titleRow}>\n          <Typography variant='h5'>ECN Microservices Catalog</Typography>\n        </div>\n        <CatalogTable {...{ loading: fetching, openMenu, catalog }} />\n        <div>\n          <FileDrop {...{ onDrop: readCatalogItemFile }}>\n            <div className={classes.flexColumn}>\n              <span>Drag a file here</span>\n              <span>---</span>\n              <Avatar style={{ margin: 'auto' }} className={`${classes.avatarContainer} ${classes.pointer}`} onClick={() => setOpenAddCatalogItemModal(true)}>+</Avatar>\n            </div>\n          </FileDrop>\n        </div>\n      </div>\n      <Modal\n        {...{\n          open: openDetailsModal,\n          title: `${selectedItem.name} details`,\n          onClose: () => setOpenDetailsModal(false)\n        }}\n      >\n        <ReactJson title='Catalog item' src={selectedItem} name={false} />\n      </Modal>\n      <Modal\n        {...{\n          open: openAddCatalogItemModal,\n          title: 'Add an item to the Catalog',\n          onClose: () => setOpenAddCatalogItemModal(false)\n        }}\n      >\n        <AddCatalogItemForm {...{\n          loading,\n          registries,\n          newCatalogItem,\n          onSave: async (item) => {\n            try {\n              await addCatalogItem(item)\n              setNewCatalogItem(null)\n              setOpenAddCatalogItemModal(false)\n            } catch (e) {\n              pushFeedback({ message: e.message, type: 'error' })\n            }\n          }\n        }}\n        />\n      </Modal>\n      <Confirm\n        open={openRemoveConfirm}\n        title={`Delete catalog item ${selectedItem.name} ?`}\n        onClose={() => setOpenRemoveConfirm(false)}\n        onConfirm={() => {\n          removeCatalogItem(selectedItem)\n          setOpenRemoveConfirm(false)\n        }}\n      />\n      <Menu\n        id='catalog-menu'\n        anchorEl={menuAnchorEl}\n        keepMounted\n        open={Boolean(menuAnchorEl)}\n        onClose={handleCloseMenu}\n      >\n        <MenuItem onClick={openDetails}>Details</MenuItem>\n        <Divider />\n        <MenuItem onClick={openRemove}>Remove item</MenuItem>\n      </Menu>\n    </>\n  )\n}\n","/Users/tianxingyu/tianxingyu/ECN-Viewer/src/Config/index.js",[],"/Users/tianxingyu/tianxingyu/ECN-Viewer/src/providers/Map/index.js",[],"/Users/tianxingyu/tianxingyu/ECN-Viewer/src/Utils/FileDrop.js",[],"/Users/tianxingyu/tianxingyu/ECN-Viewer/src/Catalog/AddCatalogItemForm.js",[],"/Users/tianxingyu/tianxingyu/ECN-Viewer/src/Utils/Confirm.js",[],"/Users/tianxingyu/tianxingyu/ECN-Viewer/src/Catalog/CatalogTable.js",[],"/Users/tianxingyu/tianxingyu/ECN-Viewer/src/Utils/Tabs.js",[],"/Users/tianxingyu/tianxingyu/ECN-Viewer/src/ECNViewer/Map.js",["146"],"import React, { useEffect, useState } from 'react'\nimport { makeStyles } from '@material-ui/styles'\nimport { useMap } from '../providers/Map'\nimport L from 'leaflet'\nimport { getAllProviderName, getProviderInfo } from '../providers/providerInfo'\nimport { MapContainer } from './myleaflet'\n\n// Default map provider name\nconst defaultProvider = 'Google'\nexport const { Provider, Consumer } = React.createContext(\"a\");\nconst useStyles = makeStyles(theme => ({\n  mapMarkerTransform: {\n    transform: 'translate(-50%, -100%)',\n    position: 'absolute'\n  },\n  msvcBadge: {\n    '& .MuiBadge-badge': {\n      backgroundColor: `var(--color, ${theme.colors.cobalt})`\n    }\n  },\n  mapMarker: {\n    backgroundColor: `var(--markerColor, ${theme.colors.success})`,\n    borderRadius: '50% 50% 50% 0 !important',\n    border: `2px solid var(--markerColor, ${theme.colors.success})`,\n    transform: 'rotate(-45deg)',\n    '& .MuiSvgIcon-root': {\n      transform: 'rotate(-45deg)'\n    }\n  },\n  mapWrapper: {\n    boxShadow: '0px 1px 3px 0px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 2px 1px -1px rgba(0,0,0,0.12)',\n    borderRadius: '4px',\n    width: '100%',\n    height: '100%',\n    maxHeight: '700px',\n    position: 'sticky',\n    top: '25px',\n    borderColor: theme.colors.aluminium,\n    '& div': {\n      borderRadius: '4px',\n      '& div': {\n        borderRadius: '4px'\n      }\n    }\n  }\n}))\n/**\n * Renderer\n * @description This component do not return ANYTHING for user interface, it is only used for updating MapContainer props dynamically\n * @see https://stackoverflow.com/questions/65546744/not-able-to-change-center-dynamically-in-react-leaflet-v-3-x\n */\nexport default function Map(props) {\n  const classes = useStyles()\n  //mcstate value will be true after componentDidmount\n  const [mcstate, setMcstate] = useState(false);\n  const [mymap, setMymap] = useState(0);\n  const { controller, setAgent,loading } = props\n  const { map, mapRef, hasValidCoordinates } = useMap()\n  const [providerName] = useState(defaultProvider)\n\n  useEffect(() => { \n  })\n  function getMapContainer(a) {\n    setMymap(a)\n  }\n  function changemcstate(a) {\n    setMcstate(a)\n  }\n  function ViewerMarker(props) {\n    //componentDidmount is not over so this component return null\n    if (mcstate === false) {\n      return null\n    } else {\n      return (\n        // componentDidmount is over Mymarker function can be mark on the map\n        <Consumer>\n          {(mymapobj) => {\n           L.marker(props.position).addTo(mymapobj);\n            // var allcity = L.layerGroup(...Mymarker).addTo(mymapobj);\n          }\n          }\n        </Consumer>\n      );\n    }\n  }\n  //change map center and zoom\n  function SetViewOnClick({ coords }) {\n    if (mcstate === false) {\n      return null\n    } else {\n      return (\n        <Consumer>\n          {(mymapobj) => {\n            const map = mymapobj\n            map.setView(coords.center, coords.zoom);\n          }\n          }\n        </Consumer>\n      );\n    }\n  }\n  var propsdata = (controller.agents).filter(a => hasValidCoordinates([a.latitude, a.longitude])).map(a =>\n    [a.latitude, a.longitude]\n  )\n  var mymapurls = getAllProviderName().map(pName => {\n    const pInfo = getProviderInfo(pName)\n    if (providerName === pName) {\n      return pInfo\n    }\n  })\n  return (\n    <div className={classes.mapWrapper} ref={mapRef}>\n      {\n      }\n      <MapContainer\n        {...map}\n        position={propsdata}\n        getfun={getMapContainer}//get leaflet example\n        mcstate={changemcstate}//change react state\n        mymapurl={mymapurls}\n      >\n        <Provider value={mymap}>\n          <SetViewOnClick coords={map} />\n          {(loading ? [] : controller.agents).filter(a => hasValidCoordinates([a.latitude, a.longitude])).map(a =>\n            <ViewerMarker\n              mInstance={MapContainer}\n              key={a.uuid}\n              position={[a.latitude, a.longitude]}\n              eventHandlers={{\n                click: () => {\n                  setAgent(a)\n                }\n              }}\n              mType='agent'\n              mInfo={a}\n            >\n            </ViewerMarker>\n          )}\n        </Provider>\n      </MapContainer>\n\n    </div>\n  )\n}\n","/Users/tianxingyu/tianxingyu/ECN-Viewer/src/ECNViewer/ActiveResources.js",[],"/Users/tianxingyu/tianxingyu/ECN-Viewer/src/ECNViewer/ControllerInfo.js",[],"/Users/tianxingyu/tianxingyu/ECN-Viewer/src/ECNViewer/AgentList/index.js",[],"/Users/tianxingyu/tianxingyu/ECN-Viewer/src/ECNViewer/ApplicationList/index.js",[],"/Users/tianxingyu/tianxingyu/ECN-Viewer/src/ECNViewer/myleaflet.js",["147"],"import React from 'react'\nimport L from 'leaflet'\nimport { useState, useEffect } from 'react'\nconst mymapcss = {\n  height: \"100vh\"\n}\nexport function MapContainer(props) {\n  // const [posation,setPosation] = useState([]);\n  const [initFlag, setInitFlag] = useState(true)\n  const flag = React.useRef(null)\n  //props camefrom  the father component\n  //this useEffect replace componentDidUpdate\n  React.useEffect(() => {\n    if (!flag.current) {\n      flag.current = true\n    } else {\n      if (!initFlag) {\n      }\n    }\n  })\n  //this useEffect replace componentDidmount\n  useEffect(() => {\n    //change map document link https://leafletjs.com/examples/layers-control/\n    var container = L.DomUtil.get('map')\n    if (container != null) {\n      container._leaflet_id = null;\n    }\n    var allcity = props.position.map(a => {\n      return L.marker(a)\n    })\n    var cities = L.layerGroup(...allcity);\n    var grayscale = L.tileLayer(\"//mt1.google.com/vt/lyrs=r&x={x}&y={y}&z={z}\", { id: 'MapID', tileSize: 512, zoomOffset: -1, attribution: \"Google\" });\n    var Geoq = L.tileLayer(\"//map.geoq.cn/ArcGIS/rest/services/ChinaOnlineCommunity/MapServer/tile/{z}/{y}/{x}\", { id: 'MapID', tileSize: 512, zoomOffset: -1, attribution: \"Geoq\" });\n    var streets = L.tileLayer(\"//{s}.tile.osm.org/{z}/{x}/{y}.png\", { id: 'MapID', tileSize: 512, zoomOffset: -1, attribution: \"osm\" });\n    var map = L.map('map', {\n      center: props.center,\n      zoom: props.zoom,\n      layers: [grayscale, cities]\n    });\n    var baseMaps = {\n      \"Google\": grayscale,\n      \"OSM\": streets,\n      \"Geoq\": Geoq\n    };\n    var overlayMaps = {\n      \"Cities\": cities\n    };\n    L.control.layers(baseMaps, overlayMaps).addTo(map);\n  \n    props.getfun(map)\n    props.mcstate(true)\n    setInitFlag(false)\n  }, [])\n  return (\n    <div id='map' style={mymapcss}>\n      {props.children}\n    </div>\n  )\n}\n","/Users/tianxingyu/tianxingyu/ECN-Viewer/src/providers/providerInfo.js",[],"/Users/tianxingyu/tianxingyu/ECN-Viewer/src/ECNViewer/utils.js",[],"/Users/tianxingyu/tianxingyu/ECN-Viewer/src/Utils/constants.js",["148"],"export const API_VERSIONS = ['iofog.org/v1', 'iofog.org/v2']\nexport default {\n  API_VERSIONS\n}\n","/Users/tianxingyu/tianxingyu/ECN-Viewer/src/ECNViewer/AgentList/RemoveMicroservice.js",[],"/Users/tianxingyu/tianxingyu/ECN-Viewer/src/ECNViewer/AgentList/AddMicroservice.js",[],"/Users/tianxingyu/tianxingyu/ECN-Viewer/src/ECNViewer/AgentList/ConnectNode.js",[],"/Users/tianxingyu/tianxingyu/ECN-Viewer/src/Utils/Autocomplete.js",[],"/Users/tianxingyu/tianxingyu/ECN-Viewer/src/hooks/useInterval.js",[],{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","severity":1,"message":"154","line":13,"column":12,"nodeType":"155","messageId":"156","endLine":13,"endColumn":17},{"ruleId":"157","severity":1,"message":"158","line":75,"column":6,"nodeType":"159","endLine":75,"endColumn":8,"suggestions":"160"},{"ruleId":"157","severity":1,"message":"161","line":160,"column":3,"nodeType":"162","endLine":160,"endColumn":18},{"ruleId":"163","severity":1,"message":"164","line":105,"column":50,"nodeType":"165","messageId":"166","endLine":105,"endColumn":52},{"ruleId":"157","severity":1,"message":"167","line":53,"column":6,"nodeType":"159","endLine":53,"endColumn":8,"suggestions":"168"},{"ruleId":"169","severity":1,"message":"170","line":2,"column":1,"nodeType":"171","endLine":4,"endColumn":2},"no-native-reassign",["172"],"no-negated-in-lhs",["173"],"no-redeclare","'fetch' is already defined as a built-in global variable.","Block","redeclaredAsBuiltin","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: '_fetchConfig'. Either include it or remove the dependency array.","ArrayExpression",["174"],"React Hook useEffect received a function whose dependencies are unknown. Pass an inline function instead.","MemberExpression","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["175"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"176","fix":"177"},{"desc":"178","fix":"179"},"Update the dependencies array to be: [_fetchConfig]",{"range":"180","text":"181"},"Update the dependencies array to be: [props]",{"range":"182","text":"183"},[1828,1830],"[_fetchConfig]",[1775,1777],"[props]"]