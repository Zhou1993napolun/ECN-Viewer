{"version":3,"sources":["assets/logomark.svg","hooks/useInterval.js","ECNViewer/ControllerInfo.js","ECNViewer/ActiveResources.js","Theme/ThemeProvider.js","ECNViewer/utils.js","Utils/Modal.js","Utils/Alert.js","Utils/FeedbackContext.js","ControllerProvider/index.js","ECNViewer/AgentList/ConnectNode.js","Utils/Autocomplete.js","ECNViewer/AgentList/AddMicroservice.js","ECNViewer/AgentList/RemoveMicroservice.js","Utils/Tabs.js","ECNViewer/AgentList/index.js","Utils/FileDrop.js","Utils/constants.js","providers/Config/index.js","providers/Map/index.js","ECNViewer/ApplicationList/index.js","ECNViewer/Map.js","ECNViewer/index.js","Catalog/CatalogTable.js","Catalog/AddCatalogItemForm.js","Utils/Confirm.js","Catalog/index.js","Config/index.js","Layout/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useRecursiveTimeout","callback","delay","savedCallback","useRef","useEffect","current","id","setTimeout","tick","ret","Promise","then","clearTimeout","useStyles","makeStyles","theme","controllerInfo","paddingTop","padding","controllerName","fontSize","fontFamily","fontWeight","lineHeight","letterSpacing","width","borderBottom","warningChip","backgroundColor","colors","danger","color","controllerTitle","display","justifyContent","alignItems","textEmphasis","ControllerInfo","props","classes","useTheme","controller","loading","error","location","city","country","lat","lon","query","controllerError","React","useState","window","localStorage","getItem","setControllerName","document","title","className","Typography","style","variant","Input","value","onChange","e","name","target","setItem","onKeyDown","key","blur","Tooltip","message","aria-label","Chip","label","gold","List","ListItem","ListItemIcon","ListItemText","primary","cursor","onClick","selectController","summary","gridTemplateColumns","gridColumnGap","textAlign","ActiveResources","applications","activeAgents","activeMsvcs","Paper","length","phosphorus","cobalt","chromium","argon","carbon","lead","aluminium","silver","white","createMuiTheme","customTheme","success","Theming","ThemeProvider","children","statusColor","RUNNING","UNKNOWN","OFFLINE","msvcStatusColor","tagColor","modalTitle","borderRadius","modal","top","left","position","modalContent","maxHeight","overflowY","modalActions","modalAction","marginLeft","_Modal","open","onClose","Modal","aria-labelledby","actions","map","a","Button","text","variantIcon","CheckCircleIcon","warning","WarningIcon","ErrorIcon","info","InfoIcon","icon","iconVariant","opacity","marginRight","spacing","alert","margin","boxShadow","container","flexDirection","bottom","zIndex","Alert","alerts","idx","handleClick","variantKey","type","Icon","SnackbarContent","aria-describedby","action","IconButton","FeedbackContext","createContext","feedbacks","setFeedbacks","pushFeedback","initState","nextId","reducer","state","data","timeout","dispatch","idxToRemove","findIndex","f","slice","Context","useReducer","console","log","Provider","newFeedbacks","newFeedback","push","Consumer","controllerJson","controllerConfig","initControllerState","localUser","user","JSON","parse","api","protocol","ip","port","status","versions","ecnViewer","getUrl","path","dev","hostname","join","getHeaders","headers","ControllerContext","updateController","useController","useContext","lookUpControllerInfo","host","split","localhost","RegExp","test","fetch","response","ok","json","Error","statusText","getControllerStatus","updateControllerInfo","ipInfo","token","newState","authenticate","method","Accept","body","stringify","accessToken","request","options","t","Authorization","newController","effect","divider","initNode","newError","ConnectNode","node","setNode","handleChange","event","createAgent","agent","uuid","getProvisioningKey","linkAgent","ioFogApi","provisionAgent","connect","fogType","iofogUuid","provisioningKey","Grid","item","xs","sm","TextField","fullWidth","textField","helperText","Divider","justify","root","flexGrow","height","paper","marginTop","marginBot","right","chip","inputRoot","flexWrap","inputInput","Autocomplete","itemToString","get","initialSelectedItem","selectedItem","clearSelection","getInputProps","getItemProps","getLabelProps","getMenuProps","highlightedIndex","inputValue","isOpen","openMenu","onFocus","disabled","placeholder","onBlur","inputProps","InputProps","ref","others","inputRef","input","renderInput","InputLabelProps","shrink","square","showEmpty","deburr","trim","toLowerCase","inputLength","count","suggestions","filter","suggestion","keep","maxSuggestions","startsWith","getSuggestions","index","suggestionProps","itemProps","isHighlighted","isSelected","MenuItem","selected","component","renderSuggestion","formControl","rowIcon","newPaper","border","inputWithIcon","MenuProps","PaperProps","ITEM_HEIGHT","initMsvc","flow","catalog","images","volumeMappings","ports","rootHostAccess","_new","initFlow","isActivated","initCatalogItem","fogTypeId","containerImage","registryId","generateRouteSelect","list","isNewMsvc","m","AddMicroservice","flows","setFlows","setCatalog","config","ReactJsonRef","src","onAdd","updated_src","onEdit","onDelete","msvc","setMsvc","newFlow","setNewFlow","newCatalogItem","setNewCatalogItem","routes","setRoutes","all","flowRaw","flowsRes","catalogRaw","catalogRes","catalogItems","setter","prevState","handleMsvcChangeArray","objKey","valueDecorator","x","getCatalogImage","img","removeFromArray","addMsvc","flowId","catalogItemId","createFlow","createCatalogItem","catalogItem","Math","random","toString","replace","substr","createRoute","route","from","to","createRoutes","defaultUuid","createMsvc","onSuccess","routeList","microservices","concat","FormControl","required","FormControlLabel","control","Checkbox","checked","v","hostDestination","containerDestination","InputLabel","htmlFor","Select","accessMode","p","parseInt","external","internal","r","chips","marginBottom","RemoveMicroservice","msvcsToRemove","setMsvcsToRemove","remove","res","indexOf","msvcsPerUUID","msvcs","reduce","multiple","renderValue","TabContainer","palette","background","SimpleTabs","setValue","Tabs","newValue","child","Tab","avatarList","msvcChipList","flex","paddingRight","msvcChip","textOverflow","whiteSpace","overflow","jsonDisplay","minHeight","listTitle","link","secondary","textDecoration","TagChip","tag","first","size","AgentList","openDetailsModal","setOpenDetailsModal","openConnectNodeModal","setOpenConnectNodeModal","openAddMicroserviceModal","setOpenAddMicroserviceModal","openRemoveMicroserviceModal","setOpenRemoveMicroserviceModal","menuAnchorEl","setMenuAnchorEl","msvcsPerAgent","agents","setAgent","setAutozoom","handleCloseMenu","currentTarget","subheader","ListSubheader","disableGutters","disableSticky","edgeResources","button","ListItemAvatar","Avatar","daemonStatus","eR","Fragment","flowActive","Menu","anchorEl","keepMounted","Boolean","FILE","NativeTypes","dropZone","verticalAlign","active","FileDrop","useDrop","accept","drop","onDrop","collect","monitor","highlighted","canDrop","hovered","isOver","collectedProps","CircularProgress","API_VERSIONS","ConfigContext","useConfig","_initConfig","tags","defaultTagColor","ConfigProvider","setConfig","_fetchConfig","stringifiedConfig","saveConfig","newConfig","isDebug","search","includes","editConfig","updateTags","updated","lget","lset","getTagDisplayInfo","MapContext","useMap","hasValidCoordinates","coordinates","isFinite","MapProvider","mapRef","center","zoom","styles","mapStyle","_setMap","setMap","includeController","newMap","bounds","google","maps","LatLngBounds","validAgents","latitude","longitude","forEach","marker","extend","LatLng","newBounds","ne","getNorthEast","lng","sw","getSouthWest","fitBounds","ApplicationList","fileParsing","setFileParsing","openStartStopModal","setOpenStartStopModal","openDeleteApplicationModal","setOpenDeleteApplicationModal","application","setApplication","agentsByName","setAgentsByName","agentsByUUID","setAgentsByUUID","reduced","byName","byUUID","toggleApplication","deleteApplication","mapImages","imgs","x86","arm","parseMicroserviceImages","fileImages","catalogId","undefined","registryByName","remote","local","registry","_deleteUndefinedFields","obj","Object","keys","parseMicroservice","microservice","microserviceData","logSize","publicPort","public","cmd","env","extraHosts","parseApplicationFile","doc","apiVersion","kind","metadata","spec","deployApplication","newApplication","url","readApplicationFile","file","files","reader","FileReader","onload","evt","yaml","safeLoad","result","applicationData","err","find","onerror","readAsText","flexColumn","uniqBy","selectApplication","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","mapMarkerTransform","transform","msvcBadge","mapMarker","mapWrapper","borderColor","Map","bootstrapURLKeys","Badge","badgeContent","invisible","activeFlows","groupBy","updateData","ECNViewer","setLoading","setError","refresh","agentsResponse","fogs","applicationResponse","microservicesResponse","newMicroservices","pointer","avatarContainer","tableActions","filterFields","CatalogTable","setFilter","page","setPage","rowsPerPage","setRowsPerPage","filteredCatalog","field","emptyRows","min","startAdornment","InputAdornment","endAdornment","TableContainer","Table","table","stickyHeader","TableHead","TableRow","TableCell","align","TableBody","colSpan","row","scope","description","supportedPlatforms","publisher","category","TablePagination","rowsPerPageOptions","onChangePage","newPage","onChangeRowsPerPage","AddCatalogItemForm","newItem","setNewItem","onSave","registries","handleImageChange","multiline","rowsMax","select","option","Confirm","onConfirm","titleRow","mapCatalogItem","configExample","parseCatalogItem","Catalog","openRemoveConfirm","setOpenRemoveConfirm","openAddCatalogItemModal","setOpenAddCatalogItemModal","fetching","setFetching","setRegistries","setSelectedItem","catalogItemsResponse","registriesResponse","fetchCatalog","addCatalogItem","removeCatalogItem","i","readCatalogItemFile","skeleton","Config","setData","save","handleUserChange","email","onKeyPress","password","step","wrapper","logo","latNav","latIcons","topIcons","nav","footerContainer","justifyItems","footer","Layout","settingsOpen","setSettingsOpen","logomark","alt","href","App","CssBaseline","DndProvider","backend","Backend","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2610850c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logomark.380acb6b.svg\";","import React, { useEffect, useRef } from 'react'\n\nfunction useRecursiveTimeout (\n  callback,\n  delay\n) {\n  const savedCallback = useRef(callback)\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback\n  }, [callback])\n\n  // Set up the timeout loop.\n  useEffect(() => {\n    let id\n    function tick () {\n      const ret = savedCallback.current()\n\n      if (ret instanceof Promise) {\n        ret.then(() => {\n          if (delay !== null) {\n            id = setTimeout(tick, delay)\n          }\n        })\n      } else {\n        if (delay !== null) {\n          id = setTimeout(tick, delay)\n        }\n      }\n    }\n    if (delay !== null) {\n      id = setTimeout(tick, delay)\n      return () => id && clearTimeout(id)\n    }\n  }, [delay])\n}\n\nexport default useRecursiveTimeout\n","import React from 'react'\nimport Skeleton from 'react-loading-skeleton'\n\nimport { Typography, List, ListItem, ListItemIcon, ListItemText, Chip, Tooltip, Input } from '@material-ui/core'\n\nimport LocationCityIcon from '@material-ui/icons/LocationCity'\nimport GPSFixedIcon from '@material-ui/icons/GpsFixed'\nimport IPIcon from '@material-ui/icons/WifiTethering'\n\nimport { makeStyles, useTheme } from '@material-ui/styles'\n\nconst CONTROLLER_NAME_KEY = 'ControllerName'\nconst DEFAULT_CONTROLLER_NAME = 'Controller'\n\nconst useStyles = makeStyles(theme => ({\n  controllerInfo: {\n    paddingTop: '0px',\n    '& .paper': {\n      padding: '5px'\n    }\n  },\n  controllerName: {\n    fontSize: '1.5rem',\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n    fontWeight: 400,\n    lineHeight: 1.33,\n    letterSpacing: '0em',\n    width: '100%',\n    '&::before': {\n      borderBottom: 'none !important'\n    }\n  },\n  warningChip: {\n    backgroundColor: `var(--color, ${theme.colors.danger})`,\n    color: 'white'\n  },\n  controllerTitle: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'baseline',\n    textEmphasis: 'bold'\n  }\n}))\n\nexport default function ControllerInfo (props) {\n  const classes = useStyles()\n  const theme = useTheme()\n  const { controller, loading, error } = props\n  const { city, country, lat, lon, query } = controller.location || {}\n\n  const controllerError = error || controller.error || null\n  const [controllerName, setControllerName] = React.useState(() => {\n    return window.localStorage.getItem(CONTROLLER_NAME_KEY) || DEFAULT_CONTROLLER_NAME\n  })\n\n  const loseFocus = (e) => {\n    const { key, target } = e\n    if (key === 'Enter') {\n      target.blur()\n    }\n  }\n\n  const updateControllerName = (e) => {\n    const name = e.target.value\n    window.localStorage.setItem(CONTROLLER_NAME_KEY, name)\n    setControllerName(name)\n  }\n\n  React.useEffect(() => {\n    if (controllerName === DEFAULT_CONTROLLER_NAME) {\n      window.document.title = 'ECN Viewer'\n      return\n    }\n    window.document.title = controllerName\n  }, [controllerName])\n\n  return (\n    <div className={classes.controllerInfo}>\n      <div className={classes.controllerTitle}>\n        <Typography style={{ width: '100%' }} variant='h5'>\n          <Input className={classes.controllerName} value={controllerName} onChange={updateControllerName} onKeyDown={loseFocus} />\n        </Typography>\n        {controllerError &&\n          <Tooltip title={controllerError.message} aria-label='Error'>\n            <Chip label='The controller is not reachable' style={{ '--color': theme.colors.gold }} className={classes.warningChip} />\n          </Tooltip>}\n      </div>\n      <List>\n        <ListItem>\n          <ListItemIcon><LocationCityIcon /></ListItemIcon>\n          {loading ? <ListItemText><Skeleton /></ListItemText> : <ListItemText primary={`${city}, ${country}`} />}\n        </ListItem>\n        <ListItem style={{ cursor: 'pointer' }} onClick={() => props.selectController()}>\n          <ListItemIcon><GPSFixedIcon /></ListItemIcon>\n          {loading ? <ListItemText><Skeleton /></ListItemText> : <ListItemText primary={`${lat}, ${lon}`} />}\n        </ListItem>\n        <ListItem>\n          <ListItemIcon><IPIcon /></ListItemIcon>\n          {loading ? <ListItemText><Skeleton /></ListItemText> : <ListItemText primary={query} />}\n        </ListItem>\n      </List>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport { Typography, Paper } from '@material-ui/core'\n\nimport { makeStyles } from '@material-ui/styles'\nconst useStyles = makeStyles({\n  summary: {\n    display: 'grid',\n    gridTemplateColumns: 'repeat(3, 1fr)',\n    gridColumnGap: '15px',\n    textAlign: 'center'\n  }\n})\n\nexport default function ActiveResources (props) {\n  const classes = useStyles()\n  const { applications, activeAgents, activeMsvcs, loading } = props\n  return (\n    <div>\n      <Typography variant='h5'>Active resources</Typography>\n      <br />\n      <div className={classes.summary}>\n        <Paper>\n          <Typography variant='h3'>{loading ? 0 : applications.length}</Typography>\n          <Typography variant='subtitle1'>Applications</Typography>\n        </Paper>\n        <Paper>\n          <Typography variant='h3'>{loading ? 0 : activeAgents.length}</Typography>\n          <Typography variant='subtitle1'>Agents</Typography>\n        </Paper>\n        <Paper>\n          <Typography variant='h3'>{loading ? 0 : activeMsvcs.length}</Typography>\n          <Typography variant='subtitle1'>Microservices</Typography>\n        </Paper>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport { ThemeProvider } from '@material-ui/styles'\nimport { createMuiTheme } from '@material-ui/core/styles'\n\nimport customTheme from './theme.json'\n\nconst colors = {\n  phosphorus: '#FF585D',\n  cobalt: '#5064EC',\n  gold: '#F5A623',\n  chromium: '#00C0A9',\n  argon: '#7A3BFF',\n  carbon: '#002E43',\n  lead: '#57687D',\n  aluminium: '#ACB5C6',\n  silver: '#FAFCFF',\n  white: '#FFFFFF'\n}\n\nexport const theme = createMuiTheme({\n  ...customTheme,\n  colors: {\n    ...colors,\n    success: colors.chromium,\n    error: colors.phosphorus,\n    danger: colors.gold\n  }\n})\n\nexport default function Theming (props) {\n  return (\n    <ThemeProvider theme={theme}>\n      {props.children}\n    </ThemeProvider>\n  )\n}\n","import { theme } from '../Theme/ThemeProvider'\n\nexport const statusColor = {\n  RUNNING: theme.colors.chromium,\n  UNKNOWN: theme.colors.aluminium,\n  OFFLINE: theme.colors.phosphorus\n}\n\nexport const msvcStatusColor = {\n  RUNNING: theme.colors.chromium,\n  UNKNOWN: theme.colors.aluminium,\n  OFFLINE: theme.colors.aluminium\n}\n\nexport const tagColor = theme.colors.cobalt\n","import React from 'react'\nimport { Modal, Paper, Typography, Button } from '@material-ui/core'\nimport CloseIcon from '@material-ui/icons/Close'\n\nimport { makeStyles } from '@material-ui/styles'\nconst useStyles = makeStyles(theme => ({\n  modalTitle: {\n    backgroundColor: theme.colors.carbon,\n    borderRadius: '4px 4px 0 0',\n    color: 'white',\n    padding: '5px',\n    display: 'flex',\n    justifyContent: 'space-between'\n  },\n  modal: {\n    width: '60%',\n    top: '15%',\n    left: '20%',\n    position: 'absolute',\n    borderRadius: '4px'\n  },\n  modalContent: {\n    maxHeight: '600px',\n    overflowY: 'scroll',\n    padding: '15px'\n  },\n  modalActions: {\n    display: 'flex',\n    backgroundColor: theme.colors.silver,\n    alignItems: 'flex-end'\n  },\n  modalAction: {\n    marginLeft: '5px'\n  }\n}))\n\nexport default function _Modal (props) {\n  const classes = useStyles()\n  const { title, open, onClose } = props\n  return (\n    <Modal\n      aria-labelledby={`${title} modal`}\n      {...{\n        open,\n        onClose\n      }}\n    >\n      <Paper className={classes.modal}>\n        <div className={classes.modalTitle}>\n          <Typography variant='h5'>{title}</Typography>\n          <CloseIcon style={{ cursor: 'pointer' }} onClick={onClose} />\n        </div>\n        <div className={classes.modalContent}>\n          {props.children}\n        </div>\n        {props.actions && !!props.actions.length &&\n          <div className={classes.modalActions}>\n            {props.actions.map(a => <Button key={a.text} className={`${a.className} ${classes.modalAction}`} {...{ variant: a.variant, onClick: a.onClick }}>{a.text}</Button>)}\n          </div>}\n      </Paper>\n    </Modal>\n  )\n}\n","import React from 'react'\nimport IconButton from '@material-ui/core/IconButton'\nimport WarningIcon from '@material-ui/icons/Warning'\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle'\nimport ErrorIcon from '@material-ui/icons/Error'\nimport InfoIcon from '@material-ui/icons/Info'\nimport CloseIcon from '@material-ui/icons/Close'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { SnackbarContent } from '@material-ui/core'\n\nconst variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon\n}\n\nconst useStyles = makeStyles(theme => ({\n  success: {\n    backgroundColor: theme.colors.success\n  },\n  error: {\n    backgroundColor: theme.colors.error\n  },\n  info: {\n    backgroundColor: theme.colors.cobalt\n  },\n  warning: {\n    backgroundColor: theme.colors.danger\n  },\n  icon: {\n    fontSize: 20\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing(1)\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  alert: {\n    margin: '5px',\n    borderRadius: '4px',\n    boxShadow: `0 4px 6px 0 ${theme.colors.carbon}`\n  },\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    position: 'fixed',\n    bottom: '10px',\n    left: '10px',\n    zIndex: '9999'\n  }\n}))\n\nexport default function Alert (props) {\n  const classes = useStyles()\n  const { open, alerts } = props\n\n  return open ? (\n    <div className={classes.container}>\n      {alerts.map((a, idx) => {\n        const handleClick = a.onClose\n        const variantKey = a.type || 'info'\n        const Icon = variantIcon[variantKey]\n        return (\n          <SnackbarContent\n            key={a.key || a.id || idx}\n            className={`${classes[variantKey]} ${classes.alert} ${a.className}`}\n            aria-describedby='client-snackbar'\n            message={\n              <span id='client-snackbar' className={classes.message}>\n                <Icon className={`${classes.icon} ${classes.iconVariant}`} />\n                {a.message}\n              </span>\n            }\n            action={[\n              <IconButton key='close' aria-label='Close' color='inherit' onClick={handleClick}>\n                <CloseIcon className={classes.icon} />\n              </IconButton>\n            ]}\n          />\n        )\n      })}\n    </div>\n  ) : null\n}\n","import React from 'react'\nimport { findIndex } from 'lodash'\nimport Alert from './Alert'\n\nexport const FeedbackContext = React.createContext({\n  feedbacks: [],\n  setFeedbacks: () => {},\n  pushFeedback: () => {}\n})\n\nexport const useFeedback = () => React.useContext(FeedbackContext)\n\nconst AUTO_HIDE = 6000\n\nconst actions = {\n  ADD: 'add',\n  REMOVE: 'remove',\n  SET: 'set'\n}\n\nconst initState = {\n  feedbacks: [],\n  nextId: 0\n}\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case actions.ADD:\n      return {\n        feedbacks: [...state.feedbacks,\n          {\n            ...action.data,\n            timeout: setTimeout(() => {\n              action.dispatch({ type: actions.REMOVE, data: { id: state.nextId } })\n            }, AUTO_HIDE),\n            id: state.nextId\n          }],\n        nextId: state.nextId + 1\n      }\n    case actions.REMOVE: {\n      const idxToRemove = findIndex(state.feedbacks, f => f.id === action.data.id)\n      if (idxToRemove === -1) return state\n      return {\n        ...state,\n        feedbacks: [...state.feedbacks.slice(0, idxToRemove), ...state.feedbacks.slice(idxToRemove + 1)]\n      }\n    }\n    case actions.SET:\n      return {\n        ...state,\n        feedbacks: action.data\n      }\n    default:\n      return state\n  }\n}\n\nexport default function Context (props) {\n  const [state, dispatch] = React.useReducer(reducer, initState)\n  const setFeedbacks = (newFeedbacks) => {\n    console.log(' ---> SetFeedbacks ')\n    dispatch({ type: actions.SET, data: newFeedbacks })\n  }\n  const pushFeedback = (newFeedback) => {\n    console.log(' ---> pushFeedback ')\n    dispatch({ type: actions.ADD, data: newFeedback, dispatch })\n    // Update current feedback array (same array will be used if multiple calls to pushFeedback in the same render loop)\n    state.feedbacks.push(newFeedback)\n  }\n\n  console.log('======> Updating feedback context')\n\n  return (\n    <FeedbackContext.Provider value={{ feedbacks: state.feedbacks, setFeedbacks, pushFeedback }}>\n      {props.children}\n      <FeedbackContext.Consumer>\n        {({ feedbacks, setFeedbacks }) =>\n          <Alert\n            open={!!feedbacks.length}\n            alerts={feedbacks.map((f, idx) => ({\n              ...f,\n              onClose: () => dispatch({ type: actions.REMOVE, data: f })\n            }))}\n          />}\n      </FeedbackContext.Consumer>\n    </FeedbackContext.Provider>\n  )\n}\n","import React, { useEffect } from 'react'\n\nconst controllerJson = window.controllerConfig\n\nconst initControllerState = (() => {\n  const localUser = window.localStorage.getItem('iofogUser')\n  if (localUser) {\n    controllerJson.user = JSON.parse(localUser)\n  }\n  return {\n    ...controllerJson,\n    api: `${window.location.protocol}//${controllerJson.ip}:${controllerJson.port || 80}/`,\n    location: {\n      lat: 'Unknown',\n      lon: 'Unknown',\n      query: controllerJson.ip\n    },\n    status: {\n      versions: {\n        controller: '',\n        ecnViewer: ''\n      }\n    }\n  }\n})()\n\nconst IPLookUp = 'http://ip-api.com/json/'\n\n// If dev mode, use proxy\n// Otherwise assume you are running on the Controller\nconst getUrl = (path) => controllerJson.dev ? `/api/controllerApi${path}` : `${window.location.protocol}//${[window.location.hostname, controllerJson.port].join(':')}${path}`\nconst getHeaders = (headers, controllerConfig) => controllerJson.dev\n  ? ({\n    ...headers,\n    'ECN-Api-Destination': controllerConfig.api\n  }) : headers\n\nexport const ControllerContext = React.createContext({\n  controller: {\n    status: {}\n  },\n  updateController: () => {}\n})\n\nexport const useController = () => React.useContext(ControllerContext)\n\nconst lookUpControllerInfo = async (controllerConfig) => {\n  if (!controllerConfig.ip) {\n    controllerConfig.ip = window.location.host.split(':')[0] // Get only ip, not port\n  }\n  const localhost = new RegExp('(0\\.0\\.0\\.0|localhost|127\\.0\\.0\\.1|192\\.168\\.)') // eslint-disable-line no-useless-escape\n  const ip = localhost.test(controllerConfig.ip) ? '8.8.8.8' : controllerConfig.ip\n  const response = await window.fetch(IPLookUp + ip)\n  if (response.ok) {\n    return response.json()\n  } else {\n    throw new Error(response.statusText)\n  }\n}\n\nconst getControllerStatus = async (controllerConfig) => {\n  const response = await await window.fetch(getUrl('/api/v3/status'), {\n    headers: getHeaders({}, controllerConfig)\n  })\n  if (response.ok) {\n    return response.json()\n  } else {\n    console.log('Controller status unreachable', { status: response.statusText })\n  }\n}\n\nconst updateControllerInfo = async (controllerConfig) => {\n  let ipInfo = {}\n  try {\n    ipInfo = await lookUpControllerInfo(controllerConfig)\n  } catch (e) {\n    ipInfo = {\n      lat: 'Unknown',\n      lon: 'Unknown',\n      query: controllerConfig.ip\n    }\n  }\n\n  return {\n    ...controllerConfig,\n    location: ipInfo,\n    status: await getControllerStatus(controllerConfig)\n  }\n}\n\nconst initState = {\n  controller: initControllerState,\n  token: null\n}\n\nconst actions = {\n  ERROR: 'Error',\n  CLEAN_ERROR: 'Clean error',\n  UPDATE: 'Update',\n  SET_TOKEN: 'Set token'\n}\n\nconst reducer = (state, action) => {\n  console.log({ state, action })\n  const newState = (() => {\n    switch (action.type) {\n      case actions.ERROR:\n        return {\n          ...state,\n          controller: {\n            ...state.controller,\n            error: action.data\n          }\n        }\n      case actions.CLEAN_ERROR:\n        return {\n          ...state,\n          controller: {\n            ...state.controller,\n            error: null\n          }\n        }\n      case actions.UPDATE:\n        return {\n          ...state,\n          controller: {\n            ...state.controller,\n            ...action.data\n          }\n        }\n      case actions.SET_TOKEN:\n        return {\n          ...state,\n          token: action.data,\n          controller: {\n            ...state.controller,\n            error: null\n          }\n        }\n      default:\n        return state\n    }\n  })()\n  newState.controller.dev = controllerJson.dev\n  return newState\n}\n\nexport default function Context (props) {\n  const [state, dispatch] = React.useReducer(reducer, initState)\n  const { token, controller } = state\n\n  const authenticate = async (controllerConfig) => {\n    const response = await window.fetch(getUrl('/api/v3/user/login'), {\n      method: 'POST',\n      headers: getHeaders({\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      }, controllerConfig),\n      body: JSON.stringify(controllerConfig.user)\n    })\n    if (response.ok) {\n      const token = (await response.json()).accessToken\n      dispatch({ type: actions.SET_TOKEN, data: token })\n      return token\n    } else {\n      dispatch({ type: actions.SET_TOKEN, data: null })\n      throw new Error(response.statusText)\n    }\n  }\n\n  // Wrapper around window.fetch to add proxy and authorization headers\n  const request = async (path, options = {}) => {\n    try {\n      let t = token\n      if (!t) {\n        t = await authenticate(controller)\n      }\n      const response = await window.fetch(getUrl(path), {\n        ...options,\n        headers: getHeaders({\n          ...options.headers,\n          Authorization: t\n        }, controller)\n      })\n      if (state.controller.error) {\n        dispatch({ type: actions.CLEAN_ERROR })\n      }\n      return response\n    } catch (err) {\n      dispatch({ type: actions.ERROR, data: err })\n      return ({\n        ok: false,\n        statusText: err.message || 'Could not reach controller'\n      })\n    }\n  }\n\n  const updateController = async (newController) => {\n    if (controllerJson.dev) { newController.api = `http://${newController.ip}:${newController.port || 80}/` }\n    window.localStorage.setItem('iofogUser', JSON.stringify(newController.user))\n    try {\n      await authenticate(newController)\n    } catch (e) {\n      dispatch({ type: actions.ERROR, data: e })\n      dispatch({ type: actions.UPDATE, data: await updateControllerInfo(newController) })\n      throw e\n    }\n    dispatch({ type: actions.UPDATE, data: await updateControllerInfo(newController) })\n  }\n\n  useEffect(() => {\n    const effect = async () => {\n      dispatch({ type: actions.UPDATE, data: await updateControllerInfo(initState.controller) })\n    }\n    effect()\n  }, [])\n\n  return (\n    <ControllerContext.Provider value={{ controller, updateController, request }}>\n      {props.children}\n    </ControllerContext.Provider>\n  )\n}\n","import React from 'react'\n\nimport { Divider, TextField, Grid, Button } from '@material-ui/core'\nimport { FeedbackContext } from '../../Utils/FeedbackContext'\n\nimport { makeStyles } from '@material-ui/styles'\nimport { ControllerContext } from '../../ControllerProvider'\nconst useStyles = makeStyles({\n  divider: {\n    margin: '5px'\n  }\n})\n\nconst initNode = {\n  name: '',\n  ip: '',\n  key: '',\n  port: 54321\n}\n\nconst newError = (message) => ({ message })\n\nexport default function ConnectNode (props) {\n  const classes = useStyles()\n  const [node, setNode] = React.useState({ ...initNode })\n  const { pushFeedback } = React.useContext(FeedbackContext)\n  const { request } = React.useContext(ControllerContext)\n\n  const handleChange = key => (event) => {\n    setNode({ ...node, [key]: event.target.value })\n  }\n\n  const createAgent = async (agent) => {\n    const response = await request('/api/v3/iofog', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(agent)\n    })\n    if (response.ok) {\n      pushFeedback({ message: 'ioFog created!', type: 'success' })\n      const a = await response.json()\n      return a.uuid\n    }\n    throw (newError(`Failed to create iofog: ${response.statusText}`))\n  }\n\n  const getProvisioningKey = async (uuid) => {\n    const response = await request(`/api/v3/iofog/${uuid}/provisioning-key`)\n    if (response.ok) {\n      const a = await response.json()\n      return a.key\n    }\n    throw (newError(`Failed to retrieve provisioning key: ${response.statusText}`))\n  }\n\n  const linkAgent = async (agent, controller) => {\n    const response = await window.fetch('api/agentApi/v2/config', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        Authorization: agent.key,\n        ioFogApi: `http://${agent.ip}:${agent.port}`\n      },\n      body: JSON.stringify({ 'controller-url': `http://${controller.ip}:${controller.port}/api/v3/` })\n    })\n    if (response.ok) {\n      pushFeedback({ message: 'Agent linked!', type: 'success' })\n      return true\n    }\n    throw (newError(`Failed to link agent: ${response.statusText}`))\n  }\n\n  const provisionAgent = async (agent, key) => {\n    const response = await window.fetch('api/agentApi/v2/provision', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        Authorization: agent.key,\n        ioFogApi: `http://${agent.ip}:${agent.port}`\n      },\n      body: JSON.stringify({ 'provisioning-key': key })\n    })\n    if (response.ok) {\n      pushFeedback({ message: 'Agent provisioned!', type: 'success' })\n      return true\n    }\n    throw (newError(`Failed to provision agent: ${response.statusText}`))\n  }\n\n  const connect = async () => {\n    try {\n      const iofogUuid = await createAgent({ name: node.name, fogType: 0 })\n      const provisioningKey = await getProvisioningKey(iofogUuid)\n      await linkAgent(node, props.controller)\n      await provisionAgent(node, provisioningKey)\n      pushFeedback({ message: 'Agent connected!', type: 'success' })\n    } catch (e) {\n      pushFeedback({ message: e.message, type: 'error', uuid: 'error' })\n    }\n  }\n\n  return (\n    <>\n      <Grid container spacing={2}>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            id='name'\n            label='Name'\n            onChange={handleChange('name')}\n            value={node.name}\n            fullWidth\n            className={classes.textField}\n            margin='normal'\n          />\n        </Grid>\n        <Grid item xs={6} sm={3}>\n          <TextField\n            id='ip'\n            label='IP'\n            onChange={handleChange('ip')}\n            value={node.ip}\n            fullWidth\n            className={classes.textField}\n            margin='normal'\n          />\n        </Grid>\n        <Grid item xs={6} sm={3}>\n          <TextField\n            id='port'\n            label='Port'\n            onChange={handleChange('port')}\n            value={node.port}\n            fullWidth\n            type='number'\n            className={classes.textField}\n            margin='normal'\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            id='key'\n            label='Authorization key'\n            onChange={handleChange('key')}\n            value={node.key}\n            fullWidth\n            className={classes.textField}\n            margin='normal'\n            helperText='Authorization key can be found in /etc/iofog-agent/local-api file'\n          />\n        </Grid>\n      </Grid>\n      <Divider className={classes.divider} />\n      <Grid container justify='flex-end'>\n        <Grid item>\n          <Button onClick={connect}>\n            Connect\n          </Button>\n        </Grid>\n      </Grid>\n    </>\n  )\n}\n","import React from 'react'\nimport Downshift from 'downshift'\nimport deburr from 'lodash/deburr'\nimport get from 'lodash/get'\nimport { MenuItem, Paper, TextField } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    height: 250\n  },\n  container: {\n    flexGrow: 1,\n    position: 'relative'\n  },\n  paper: {\n    position: 'absolute',\n    zIndex: 1,\n    marginTop: theme.spacing(1),\n    marginBot: theme.spacing(2),\n    left: 0,\n    right: 0,\n    maxHeight: '250px',\n    overflowY: 'scroll'\n  },\n  chip: {\n    margin: theme.spacing(0.5, 0.25)\n  },\n  inputRoot: {\n    flexWrap: 'wrap'\n  },\n  inputInput: {\n    width: 'auto',\n    flexGrow: 1\n  },\n  divider: {\n    height: theme.spacing(2)\n  }\n}))\n\nfunction renderInput (inputProps) {\n  const { InputProps, classes, ref, ...others } = inputProps\n  return (\n    <TextField\n      InputProps={{\n        inputRef: ref,\n        classes: {\n          root: classes.inputRoot,\n          input: classes.inputInput\n        },\n        ...InputProps\n      }}\n      {...others}\n    />\n  )\n}\n\nfunction renderSuggestion (suggestionProps) {\n  const { suggestion, index, itemProps, highlightedIndex, selectedItem } = suggestionProps\n  const isHighlighted = highlightedIndex === index\n  const isSelected = (selectedItem || {}).label === suggestion.label\n\n  return (\n    <MenuItem\n      {...itemProps}\n      key={suggestion.label}\n      selected={isHighlighted}\n      component='div'\n      style={{\n        fontWeight: isSelected ? 500 : 400\n      }}\n    >\n      {suggestion.label}\n    </MenuItem>\n  )\n}\n\nexport default function Autocomplete (props) {\n  const classes = useStyles()\n\n  const getSuggestions = (value, { showEmpty = false } = {}) => {\n    const inputValue = deburr(value.trim()).toLowerCase()\n    const inputLength = inputValue.length\n    let count = 0\n\n    return inputLength === 0 && !showEmpty\n      ? []\n      : props.suggestions.filter(suggestion => {\n        const keep = count < props.maxSuggestions && suggestion.label.toLowerCase().startsWith(inputValue.toLowerCase())\n        if (keep) {\n          count += 1\n        }\n        return keep\n      })\n  }\n\n  return (\n    <Downshift\n      itemToString={item => get(item, 'label', '')}\n      onChange={props.onChange}\n      initialSelectedItem={props.initialSelectedItem}\n      {...(props.selectedItem ? { selectedItem: props.selectedItem } : {})}\n      id='downshift-options'\n    >\n      {({\n        clearSelection,\n        getInputProps,\n        getItemProps,\n        getLabelProps,\n        getMenuProps,\n        highlightedIndex,\n        inputValue,\n        isOpen,\n        openMenu,\n        selectedItem\n      }) => {\n        const { onBlur, onChange, onFocus, ...inputProps } = getInputProps({\n          onChange: event => {\n            if (event.target.value === '') {\n              clearSelection()\n            }\n          },\n          onFocus: openMenu,\n          disabled: props.disabled || false,\n          placeholder: props.placeholder || ''\n        })\n\n        return (\n          <div className={classes.container}>\n            {renderInput({\n              fullWidth: true,\n              classes,\n              label: props.label,\n              InputLabelProps: getLabelProps({ shrink: true }),\n              InputProps: { onBlur, onChange, onFocus },\n              inputProps\n            })}\n\n            <div {...getMenuProps()}>\n              {isOpen ? (\n                <Paper className={classes.paper} square>\n                  {getSuggestions(inputValue, { showEmpty: true }).map((suggestion, index) =>\n                    renderSuggestion({\n                      suggestion,\n                      index,\n                      itemProps: getItemProps({ item: suggestion }),\n                      highlightedIndex,\n                      selectedItem\n                    })\n                  )}\n                </Paper>\n              ) : null}\n            </div>\n          </div>\n        )\n      }}\n    </Downshift>\n  )\n}\n","import React from 'react'\nimport ReactJson from 'react-json-view'\nimport get from 'lodash/get'\n\nimport { Grid, Paper, Typography, TextField, Divider, Select, Input, Button, InputLabel, FormControl, FormControlLabel, Checkbox, MenuItem } from '@material-ui/core'\nimport CloseIcon from '@material-ui/icons/Close'\nimport SwapIcon from '@material-ui/icons/SwapHoriz'\n\nimport Autocomplete from '../../Utils/Autocomplete'\n\nimport { makeStyles } from '@material-ui/styles'\nimport { FeedbackContext } from '../../Utils/FeedbackContext'\nimport { ControllerContext } from '../../ControllerProvider'\n\nconst useStyles = makeStyles({\n  divider: {\n    margin: '5px'\n  },\n  formControl: {\n    width: '100%'\n  },\n  rowIcon: {\n    display: 'flex',\n    justifyContent: 'space-around'\n  },\n  newPaper: {\n    border: '1px solid hsla(0, 0%, 0%, 0.2)',\n    boxShadow: '0 4px 6px 0 hsla(0,0%,0%,0.2)',\n    borderRadius: '4px',\n    padding: '10px',\n    marginTop: '10px'\n  },\n  inputWithIcon: { display: 'flex', alignItems: 'baseline', justifyContent: 'space-between' }\n})\n\nconst ITEM_HEIGHT = 48\nconst ITEM_PADDING_TOP = 8\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250\n    }\n  }\n}\n\nconst initMsvc = {\n  flow: {},\n  name: '',\n  catalog: {\n    images: []\n  },\n  volumeMappings: [],\n  ports: [],\n  rootHostAccess: false,\n  _new: true\n}\n\nconst initFlow = {\n  name: '',\n  isActivated: true\n}\n\nconst initCatalogItem = (fogTypeId) => ({\n  name: '',\n  images: [{\n    containerImage: '',\n    fogTypeId\n  }],\n  registryId: 1\n})\n\nconst initRoute = (from) => ({\n  from,\n  to: {}\n})\n\nconst randomString = () => Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 5)\n\nconst generateRouteSelect = (current, list, label, onChange) => {\n  const isNewMsvc = get(current, '_new', false)\n  return (\n    <Autocomplete\n      label={label}\n      placeholder='Select a microservice'\n      onChange={onChange}\n      disabled={isNewMsvc}\n      selectedItem={isNewMsvc ? list[list.length - 1] : current}\n      maxSuggestions={20}\n      suggestions={list.filter(e => !isNewMsvc ? !!e.uuid : true).map(m => ({\n        ...m,\n        label: m.name\n      }))}\n    />\n  )\n}\n\nexport default function AddMicroservice (props) {\n  const classes = useStyles()\n  const [flows, setFlows] = React.useState([])\n  const [catalog, setCatalog] = React.useState([])\n  // Due to polling, the component is re-rendering every 3 sec.\n  // To avoid JSON edit popups to be closed every 3 sec,\n  // we need to keep the config and the JSX ReactJson component as ref\n  const config = React.useRef({})\n  const ReactJsonRef = React.useRef(\n    <ReactJson src={config.current} name={false} onAdd={(e) => { config.current = e.updated_src }} onEdit={(e) => { config.current = e.updated_src }} onDelete={(e) => { config.current = e.updated_src }} />\n  )\n  const [msvc, setMsvc] = React.useState(initMsvc)\n  const [newFlow, setNewFlow] = React.useState(initFlow)\n  const [newCatalogItem, setNewCatalogItem] = React.useState(() => initCatalogItem(get(props, 'target.fogTypeId', 1)))\n  const [routes, setRoutes] = React.useState([])\n\n  const agent = props.target\n  const { pushFeedback } = React.useContext(FeedbackContext)\n  const { request } = React.useContext(ControllerContext)\n\n  React.useEffect(() => {\n    Promise.all([(async () => {\n      const flowRaw = await request('/api/v3/flow')\n      if (flowRaw.ok) {\n        const flowsRes = await flowRaw.json()\n        setFlows(flowsRes.flows)\n      }\n    })(), (async () => {\n      const catalogRaw = await request('/api/v3/catalog/microservices')\n      if (catalogRaw.ok) {\n        const catalogRes = await catalogRaw.json()\n        setCatalog(catalogRes.catalogItems.filter(item => {\n          for (const img of item.images) {\n            if (img.fogTypeId === agent.fogTypeId) { return true }\n          }\n          return false\n        })) // TODO: filter per userId\n      }\n    })()])\n  }, [agent.fogTypeId, request])\n\n  const handleChange = (key, setter, prevState) => e => setter({ ...prevState, [key]: e.target.value })\n  const handleMsvcChangeArray = (key, objKey, idx, valueDecorator = x => x) => e => setMsvc({\n    ...msvc,\n    [key]: [\n      ...msvc[key].slice(0, idx),\n      {\n        ...msvc[key][idx],\n        [objKey]: valueDecorator(e.target.value)\n      },\n      ...msvc[key].slice(idx + 1)\n    ]\n  })\n  const getCatalogImage = item => {\n    if (!get(item, 'id', null)) { return 'Select an image' }\n    for (const img of item.images) {\n      if (img.fogTypeId === agent.fogTypeId) { return img.containerImage }\n    }\n    return 'Image not found'\n  }\n\n  const addVolume = () => setMsvc({\n    ...msvc,\n    volumeMappings: [\n      ...msvc.volumeMappings,\n      {\n        hostDestination: '',\n        containerDestination: '',\n        accessMode: 'z'\n      }\n    ]\n  })\n\n  const addPort = () => setMsvc({\n    ...msvc,\n    ports: [\n      ...msvc.ports,\n      {\n        internal: '',\n        external: ''\n      }\n    ]\n  })\n\n  const removeFromArray = (key, idx) => setMsvc({\n    ...msvc,\n    [key]: [...msvc[key].slice(0, idx), ...msvc[key].slice(idx + 1)]\n  })\n\n  const addMsvc = async () => {\n    try {\n      const { name, ports, volumeMappings, rootHostAccess } = msvc\n      const response = await request('/api/v3/microservices', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          config: JSON.stringify(config.current),\n          name,\n          ports,\n          volumeMappings,\n          rootHostAccess,\n          flowId: msvc.flow.id,\n          iofogUuid: agent.uuid,\n          catalogItemId: msvc.catalog.id\n        })\n      })\n      if (response.ok) {\n        pushFeedback({ message: 'Microservice added!', type: 'success' })\n        const m = await response.json()\n        setMsvc(initMsvc)\n        return m.uuid\n      } else {\n        pushFeedback({ message: response.statusText, type: 'error' })\n      }\n    } catch (e) {\n      pushFeedback({ message: e.message })\n    }\n  }\n\n  const createFlow = async () => {\n    try {\n      const { name } = newFlow\n      const response = await request('/api/v3/flow', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newFlow)\n      })\n      if (response.ok) {\n        pushFeedback({ message: 'Flow created!', type: 'success' })\n        setNewFlow(initFlow)\n        const flow = { ...await response.json(), name }\n        setMsvc({ ...msvc, flow })\n        msvc.flow = flow\n        return true\n      } else {\n        pushFeedback({ message: response.statusText, type: 'error' })\n        return false\n      }\n    } catch (e) {\n      pushFeedback({ message: e.message })\n      return false\n    }\n  }\n\n  const createCatalogItem = async () => {\n    try {\n      const catalogItem = {\n        ...newCatalogItem,\n        name: randomString()\n      }\n      const response = await request('/api/v3/catalog/microservices', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(catalogItem)\n      })\n      if (response.ok) {\n        pushFeedback({ message: 'Image added to catalog!', type: 'success' })\n        setNewCatalogItem(initCatalogItem(agent.fogTypeId))\n        const catalog = { ...await response.json(), ...catalogItem }\n        setMsvc({ ...msvc, catalog })\n        msvc.catalog = catalog\n        return true\n      } else {\n        pushFeedback({ message: response.statusText, type: 'error' })\n        return false\n      }\n    } catch (e) {\n      pushFeedback({ message: e.message })\n      return false\n    }\n  }\n\n  const createRoute = async (route) => {\n    try {\n      const from = get(route, 'from.uuid')\n      const to = get(route, 'to.uuid')\n      const response = await request(`/api/v3/microservices/${from}/routes/${to}`, {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: ''\n      })\n      if (response.ok) {\n        pushFeedback({ message: `Route from ${route.from.name} to ${route.to.name} created !`, type: 'success' })\n        return true\n      } else {\n        pushFeedback({ message: response.statusText, type: 'error' })\n        return false\n      }\n    } catch (e) {\n      pushFeedback({ message: e.message })\n      return false\n    }\n  }\n\n  const createRoutes = async (defaultUuid) => {\n    for (const route of routes) {\n      if (!route.from.uuid) {\n        route.from.uuid = defaultUuid\n      }\n      if (!route.to.uuid) {\n        route.to.uuid = defaultUuid\n      }\n      await createRoute(route)\n    }\n  }\n\n  const createMsvc = async () => {\n    let success = true\n    try {\n      if (msvc.flow.id === -1) {\n        success = await createFlow()\n      }\n      if (success && msvc.catalog.id === -1) {\n        success = await createCatalogItem()\n      }\n      if (success) {\n        const uuid = await addMsvc()\n        await createRoutes(uuid)\n        props.onSuccess()\n      }\n    } catch (e) {\n\n    }\n  }\n\n  const routeList = (props.microservices || [])\n    .map(m => ({\n      ...m,\n      label: m.name\n    }))\n    .concat([{\n      ...msvc,\n      label: msvc.name ? msvc.name : '<New microservice>'\n    }])\n\n  return (\n    <>\n      <Grid container spacing={2}>\n        <Grid item xs={12} sm={6}>\n          <FormControl className={classes.formControl}>\n            <Autocomplete\n              label='Flow'\n              placeholder='Select a flow'\n              onChange={(selected, state) => {\n                handleChange('flow', setMsvc, msvc)({ target: { value: selected || {} } })\n              }}\n              maxSuggestions={20}\n              suggestions={flows.map(f => ({\n                ...f,\n                label: f.name\n              })).concat([{\n                id: -1,\n                label: '+ Add a flow'\n              }])}\n            />\n          </FormControl>\n          {msvc.flow.id === -1 &&\n            <Paper className={classes.newPaper}>\n              <Typography variant='subtitle2'>New flow</Typography>\n              <TextField\n                id='name'\n                label='Name'\n                required\n                onChange={handleChange('name', setNewFlow, newFlow)}\n                value={newFlow.name}\n                fullWidth\n                className={classes.textField}\n                margin='normal'\n              />\n              <FormControlLabel\n                style={{ color: 'rgba(0, 0, 0, 0.54)' }}\n                control={\n                  <Checkbox\n                    checked={newFlow.isActivated}\n                    onChange={e => setNewFlow({ ...newFlow, isActivated: e.target.checked })}\n                    value='checkedB'\n                    color='primary'\n                  />\n                }\n                label='Active'\n              />\n            </Paper>}\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <FormControl className={classes.formControl}>\n            <Autocomplete\n              label='Image'\n              placeholder='Select an image'\n              onChange={(selected, state) => {\n                handleChange('catalog', setMsvc, msvc)({ target: { value: selected || {} } })\n              }}\n              maxSuggestions={20}\n              suggestions={catalog.map(m => ({\n                ...m,\n                label: getCatalogImage(m)\n              })).concat([{\n                id: -1,\n                label: '+ Add an image'\n              }])}\n            />\n          </FormControl>\n          {msvc.catalog.id === -1 &&\n            <Paper className={classes.newPaper}>\n              <Typography variant='subtitle2'>New image</Typography>\n              <TextField\n                id='name'\n                label='Name'\n                required\n                onChange={e => setNewCatalogItem({\n                  ...newCatalogItem,\n                  images: [{\n                    ...newCatalogItem.images[0],\n                    containerImage: e.target.value\n                  }]\n                })}\n                value={newCatalogItem.images[0].containerImage}\n                fullWidth\n                className={classes.textField}\n                margin='normal'\n              />\n            </Paper>}\n        </Grid>\n      </Grid>\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <TextField\n            id='name'\n            label='Name'\n            required\n            onChange={handleChange('name', setMsvc, msvc)}\n            value={msvc.name}\n            fullWidth\n            className={classes.textField}\n            margin='normal'\n          />\n        </Grid>\n      </Grid>\n      <Divider className={classes.divider} />\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <Typography style={{ color: 'rgba(0, 0, 0, 0.54)' }} variant='subtitle1'>Configuration</Typography><br />\n          {ReactJsonRef.current}\n        </Grid>\n      </Grid>\n      <Divider className={classes.divider} />\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <Typography style={{ color: 'rgba(0, 0, 0, 0.54)' }} variant='subtitle1'>Volumes</Typography><br />\n          {msvc.volumeMappings.map((v, idx) =>\n            <Grid container spacing={2} key={idx} style={{ alignItems: 'flex-end' }}>\n              <Grid item xs={11}>\n                <Grid container spacing={2}>\n                  <Grid item xs={12} sm={4}>\n                    <TextField\n                      id='host'\n                      label='Host'\n                      required\n                      onChange={handleMsvcChangeArray('volumeMappings', 'hostDestination', idx)}\n                      value={v.hostDestination}\n                      fullWidth\n                      className={classes.textField}\n                      margin='dense'\n                    />\n                  </Grid>\n                  <Grid item xs={12} sm={4}>\n                    <TextField\n                      id='Container'\n                      label='Container'\n                      required\n                      onChange={handleMsvcChangeArray('volumeMappings', 'containerDestination', idx)}\n                      value={v.containerDestination}\n                      fullWidth\n                      className={classes.textField}\n                      margin='dense'\n                    />\n                  </Grid>\n                  <Grid item xs={12} sm={4}>\n                    <FormControl className={classes.formControl} style={{ marginTop: '5px' }}>\n                      <InputLabel htmlFor='select-flow'>Access mode</InputLabel>\n                      <Select\n                        required\n                        value={v.accessMode}\n                        onChange={handleMsvcChangeArray('volumeMappings', 'accessMode', idx)}\n                        input={<Input id='select-flow-input' />}\n                        MenuProps={MenuProps}\n                      >\n                        <MenuItem value='z'>Z</MenuItem>\n                      </Select>\n                    </FormControl>\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid item xs={1} className={classes.rowIcon}>\n                <CloseIcon style={{ cursor: 'pointer' }} onClick={() => removeFromArray('volumeMappings', idx)} />\n              </Grid>\n            </Grid>\n          )}\n          <Typography style={{ color: 'rgba(0, 0, 0, 0.54)', cursor: 'pointer' }} variant='caption' onClick={() => addVolume()}>+ Add</Typography>\n        </Grid>\n      </Grid>\n      <Divider className={classes.divider} />\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <Typography style={{ color: 'rgba(0, 0, 0, 0.54)' }} variant='subtitle1'>Ports</Typography><br />\n          {msvc.ports.map((p, idx) =>\n            <Grid container spacing={2} key={idx} style={{ alignItems: 'flex-end' }}>\n              <Grid item xs={11}>\n                <Grid container spacing={2}>\n                  <Grid item xs={12} sm={6}>\n                    <TextField\n                      id='host'\n                      label='External'\n                      required\n                      type='number'\n                      onChange={handleMsvcChangeArray('ports', 'external', idx, parseInt)}\n                      value={p.external}\n                      fullWidth\n                      className={classes.textField}\n                      margin='dense'\n                    />\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                    <TextField\n                      id='Container'\n                      label='Internal'\n                      required\n                      fullWidth\n                      type='number'\n                      onChange={handleMsvcChangeArray('ports', 'internal', idx, parseInt)}\n                      value={p.internal}\n                      className={classes.textField}\n                      margin='dense'\n                    />\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid item xs={1} className={classes.rowIcon}>\n                <CloseIcon style={{ cursor: 'pointer' }} onClick={() => removeFromArray('ports', idx)} />\n              </Grid>\n            </Grid>\n          )}\n          <Typography style={{ color: 'rgba(0, 0, 0, 0.54)', cursor: 'pointer' }} variant='caption' onClick={() => addPort()}>+ Add</Typography>\n        </Grid>\n      </Grid>\n      <Divider className={classes.divider} />\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <Typography style={{ color: 'rgba(0, 0, 0, 0.54)' }} variant='subtitle1'>Routes</Typography><br />\n          {routes.map((r, idx) =>\n            <Grid container spacing={2} key={idx} style={{ alignItems: 'flex-end' }}>\n              <Grid item xs={11}>\n                <Grid container spacing={2} style={{ alignItems: 'flex-end' }}>\n                  <Grid item xs={12} sm={5}>\n                    {generateRouteSelect(r.from, routeList, 'From', selected => setRoutes([\n                      ...routes.slice(0, idx),\n                      {\n                        ...r,\n                        from: selected || {}\n                      },\n                      ...routes.slice(idx + 1)\n                    ]))}\n                  </Grid>\n                  <Grid item xs={2} className={classes.rowIcon}>\n                    <SwapIcon\n                      style={{ cursor: 'pointer' }} onClick={() => setRoutes([\n                        ...routes.slice(0, idx),\n                        {\n                          ...r,\n                          from: r.to,\n                          to: r.from\n                        },\n                        ...routes.slice(idx + 1)\n                      ])}\n                    />\n                  </Grid>\n                  <Grid item xs={12} sm={5}>\n                    {generateRouteSelect(r.to, routeList, 'To', selected => setRoutes([\n                      ...routes.slice(0, idx),\n                      {\n                        ...r,\n                        to: selected || {}\n                      },\n                      ...routes.slice(idx + 1)\n                    ]))}\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid item xs={1} className={classes.rowIcon}>\n                <CloseIcon style={{ cursor: 'pointer' }} onClick={() => setRoutes([...routes.slice(0, idx), ...routes.slice(idx + 1)])} />\n              </Grid>\n            </Grid>\n          )}\n          <Typography style={{ color: 'rgba(0, 0, 0, 0.54)', cursor: 'pointer' }} variant='caption' onClick={() => setRoutes([...routes, initRoute(msvc)])}>+ Add</Typography>\n        </Grid>\n      </Grid>\n      <Divider className={classes.divider} />\n      <FormControlLabel\n        style={{ color: 'rgba(0, 0, 0, 0.54)' }}\n        control={\n          <Checkbox\n            checked={msvc.rootHostAccess}\n            onChange={e => setMsvc({ ...msvc, rootHostAccess: e.target.checked })}\n            value='checkedB'\n            color='primary'\n          />\n        }\n        label='Root host access'\n      />\n      <Divider className={classes.divider} />\n      <Grid container justify='flex-end'>\n        <Grid item>\n          <Button onClick={createMsvc}>\n            Add\n          </Button>\n        </Grid>\n      </Grid>\n    </>\n  )\n}\n","import React from 'react'\n\nimport { FormControl, Divider, Grid, Button, Input, InputLabel, Select, MenuItem, Checkbox, ListItemText, Chip } from '@material-ui/core'\n\nimport { makeStyles } from '@material-ui/styles'\nimport { FeedbackContext } from '../../Utils/FeedbackContext'\nimport { ControllerContext } from '../../ControllerProvider'\nconst useStyles = makeStyles({\n  chips: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  chip: {\n    margin: 2\n  },\n  formControl: {\n    width: '100%',\n    marginBottom: '15px'\n  },\n  divider: {\n    margin: '5px'\n  }\n})\n\nconst ITEM_HEIGHT = 48\nconst ITEM_PADDING_TOP = 8\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250\n    }\n  }\n}\n\nexport default function RemoveMicroservice (props) {\n  const classes = useStyles()\n  const [msvcsToRemove, setMsvcsToRemove] = React.useState([])\n  const { pushFeedback } = React.useContext(FeedbackContext)\n  const { request } = React.useContext(ControllerContext)\n\n  function handleChange (event) {\n    setMsvcsToRemove(event.target.value)\n  }\n\n  const remove = async () => {\n    try {\n      let success = true\n      for (const uuid of msvcsToRemove) {\n        const res = request(`/api/v3/microservices/${uuid}`, {\n          method: 'DELETE'\n        })\n        if (!res.ok) {\n          success = false\n          pushFeedback({ message: `${msvcsPerUUID[uuid].name}: ${res.statusText}`, type: 'error', uuid })\n        } else {\n          const idx = msvcsToRemove.indexOf(uuid)\n          setMsvcsToRemove([...msvcsToRemove.slice(0, idx), ...msvcsToRemove.slice(idx + 1)])\n        }\n      }\n      if (success) {\n        pushFeedback({ message: 'Microservices removed', type: 'success', uuid: 'success' })\n        props.onSuccess()\n      }\n    } catch (e) {\n      pushFeedback({ message: e.message, type: 'error', uuid: 'error' })\n    }\n  }\n\n  const { msvcs } = props\n\n  const msvcsPerUUID = msvcs.reduce((r, m) => ({\n    ...r,\n    [m.uuid]: m\n  }), {})\n\n  return (\n    <>\n      <FormControl className={classes.formControl}>\n        <InputLabel htmlFor='select-multiple-checkbox'>Microservices to remove</InputLabel>\n        <Select\n          multiple\n          value={msvcsToRemove}\n          onChange={handleChange}\n          input={<Input id='select-multiple-checkbox-rm-msvcs' />}\n          renderValue={selected => (\n            <div className={classes.chips}>\n              {selected.map(uuid => (\n                msvcsPerUUID[uuid] && <Chip key={uuid} label={msvcsPerUUID[uuid].name} className={classes.chip} />\n              ))}\n            </div>\n          )}\n          MenuProps={MenuProps}\n        >\n          {msvcs.map(m => (\n            <MenuItem key={m.uuid} value={m.uuid}>\n              <Checkbox checked={msvcsToRemove.indexOf(m.uuid) > -1} />\n              <ListItemText primary={m.name} />\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n      <Divider className={classes.divider} />\n      <Grid container justify='flex-end'>\n        <Grid item>\n          <Button onClick={remove}>\n            Remove\n          </Button>\n        </Grid>\n      </Grid>\n    </>\n  )\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Tabs from '@material-ui/core/Tabs'\nimport Tab from '@material-ui/core/Tab'\nimport Typography from '@material-ui/core/Typography'\n\nfunction TabContainer (props) {\n  return (\n    <Typography component='div' style={{ padding: 8 * 3 }}>\n      {props.children}\n    </Typography>\n  )\n}\n\nTabContainer.propTypes = {\n  children: PropTypes.node.isRequired\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper\n  }\n}))\n\nexport default function SimpleTabs (props) {\n  const classes = useStyles()\n  const [value, setValue] = React.useState(0)\n\n  function handleChange (event, newValue) {\n    setValue(newValue)\n  }\n\n  return (\n    <div className={classes.root}>\n      <Tabs value={value} onChange={handleChange}>\n        {props.children.map((child, idx) => {\n          return (\n            <Tab key={child.id || idx} label={child.props.title} />\n          )\n        })}\n      </Tabs>\n      <TabContainer>{props.children[value]}</TabContainer>\n    </div>\n  )\n}\n","import React from 'react'\nimport ReactJson from 'react-json-view'\nimport Skeleton from 'react-loading-skeleton'\n\nimport { List, ListItem, ListSubheader, ListItemAvatar, Chip, Avatar, ListItemText, Menu, MenuItem } from '@material-ui/core'\n\nimport MoreIcon from '@material-ui/icons/MoreVert'\nimport MemoryIcon from '@material-ui/icons/Memory'\n\nimport { makeStyles } from '@material-ui/styles'\n\nimport { statusColor, msvcStatusColor, tagColor } from '../utils'\nimport Modal from '../../Utils/Modal'\n\nimport ConnectNode from './ConnectNode'\nimport AddMicroservice from './AddMicroservice'\nimport RemoveMicroservice from './RemoveMicroservice'\nimport SimpleTabs from '../../Utils/Tabs'\nimport Icon from '@material-ui/core/Icon'\n\nconst useStyles = makeStyles(theme => ({\n  avatarList: {\n    color: 'white',\n    backgroundColor: 'var(--statusColor, white)',\n    boxShadow: `0px 2px 2px ${theme.colors.carbon}`\n  },\n  msvcChipList: {\n    display: 'flex',\n    flexDirection: 'column',\n    width: '20%',\n    flex: '1',\n    paddingRight: '15px'\n  },\n  msvcChip: {\n    marginTop: 'var(--mTop, 0px)',\n    backgroundColor: `var(--color, ${theme.colors.cobalt})`,\n    fontSize: '10px',\n    borderRadius: '5px',\n    height: '20px',\n    margin: '2px',\n    width: '100px',\n    color: 'white',\n    '& .MuiChip-label': {\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap',\n      overflow: 'hidden',\n      display: 'block'\n    }\n  },\n  jsonDisplay: {\n    width: '99%',\n    minHeight: '30rem',\n    fontFamily: '\"Lucida Console\", Monaco, monospace',\n    fontSize: '0.8rem',\n    lineHeight: '1.2'\n  },\n  listTitle: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'baseline',\n    color: theme.palette.text.primary\n  },\n  link: {\n    color: theme.palette.text.secondary,\n    cursor: 'pointer',\n    '&:hover': {\n      textDecoration: 'underline'\n    }\n  }\n}))\n\nconst TagChip = ({ tag, first }) => {\n  const classes = useStyles()\n  if (!tag.icon) {\n    return (\n      <Chip\n        size='small'\n        label={tag.value}\n        style={{\n          '--mTop': first ? '0px' : '2px',\n          '--color': tag.color || tagColor,\n          color: 'white'\n        }}\n        className={classes.msvcChip}\n        title={tag.value}\n      />)\n  }\n  return (\n    <Chip\n      icon={<Icon style={{ fontSize: 16, color: 'white' }}>{tag.icon}</Icon>}\n      size='small'\n      label={tag.value}\n      style={{\n        '--mTop': first ? '0px' : '2px',\n        '--color': tag.color || tagColor,\n        color: 'white'\n      }}\n      className={classes.msvcChip}\n      title={tag.value}\n    />\n  )\n}\n\nexport default function AgentList (props) {\n  const classes = useStyles()\n  const [openDetailsModal, setOpenDetailsModal] = React.useState(false)\n  const [openConnectNodeModal, setOpenConnectNodeModal] = React.useState(false)\n  const [openAddMicroserviceModal, setOpenAddMicroserviceModal] = React.useState(false)\n  const [openRemoveMicroserviceModal, setOpenRemoveMicroserviceModal] = React.useState(false)\n  const [menuAnchorEl, setMenuAnchorEl] = React.useState(null)\n  const { msvcsPerAgent, msvcs, agents, agent, setAgent, setAutozoom, loading } = props\n\n  const handleCloseMenu = () => setMenuAnchorEl(null)\n  const openMenu = (e) => setMenuAnchorEl(e.currentTarget)\n  const openDetails = () => {\n    setOpenDetailsModal(true)\n    handleCloseMenu()\n  }\n  // const openAddMicroservice = () => {\n  //   setOpenAddMicroserviceModal(true)\n  //   handleCloseMenu()\n  // }\n  // const openRemoveMicroservice = () => {\n  //   setOpenRemoveMicroserviceModal(true)\n  //   handleCloseMenu()\n  // }\n\n  return (\n    <>\n      <List\n        subheader={\n          <ListSubheader component='div' id='agent-list-subheader' style={{ position: 'relative', marginBottom: '5px' }} disableGutters disableSticky>\n            <div className={classes.listTitle}>\n              <div>\n                {/* <Typography variant='h5'><small>{loading ? 0 : agents.length} nodes</small></Typography> */}\n              </div>\n              <div>\n                <small className={classes.link} onClick={() => setAutozoom(true)}>See all ECN</small>\n              </div>\n            </div>\n          </ListSubheader>\n        }\n      >\n        {(loading ? [1, 2, 3].map((idx) => <ListItem key={idx}><ListItemText><Skeleton height={72} /></ListItemText></ListItem>) : agents.map(a => {\n          const msvcs = msvcsPerAgent[a.uuid] || []\n          const edgeResources = a.edgeResources || []\n          return (\n            <ListItem button key={a.uuid} onClick={() => setAgent(a)} selected={a.uuid === agent.uuid}>\n              <ListItemAvatar>\n                <Avatar style={{ '--statusColor': statusColor[a.daemonStatus] }} className={classes.avatarList}>\n                  <MemoryIcon />\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText primary={a.name} secondary={`${msvcs.length} Microservices`} />\n              <div className={classes.msvcChipList}>\n                {edgeResources.map((eR, idx) => (\n                  <TagChip key={eR.name} tag={{ value: eR.display ? eR.display.name : eR.name, ...eR.display }} first={!idx} />\n                ))}\n              </div>\n              <div className={classes.msvcChipList}>\n                {msvcs.length > 4\n                  ? (\n                    <Chip\n                      size='small'\n                      label={`${msvcs.length} microservices`}\n                      style={{\n                        '--mTop': '0px',\n                        '--color': msvcStatusColor[(a.daemonStatus === 'RUNNING') ? 'RUNNING' : 'UNKNOWN']\n                      }}\n                      className={classes.msvcChip}\n                      title={`${msvcs.length} microservices`}\n                    />\n                  )\n                  : msvcs.map((m, idx) => (\n                    <React.Fragment key={m.uuid}>\n                      <Chip\n                        size='small'\n                        label={m.name}\n                        style={{\n                          '--mTop': idx ? '2px' : '0px',\n                          '--color': msvcStatusColor[(a.daemonStatus === 'RUNNING' && m.status.status === 'RUNNING' && m.flowActive) ? 'RUNNING' : 'UNKNOWN']\n                        }}\n                        className={classes.msvcChip}\n                        title={m.name}\n                      />\n                    </React.Fragment>\n                  ))}\n              </div>\n              <MoreIcon onClick={openMenu} />\n            </ListItem>\n          )\n        }))}\n      </List>\n      <Modal\n        {...{\n          open: openDetailsModal,\n          title: `${agent.name} details`,\n          onClose: () => setOpenDetailsModal(false)\n        }}\n      >\n        <SimpleTabs>\n          <ReactJson title='Agent' src={agent} name={false} />\n          <ReactJson title='Microservices' src={msvcsPerAgent[agent.uuid]} name={false} />\n        </SimpleTabs>\n      </Modal>\n      <Modal\n        {...{\n          open: openAddMicroserviceModal,\n          title: `Deploy microservice to ${agent.name}`,\n          onClose: () => setOpenAddMicroserviceModal(false)\n        }}\n      >\n        <AddMicroservice {...{\n          target: agent,\n          microservices: msvcs,\n          onSuccess: () => setOpenAddMicroserviceModal(false)\n        }}\n        />\n      </Modal>\n      <Modal\n        {...{\n          open: openRemoveMicroserviceModal,\n          title: `Remove microservice from ${agent.name}`,\n          onClose: () => setOpenRemoveMicroserviceModal(false)\n        }}\n      >\n        <RemoveMicroservice\n          {...{\n            target: agent,\n            msvcs: msvcsPerAgent[agent.uuid] || [],\n            onSuccess: () => setOpenRemoveMicroserviceModal(false)\n          }}\n        />\n      </Modal>\n      <Modal\n        {...{\n          open: openConnectNodeModal,\n          title: 'Connect agent',\n          onClose: () => setOpenConnectNodeModal(false)\n        }}\n      >\n        <ConnectNode\n          {...{\n            controller: props.controller,\n            onSuccess: () => setOpenConnectNodeModal(false)\n          }}\n        />\n      </Modal>\n      <Menu\n        id='agent-menu'\n        anchorEl={menuAnchorEl}\n        keepMounted\n        open={Boolean(menuAnchorEl)}\n        onClose={handleCloseMenu}\n      >\n        <MenuItem onClick={openDetails}>Details</MenuItem>\n        {/* <Divider />\n        <MenuItem onClick={openAddMicroservice}>Add microservice</MenuItem>\n        <MenuItem onClick={openRemoveMicroservice}>Remove microservice</MenuItem> */}\n      </Menu>\n    </>\n  )\n}\n","import React from 'react'\nimport { useDrop } from 'react-dnd'\nimport { NativeTypes } from 'react-dnd-html5-backend'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { CircularProgress } from '@material-ui/core'\n\nconst { FILE } = NativeTypes\n\nconst useStyles = makeStyles(theme => ({\n  dropZone: {\n    width: '100%',\n    border: '1px dashed',\n    height: '50px',\n    // padding: '1rem',\n    textAlign: 'center',\n    verticalAlign: 'center',\n    borderRadius: '4px',\n    background: 'aliceblue',\n    color: theme.colors.carbon,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  active: {\n    backgroundColor: '#d8dfe5'\n    // border: '1px solid'\n  }\n}))\n\nexport default function FileDrop (props) {\n  const classes = useStyles()\n  const [collectedProps, drop] = useDrop({\n    accept: FILE,\n    drop: props.onDrop,\n    collect: (monitor) => ({\n      highlighted: monitor.canDrop(),\n      hovered: monitor.isOver()\n    })\n  })\n\n  const active = collectedProps.hovered && collectedProps.highlighted\n  const className = [\n    classes.dropZone,\n    (collectedProps.hovered ? classes.hovered : ''),\n    (collectedProps.highlighted ? classes.highlighted : ''),\n    (active ? classes.active : '')\n  ].join(' ')\n\n  return props.loading\n    ? (\n      <div className={className}><CircularProgress size={24} /></div>\n    )\n    : (\n      <div className={className} ref={drop}>\n        {active ? 'Release to drop' : props.children}\n      </div>\n    )\n}\n","export const API_VERSIONS = ['iofog.org/v1', 'iofog.org/v2']\nexport default {\n  API_VERSIONS\n}\n","import { get as lget, set as lset } from 'lodash'\nimport React from 'react'\nimport { useController } from '../../ControllerProvider'\nimport { theme } from '../../Theme/ThemeProvider'\n\nexport const ConfigContext = React.createContext()\nexport const useConfig = () => React.useContext(ConfigContext)\n\nconst _initConfig = {\n  tags: {}\n}\n\nconst defaultTagColor = theme.colors.cobalt\n\nconst ecnViewerConfigKey = 'ecn-viewer-config'\n\nexport const ConfigProvider = ({\n  children\n}) => {\n  const { request } = useController()\n  const [config, setConfig] = React.useState(_initConfig)\n\n  const _fetchConfig = async () => {\n    try {\n      const res = await request(`/api/v3/config/${ecnViewerConfigKey}`)\n      if (res.ok) {\n        const { value: stringifiedConfig } = await res.json()\n        setConfig(JSON.parse(stringifiedConfig))\n      }\n    } catch (e) {\n\n    }\n  }\n\n  const saveConfig = async (newConfig) => {\n    const res = await request('/api/v3/config', {\n      method: 'PUT',\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        key: ecnViewerConfigKey,\n        value: JSON.stringify(newConfig)\n      })\n    })\n    if (res.ok) {\n      setConfig(newConfig)\n    }\n    return res\n  }\n\n  const getTagDisplayInfo = value => {\n    return { ...lget(config, `tags['${value}']`, { color: defaultTagColor }), value }\n  }\n\n  const updateTags = (agents = []) => {\n    let updated = false\n    for (const agent of agents) {\n      if (agent.tags) {\n        for (const tag of agent.tags) {\n          if (!lget(config, `tags['${tag}']`)) {\n            updated = true\n            lset(config, `tags['${tag}']`, { icon: '', color: defaultTagColor })\n          }\n        }\n      }\n    }\n    if (updated) {\n      setConfig(config)\n    }\n  }\n\n  React.useEffect(() => {\n    _fetchConfig()\n  }, [])\n\n  const isDebug = window.location.search.includes('debug=true')\n  return (\n    <ConfigContext.Provider\n      value={{\n        isDebug,\n        editConfig: setConfig,\n        updateTags,\n        getTagDisplayInfo,\n        saveConfig,\n        config\n      }}\n    >\n      {children}\n    </ConfigContext.Provider>\n  )\n}\n","import React from 'react'\nimport { isFinite, get } from 'lodash'\nimport { fitBounds } from 'google-map-react/utils'\n\nimport mapStyle from './mapStyle.json'\n\nexport const MapContext = React.createContext()\nexport const useMap = () => React.useContext(MapContext)\n\nconst hasValidCoordinates = (coordinates) => {\n  return isFinite(coordinates[0]) && isFinite(coordinates[1])\n}\n\nexport const MapProvider = ({\n  children\n}) => {\n  const mapRef = React.useRef()\n  const [map, _setMap] = React.useState({\n    center: [0, 0],\n    zoom: 15,\n    options: {\n      styles: mapStyle\n    }\n  })\n\n  const setMap = (agents, controllerInfo, includeController) => {\n    const newMap = {}\n    const bounds = new window.google.maps.LatLngBounds() // need handler incase `google` not yet available\n\n    const validAgents = agents.filter(a => hasValidCoordinates([a.latitude, a.longitude]))\n    console.log({ agents, validAgents })\n\n    if (!validAgents.length) {\n      newMap.center = [get(controllerInfo, 'location.lat', 0), get(controllerInfo, 'location.lon', 0)]\n      newMap.zoom = 9\n      _setMap({ ...map, ...newMap })\n      return\n    } else if (validAgents.length === 1 && !includeController) {\n      newMap.center = [get(validAgents[0], 'latitude', 0), get(validAgents[0], 'longitude', 0)]\n      newMap.zoom = 9\n      _setMap({ ...map, ...newMap })\n      return\n    }\n\n    validAgents.forEach(marker => {\n      bounds.extend(new window.google.maps.LatLng(get(marker, 'latitude', 0), get(marker, 'longitude', 0)))\n    })\n\n    if (includeController) {\n      bounds.extend(new window.google.maps.LatLng(get(controllerInfo, 'location.lat', 0), get(controllerInfo, 'location.lon', 0)))\n    }\n\n    const newBounds = {\n      ne: {\n        lat: bounds.getNorthEast().lat(),\n        lng: bounds.getNorthEast().lng()\n      },\n      sw: {\n        lat: bounds.getSouthWest().lat(),\n        lng: bounds.getSouthWest().lng()\n      }\n    }\n\n    const size = {\n      width: get(mapRef, 'current.offsetWidth', 600),\n      height: get(mapRef, 'current.offsetHeight', 800)\n    }\n\n    const { center, zoom } = fitBounds(newBounds, size)\n    newMap.center = center\n    newMap.zoom = zoom\n    _setMap({ ...map, ...newMap })\n  }\n\n  return (\n    <MapContext.Provider\n      value={{\n        map,\n        mapRef,\n        hasValidCoordinates,\n        setMap\n      }}\n    >\n      {children}\n    </MapContext.Provider>\n  )\n}\n","import React from 'react'\nimport ReactJson from 'react-json-view'\nimport Skeleton from 'react-loading-skeleton'\nimport yaml from 'js-yaml'\n\nimport { List, ListItem, ListSubheader, Divider, ListItemAvatar, Chip, Avatar, ListItemText, Menu, MenuItem, Dialog, DialogContent, DialogActions, DialogTitle, DialogContentText, Button } from '@material-ui/core'\n\nimport MoreIcon from '@material-ui/icons/MoreVert'\nimport AppsIcon from '@material-ui/icons/ViewQuilt'\n\nimport { makeStyles } from '@material-ui/styles'\n\nimport { statusColor, msvcStatusColor, tagColor } from '../utils'\nimport Modal from '../../Utils/Modal'\nimport FileDrop from '../../Utils/FileDrop'\nimport { API_VERSIONS } from '../../Utils/constants'\n\nimport Icon from '@material-ui/core/Icon'\nimport { useConfig } from '../../providers/Config'\nimport { useMap } from '../../providers/Map'\nimport { useController } from '../../ControllerProvider'\nimport { useFeedback } from '../../Utils/FeedbackContext'\nimport { get as lget, uniqBy } from 'lodash'\n\nconst useStyles = makeStyles(theme => ({\n  avatarList: {\n    color: 'white',\n    backgroundColor: 'var(--statusColor, white)',\n    boxShadow: `0px 2px 2px ${theme.colors.carbon}`\n  },\n  msvcChipList: {\n    display: 'flex',\n    flexDirection: 'column',\n    width: '20%',\n    flex: '1',\n    paddingRight: '15px'\n  },\n  msvcChip: {\n    marginTop: 'var(--mTop, 0px)',\n    backgroundColor: `var(--color, ${theme.colors.cobalt})`,\n    fontSize: '10px',\n    borderRadius: '5px',\n    height: '20px',\n    margin: '2px',\n    width: '100px',\n    color: 'white',\n    '& .MuiChip-label': {\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap',\n      overflow: 'hidden',\n      display: 'block'\n    }\n  },\n  jsonDisplay: {\n    width: '99%',\n    minHeight: '30rem',\n    fontFamily: '\"Lucida Console\", Monaco, monospace',\n    fontSize: '0.8rem',\n    lineHeight: '1.2'\n  },\n  listTitle: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'baseline',\n    height: '50px',\n    color: theme.palette.text.primary\n  },\n  link: {\n    color: theme.palette.text.secondary,\n    cursor: 'pointer',\n    '&:hover': {\n      textDecoration: 'underline'\n    }\n  }\n}))\n\nconst TagChip = ({ tag, first }) => {\n  const classes = useStyles()\n  if (!tag.icon) {\n    return (\n      <Chip\n        size='small'\n        label={tag.value}\n        style={{\n          '--mTop': first ? '0px' : '2px',\n          '--color': tag.color || tagColor,\n          color: 'white'\n        }}\n        className={classes.msvcChip}\n        title={tag.value}\n      />)\n  }\n  return (\n    <Chip\n      icon={<Icon style={{ fontSize: 16, color: 'white' }}>{tag.icon}</Icon>}\n      size='small'\n      label={tag.value}\n      style={{\n        '--mTop': first ? '0px' : '2px',\n        '--color': tag.color || tagColor,\n        color: 'white'\n      }}\n      className={classes.msvcChip}\n      title={tag.value}\n    />\n  )\n}\n\nexport default function ApplicationList ({ applications, loading, setAutozoom, agents, controllerInfo }) {\n  const classes = useStyles()\n  const { getTagDisplayInfo } = useConfig()\n  const { request } = useController()\n  const { setMap } = useMap()\n  const { pushFeedback } = useFeedback()\n  const [fileParsing, setFileParsing] = React.useState(false)\n  const [openDetailsModal, setOpenDetailsModal] = React.useState(false)\n  const [openStartStopModal, setOpenStartStopModal] = React.useState(false)\n  const [openDeleteApplicationModal, setOpenDeleteApplicationModal] = React.useState(false)\n  const [menuAnchorEl, setMenuAnchorEl] = React.useState(null)\n  const [application, setApplication] = React.useState(applications[0] || {})\n  const [agentsByName, setAgentsByName] = React.useState((agents || {}).reduce((res, agent) => { res[agent.name] = agent; return res }, {}))\n  const [agentsByUUID, setAgentsByUUID] = React.useState((agents || {}).reduce((res, agent) => { res[agent.uuid] = agent; return res }, {}))\n\n  React.useEffect(() => {\n    const reduced = (agents || []).reduce((res, agent) => { res.byName[agent.name] = agent; res.byUUID[agent.uuid] = agent; return res }, {\n      byName: {},\n      byUUID: {}\n    })\n    setAgentsByName(reduced.byName)\n    setAgentsByUUID(reduced.byUUID)\n  }, [agents])\n\n  const handleCloseMenu = () => setMenuAnchorEl(null)\n  const openMenu = (e) => setMenuAnchorEl(e.currentTarget)\n  const openDetails = () => {\n    setOpenDetailsModal(true)\n    handleCloseMenu()\n  }\n  const openStartStop = () => {\n    setOpenStartStopModal(true)\n    handleCloseMenu()\n  }\n  const openDeleteApplication = () => {\n    setOpenDeleteApplicationModal(true)\n    handleCloseMenu()\n  }\n\n  const toggleApplication = async (application) => {\n    try {\n      const res = await request(`/api/v3/application/${application.name}`, {\n        method: 'PATCH',\n        headers: {\n          'content-type': 'application/json'\n        },\n        body: JSON.stringify({ isActivated: !application.isActivated })\n      })\n      if (res.ok) {\n        pushFeedback({ message: application.isActivated ? 'Application stopped!' : 'Application started!', type: 'success' })\n        setOpenStartStopModal(false)\n      } else {\n        pushFeedback({ message: res.statusText, type: 'error' })\n      }\n    } catch (e) {\n      pushFeedback({ message: e.message, type: 'error' })\n    }\n  }\n\n  const deleteApplication = async (application) => {\n    try {\n      const res = await request(`/api/v3/application/${application.name}`, {\n        method: 'DELETE'\n      })\n      if (res.ok) {\n        pushFeedback({ message: 'Application deleted!', type: 'success' })\n        setOpenDeleteApplicationModal(false)\n      } else {\n        pushFeedback({ message: res.statusText, type: 'error' })\n      }\n    } catch (e) {\n      pushFeedback({ message: e.message, type: 'error' })\n    }\n  }\n\n  const mapImages = (images) => {\n    const imgs = []\n    if (images.x86) {\n      imgs.push({\n        fogTypeId: 1,\n        containerImage: images.x86\n      })\n    }\n    if (images.arm) {\n      imgs.push({\n        fogTypeId: 2,\n        containerImage: images.arm\n      })\n    }\n    return imgs\n  }\n\n  const parseMicroserviceImages = async (fileImages) => {\n    if (fileImages.catalogId) {\n      return { registryId: undefined, images: undefined, catalogItemId: fileImages.catalogId }\n    }\n    const registryByName = {\n      remote: 1,\n      local: 2\n    }\n    const images = mapImages(fileImages)\n    const registryId = fileImages.registry ? registryByName[fileImages.registry] || window.parseInt(fileImages.registry) : 1\n    return { registryId, catalogItemId: undefined, images }\n  }\n\n  const _deleteUndefinedFields = (obj) => Object.keys(obj).forEach(key => obj[key] === undefined && delete obj[key])\n\n  const parseMicroservice = async (microservice) => {\n    const { registryId, catalogItemId, images } = await parseMicroserviceImages(microservice.images)\n    const microserviceData = {\n      config: microservice.config ? JSON.stringify(microservice.config) : undefined,\n      name: microservice.name,\n      logSize: microservice.logSize,\n      catalogItemId,\n      iofogUuid: agentsByName[microservice.agent.name].uuid,\n      registryId,\n      ...microservice.container,\n      ports: lget(microservice, 'container.ports', []).map(p => ({ ...p, publicPort: p.public })),\n      volumeMappings: lget(microservice, 'container.volumes', []),\n      cmd: lget(microservice, 'container.commands', []),\n      env: lget(microservice, 'container.env', []).map(e => ({ key: e.key.toString(), value: e.value.toString() })),\n      images,\n      extraHosts: lget(microservice, 'container.extraHosts', [])\n    }\n    _deleteUndefinedFields(microserviceData)\n    return microserviceData\n  }\n\n  const parseApplicationFile = async (doc) => {\n    if (API_VERSIONS.indexOf(doc.apiVersion) === -1) {\n      return [{}, `Invalid API Version ${doc.apiVersion}, current version is ${API_VERSIONS.slice(-1)[0]}`]\n    }\n    if (doc.kind !== 'Application') {\n      return [{}, `Invalid kind ${doc.kind}`]\n    }\n    if (!doc.metadata || !doc.spec) {\n      return [{}, 'Invalid YAML format']\n    }\n    const application = {\n      name: lget(doc, 'metadata.name', undefined),\n      ...doc.spec,\n      isActivated: true,\n      microservices: await Promise.all((doc.spec.microservices || []).map(async m => parseMicroservice(m)))\n    }\n\n    return [application]\n  }\n\n  const deployApplication = async (application, newApplication) => {\n    const url = `/api/v3/application${newApplication ? '' : `/${application.name}`}`\n    try {\n      const res = await request(url, {\n        method: newApplication ? 'POST' : 'PUT',\n        headers: {\n          'content-type': 'application/json'\n        },\n        body: JSON.stringify(application)\n      })\n      return res\n    } catch (e) {\n      pushFeedback({ message: e.message, type: 'error' })\n    }\n  }\n\n  const readApplicationFile = async (item) => {\n    setFileParsing(true)\n    const file = item.files[0]\n    if (file) {\n      const reader = new window.FileReader()\n\n      reader.onload = async function (evt) {\n        try {\n          const doc = yaml.safeLoad(evt.target.result)\n          console.log({ doc })\n          const [applicationData, err] = await parseApplicationFile(doc)\n          if (err) {\n            setFileParsing(false)\n            return pushFeedback({ message: err, type: 'error' })\n          }\n          const newApplication = !applications.find(a => a.name === applicationData.name)\n          const res = await deployApplication(applicationData, newApplication)\n          if (!res.ok) {\n            try {\n              const error = await res.json()\n              pushFeedback({ message: error.message, type: 'error' })\n            } catch (e) {\n              pushFeedback({ message: res.statusText, type: 'error' })\n            }\n          } else {\n            pushFeedback({ message: newApplication ? 'Application deployed!' : 'Application updated!', type: 'success' })\n          }\n          setFileParsing(false)\n        } catch (e) {\n          pushFeedback({ message: e.message, type: 'error' })\n          setFileParsing(false)\n        }\n      }\n\n      reader.onerror = function (evt) {\n        pushFeedback({ message: evt, type: 'error' })\n        setFileParsing(false)\n      }\n\n      reader.readAsText(file, 'UTF-8')\n    }\n  }\n\n  const selectApplication = (application) => {\n    setApplication(application)\n    setMap(uniqBy(application.microservices.map(m => agentsByUUID[m.iofogUuid]), a => a.uuid), null, false)\n  }\n\n  return (\n    <>\n      <List\n        subheader={\n          <ListSubheader component='div' id='agent-list-subheader' style={{ position: 'relative', marginBottom: '5px' }} disableGutters disableSticky>\n            <div className={classes.listTitle}>\n              <FileDrop {...{ onDrop: readApplicationFile, loading: fileParsing }}>\n                <div className={classes.flexColumn}>\n                  <span>Drag a file here to deploy an application</span>\n                </div>\n              </FileDrop>\n            </div>\n          </ListSubheader>\n        }\n      >\n        {(loading ? [1, 2, 3].map((idx) => <ListItem key={idx}><ListItemText><Skeleton height={72} /></ListItemText></ListItem>) : applications.map(a => {\n          const msvcs = a.microservices || []\n          const tags = (a.tags || []).map(getTagDisplayInfo)\n          return (\n            <ListItem button key={a.id} onClick={() => selectApplication(a)} selected={a.id === application.id}>\n              <ListItemAvatar>\n                <Avatar style={{ '--statusColor': statusColor[a.isActivated ? 'RUNNING' : 'OFFLINE'] }} className={classes.avatarList}>\n                  <AppsIcon />\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText style={{ width: '100px', textOverflow: 'ellipsis' }} primary={a.name} secondary={`${msvcs.length} Microservices`} />\n              <div className={classes.msvcChipList}>\n                {tags.map((t, idx) => (\n                  <TagChip key={t.value} tag={t} first={!idx} />\n                ))}\n              </div>\n              <div className={classes.msvcChipList}>\n                {msvcs.length > 4\n                  ? (\n                    <Chip\n                      size='small'\n                      label={`${msvcs.length} microservices`}\n                      style={{\n                        '--mTop': '0px',\n                        '--color': msvcStatusColor[a.isActivated ? 'RUNNING' : 'UNKNOWN']\n                      }}\n                      className={classes.msvcChip}\n                      title={`${msvcs.length} microservices`}\n                    />\n                  )\n                  : msvcs.map((m, idx) => (\n                    <React.Fragment key={m.uuid}>\n                      <Chip\n                        size='small'\n                        label={m.name}\n                        style={{\n                          '--mTop': idx ? '2px' : '0px',\n                          '--color': msvcStatusColor[a.isActivated && m.status.status === 'RUNNING' ? 'RUNNING' : 'UNKNOWN']\n                        }}\n                        className={classes.msvcChip}\n                        title={m.name}\n                      />\n                    </React.Fragment>\n                  ))}\n              </div>\n              <MoreIcon onClick={openMenu} />\n            </ListItem>\n          )\n        }))}\n      </List>\n      <Modal\n        {...{\n          open: openDetailsModal,\n          title: `${application.name} details`,\n          onClose: () => setOpenDetailsModal(false)\n        }}\n      >\n        <ReactJson title='Application' src={application} name={false} />\n      </Modal>\n      <Dialog\n        open={openStartStopModal}\n        onClose={() => setOpenStartStopModal(false)}\n      >\n        <DialogTitle id='alert-dialog-title'>{`${application.isActivated ? 'Stop' : 'Start'} ${application.name}?`}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id='alert-dialog-description'>\n            {application.isActivated ? 'Stopping an application will stop all its microservices' : 'Starting an application will start all its microservices'}\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setOpenStartStopModal(false)} color='primary'>\n            Cancel\n          </Button>\n          <Button onClick={() => toggleApplication(application)} color='primary' autoFocus>\n            {application.isActivated ? 'Stop' : 'Start'}\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <Dialog\n        open={openDeleteApplicationModal}\n        onClose={() => setOpenDeleteApplicationModal(false)}\n      >\n        <DialogTitle id='alert-dialog-title'>Delete {application.name}?</DialogTitle>\n        <DialogContent>\n          <DialogContentText id='alert-dialog-description'>\n            <span>Deleting an application will delete all its microservices.</span><br />\n            <span>This is not reversible.</span>\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setOpenDeleteApplicationModal(false)} color='primary'>\n            Cancel\n          </Button>\n          <Button onClick={() => deleteApplication(application)} color='primary' autoFocus>\n            Delete\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <Menu\n        id='agent-menu'\n        anchorEl={menuAnchorEl}\n        keepMounted\n        open={Boolean(menuAnchorEl)}\n        onClose={handleCloseMenu}\n      >\n        <MenuItem onClick={openDetails}>Details</MenuItem>\n        <Divider />\n        <MenuItem onClick={openStartStop}>{`${application.isActivated ? 'Stop' : 'Start'}`}</MenuItem>\n        <MenuItem onClick={openDeleteApplication}>Delete</MenuItem>\n      </Menu>\n    </>\n  )\n}\n","import React from 'react'\n\nimport GoogleMapReact from 'google-map-react'\n\nimport { Badge, Avatar } from '@material-ui/core'\n\nimport MemoryIcon from '@material-ui/icons/Memory'\nimport CtrlIcon from '@material-ui/icons/DeveloperBoard'\nimport Icon from '@material-ui/core/Icon'\n\nimport { makeStyles, useTheme } from '@material-ui/styles'\n\nimport { statusColor, msvcStatusColor, tagColor } from './utils'\nimport { useMap } from '../providers/Map'\n\nconst useStyles = makeStyles(theme => ({\n  mapMarkerTransform: {\n    transform: 'translate(-50%, -100%)',\n    position: 'absolute'\n  },\n  msvcBadge: {\n    '& .MuiBadge-badge': {\n      backgroundColor: `var(--color, ${theme.colors.cobalt})`\n    }\n  },\n  mapMarker: {\n    backgroundColor: `var(--markerColor, ${theme.colors.success})`,\n    borderRadius: '50% 50% 50% 0 !important',\n    border: `2px solid var(--markerColor, ${theme.colors.success})`,\n    transform: 'rotate(-45deg)',\n    '& .MuiSvgIcon-root': {\n      transform: 'rotate(-45deg)'\n    }\n  },\n  mapWrapper: {\n    boxShadow: '0px 1px 3px 0px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 2px 1px -1px rgba(0,0,0,0.12)',\n    borderRadius: '4px',\n    width: '100%',\n    height: '100%',\n    maxHeight: '700px',\n    position: 'sticky',\n    top: '25px',\n    borderColor: theme.colors.aluminium,\n    '& div': {\n      borderRadius: '4px',\n      '& div': {\n        borderRadius: '4px'\n      }\n    }\n  }\n}))\n\nexport default function Map (props) {\n  const classes = useStyles()\n  const theme = useTheme()\n  const { controller, agent, setAgent, msvcsPerAgent, loading } = props\n  const { map, mapRef, hasValidCoordinates } = useMap()\n\n  return (\n    <div className={classes.mapWrapper} ref={mapRef}>\n      <GoogleMapReact\n        {...map}\n        bootstrapURLKeys={{\n          key: 'AIzaSyChp_fUXiK05ulRl_ewRGKWsQ1k0ULIFkA'\n        }}\n      >\n        {(loading ? [] : controller.agents).filter(a => hasValidCoordinates([a.latitude, a.longitude])).map(a =>\n          <div\n            key={a.uuid}\n            lat={a.latitude} lng={a.longitude}\n            className={classes.mapMarkerTransform}\n            onClick={() => setAgent(a)}\n          >\n            <Badge color='primary' style={{ '--color': msvcStatusColor[a.daemonStatus] }} badgeContent={(msvcsPerAgent[a.uuid] || []).filter(m => m.flowActive && m.status.status === 'RUNNING').length} invisible={a.uuid !== agent.uuid} className={`${classes.msvcBadge}`}>\n              <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n                <Avatar\n                  style={{ '--markerColor': statusColor[a.daemonStatus] }}\n                  className={classes.mapMarker}\n                >\n                  <MemoryIcon />\n                </Avatar>\n                <div style={{ display: 'flex', position: 'absolute', bottom: -15 }}>\n                  {a.tags && a.edgeResources.map(t => t.display ? (t.display.icon ? <div style={{ backgroundColor: t.display.color || tagColor, margin: '2px', padding: '4px', borderRadius: '100%' }}><Icon title={t.display.name || t.name} key={t.display.name || t.name} style={{ fontSize: 16, color: 'white', marginBottom: -3 }}>{t.display.icon}</Icon></div> : null) : null)}\n                </div>\n\n              </div>\n            </Badge>\n          </div>\n        )}\n        {!loading && controller.info && hasValidCoordinates([controller.info.location.lat, controller.info.location.lon]) &&\n          <Avatar\n            lat={controller.info.location.lat}\n            lng={controller.info.location.lon}\n            style={{ '--markerColor': theme.colors.argon }}\n            className={classes.mapMarker}\n          >\n            <CtrlIcon />\n          </Avatar>}\n      </GoogleMapReact>\n    </div>\n  )\n}\n","import React, { useState } from 'react'\nimport useRecursiveTimeout from '../hooks/useInterval'\nimport { find, groupBy, get, isFinite } from 'lodash'\n\nimport Divider from '@material-ui/core/Divider'\nimport { makeStyles } from '@material-ui/styles'\n\nimport ControllerInfo from './ControllerInfo'\nimport ActiveResources from './ActiveResources'\nimport AgentList from './AgentList'\nimport ApplicationList from './ApplicationList'\nimport Map from './Map'\nimport SimpleTabs from '../Utils/Tabs'\n\n// import logo from '../assets/logo.png'\nimport './layout.scss'\n\nimport { ControllerContext } from '../ControllerProvider'\nimport { useConfig } from '../providers/Config'\nimport { useMap } from '../providers/Map'\n\nconst useStyles = makeStyles({\n  divider: {\n    margin: '15px 0'\n  }\n})\n\nconst initState = {\n  controller: {\n    info: {\n      location: {},\n      user: {}\n    },\n    agents: [],\n    flows: [],\n    microservices: []\n  },\n  agent: {},\n  activeAgents: [],\n  activeMsvcs: [],\n  msvcsPerAgent: [],\n  applications: []\n}\n\nexport const actions = {\n  UPDATE: 'UPDATE',\n  SET_AGENT: 'SET_AGENT'\n}\n\nconst updateData = (state, newController) => {\n  if (!newController) {\n    return state\n  }\n  const activeFlows = newController.applications.filter(f => f.isActivated === true)\n  const activeAgents = newController.agents.filter(a => a.daemonStatus === 'RUNNING')\n  const msvcsPerAgent = groupBy(newController.microservices.map(m => ({\n    ...m,\n    flowActive: !!find(activeFlows, f => m.flowId === f.id)\n  })), 'iofogUuid')\n  const activeMsvcs = activeAgents.reduce((res, a) => res.concat(get(msvcsPerAgent, a.uuid, []).filter(m => !!find(activeFlows, f => f.id === m.flowId)) || []), [])\n\n  if (!state.agent || !state.agent.uuid) {\n    state.agent = newController.agents[0] || {}\n  }\n\n  return {\n    ...state,\n    controller: newController,\n    applications: newController.applications,\n    activeFlows,\n    activeAgents,\n    activeMsvcs,\n    msvcsPerAgent\n  }\n}\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case actions.UPDATE:\n      return updateData(state, action.data)\n    case actions.SET_AGENT:\n      return {\n        ...state,\n        agent: action.data\n      }\n    default:\n      return state\n  }\n}\n\nexport default function ECNViewer () {\n  const classes = useStyles()\n  const { updateTags } = useConfig()\n  const [state, dispatch] = React.useReducer(reducer, initState)\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState(false)\n  const { controller: controllerInfo, request } = React.useContext(ControllerContext)\n  const timeout = +controllerInfo.refresh || 3000\n  const { setMap } = useMap()\n  React.useEffect(() => {\n    setLoading(true)\n    setError(null)\n  }, [controllerInfo.ip, controllerInfo.port, controllerInfo.user])\n\n  const update = async () => {\n    const agentsResponse = await request('/api/v3/iofog-list')\n    if (!agentsResponse.ok) {\n      setError({ message: agentsResponse.statusText })\n      return\n    }\n    const agents = (await agentsResponse.json()).fogs\n    const applicationResponse = await request('/api/v3/application')\n    if (!applicationResponse.ok) {\n      setError({ message: applicationResponse.statusText })\n      return\n    }\n    const applications = (await applicationResponse.json()).applications\n\n    let microservices = []\n    for (const application of applications) {\n      const microservicesResponse = await request(`/api/v3/microservices?application=${application.name}`)\n      if (!microservicesResponse.ok) {\n        setError({ message: microservicesResponse.statusText })\n        return\n      }\n      const newMicroservices = (await microservicesResponse.json()).microservices\n      microservices = microservices.concat(newMicroservices)\n      application.microservices = newMicroservices\n    }\n    if (loading) {\n      setMap(agents, controllerInfo, true)\n      setLoading(false)\n    }\n    if (error) {\n      setError(false)\n    }\n    updateTags(agents)\n    dispatch({ type: actions.UPDATE, data: { agents, applications, microservices } })\n  }\n\n  useRecursiveTimeout(update, timeout)\n\n  const setAgent = a => dispatch({ type: actions.SET_AGENT, data: a })\n\n  const selectAgent = (a) => {\n    setAgent(a)\n    if (isFinite(a.latitude) && isFinite(a.longitude)) {\n      setMap([a], controllerInfo, false)\n    }\n  }\n\n  const selectController = () => {\n    setMap([], controllerInfo, true)\n  }\n\n  const setAutozoom = () => {\n    setMap(state.controller.agents, controllerInfo, true)\n  }\n\n  const { controller, activeAgents, applications, activeMsvcs, agent, msvcsPerAgent } = state\n  return (\n    <div className='viewer-layout-container'>\n      <div className='box sidebar'>\n        <ControllerInfo {...{ controller: controllerInfo, selectController, loading, error }} />\n        <Divider className={classes.divider} />\n        <ActiveResources {...{ activeAgents, applications, activeMsvcs, loading }} />\n        <Divider className={classes.divider} />\n\n        <SimpleTabs>\n          <AgentList title='Agents' {...{ msvcsPerAgent, loading, msvcs: controller.microservices, agents: controller.agents, agent, setAgent: selectAgent, setAutozoom, controller: controller.info }} />\n          <ApplicationList title='Applications' {...{ applications, controllerInfo, loading, agents: controller.agents, setAutozoom }} />\n        </SimpleTabs>\n      </div>\n      <div className='map-grid-container'>\n        <Map {...{ controller: { ...controller, info: controllerInfo }, agent, setAgent, msvcsPerAgent, loading }} />\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport { makeStyles } from '@material-ui/styles'\n\nimport Skeleton from 'react-loading-skeleton'\nimport { TextField, InputAdornment, Paper, Table, TableRow, TableCell, TableContainer, TableHead, TableBody, TablePagination } from '@material-ui/core'\n\nimport MoreIcon from '@material-ui/icons/MoreVert'\nimport SearchIcon from '@material-ui/icons/Search'\nimport ClearIcon from '@material-ui/icons/Clear'\nimport lget from 'lodash/get'\n\nconst useStyles = makeStyles(theme => ({\n  pointer: {\n    cursor: 'pointer'\n  },\n  avatarContainer: {\n    backgroundColor: theme.colors.chromium\n  },\n  tableActions: {\n    marginBottom: '10px',\n    display: 'flex',\n    justifyContent: 'space-between'\n  }\n}))\n\nconst filterFields = [\n  'name',\n  'description',\n  'publisher',\n  'supportedPlatforms',\n  'category',\n  'registry.url'\n]\n\nexport default function CatalogTable (props) {\n  const classes = useStyles()\n  const { loading, openMenu, catalog } = props\n  const [filter, setFilter] = React.useState('')\n  const [page, setPage] = React.useState(0)\n  const [rowsPerPage, setRowsPerPage] = React.useState(5)\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage)\n  }\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10))\n    setPage(0)\n  }\n\n  const filterItem = (item) => {\n    for (const field of filterFields) {\n      if (lget(item, field, '').toString().toLowerCase().includes(filter)) { return true }\n    }\n    return false\n  }\n\n  const filteredCatalog = catalog.filter(filterItem)\n\n  const emptyRows = loading ? 0 : rowsPerPage - Math.min(rowsPerPage, filteredCatalog.length - page * rowsPerPage)\n  return (\n    <>\n      <div className={`${classes.tableActions} ${classes.pointer}`}>\n        <TextField\n          className={classes.margin}\n          id='input-with-icon-textfield'\n          label='Filter'\n          value={filter}\n          onChange={(e) => setFilter(e.target.value.toLowerCase())}\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position='start'>\n                <SearchIcon />\n              </InputAdornment>\n            ),\n            endAdornment: (\n              <InputAdornment className={classes.pointer} position='start'>\n                <ClearIcon onClick={() => setFilter('')} />\n              </InputAdornment>\n            )\n          }}\n        />\n      </div>\n      <TableContainer component={Paper}>\n        <Table className={classes.table} stickyHeader aria-label='simple table'>\n          <TableHead>\n            <TableRow>\n              <TableCell>Name</TableCell>\n              <TableCell align='right'>Description</TableCell>\n              <TableCell align='right'>Supported platforms</TableCell>\n              <TableCell align='right'>Publisher</TableCell>\n              <TableCell align='right'>Registry</TableCell>\n              <TableCell align='right'>Category</TableCell>\n              <TableCell align='right' />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {loading ? <TableRow><TableCell colSpan={7}><Skeleton height={50} count={5} /></TableCell></TableRow> : filteredCatalog\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              .map(row => (\n                <TableRow key={row.name}>\n                  <TableCell component='th' scope='row'>\n                    {row.name}\n                  </TableCell>\n                  <TableCell align='right'>{row.description}</TableCell>\n                  <TableCell align='right'>{row.supportedPlatforms.join(', ')}</TableCell>\n                  <TableCell align='right'>{row.publisher}</TableCell>\n                  <TableCell align='right'>{row.registry.url}</TableCell>\n                  <TableCell align='right'>{row.category}</TableCell>\n                  <TableCell align='right' className={classes.pointer}>\n                    <MoreIcon onClick={(e) => openMenu(row, e)} />\n                  </TableCell>\n                </TableRow>\n              ))}\n            {emptyRows > 0 && (\n              <TableRow style={{ height: 53 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination\n        rowsPerPageOptions={[5, 10, 25]}\n        component='div'\n        count={filteredCatalog.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onChangePage={handleChangePage}\n        onChangeRowsPerPage={handleChangeRowsPerPage}\n      />\n    </>\n  )\n}\n","import React from 'react'\nimport { makeStyles } from '@material-ui/styles'\n\nimport Skeleton from 'react-loading-skeleton'\nimport { TextField, Grid, Button, MenuItem } from '@material-ui/core'\n\nconst useStyles = makeStyles(theme => ({\n  pointer: {\n    cursor: 'pointer'\n  },\n  avatarContainer: {\n    backgroundColor: theme.colors.chromium\n  },\n  tableActions: {\n    marginBottom: '10px',\n    display: 'flex',\n    justifyContent: 'space-between'\n  }\n}))\nexport default function AddCatalogItemForm (props) {\n  const classes = useStyles()\n  const [newItem, setNewItem] = React.useState({\n    images: {\n      x86: '',\n      arm: ''\n    },\n    registryId: 1,\n    name: '',\n    description: '',\n    category: '',\n    ...props.newCatalogItem\n  })\n  const { onSave, loading, registries } = props\n  const handleChange = (key) => (e) => setNewItem({ ...newItem, [key]: e.target.value })\n  const handleImageChange = (key) => (e) => setNewItem({ ...newItem, images: { ...newItem.images, [key]: e.target.value } })\n  return (\n    <>\n      <Grid container spacing={2}>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            id='name'\n            label='Name'\n            onChange={handleChange('name')}\n            value={newItem.name}\n            fullWidth\n            className={classes.textField}\n            margin='normal'\n            variant='outlined'\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            id='description'\n            label='Description'\n            onChange={handleChange('description')}\n            value={newItem.description}\n            fullWidth\n            multiline\n            rowsMax='4'\n            className={classes.textField}\n            margin='normal'\n            variant='outlined'\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            id='x86'\n            label='x86'\n            helperText='image to be used on x86 edge nodes'\n            onChange={handleImageChange('x86')}\n            value={newItem.images.x86}\n            fullWidth\n            className={classes.textField}\n            margin='normal'\n            variant='outlined'\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            id='arm'\n            label='ARM'\n            helperText='image to be used on ARM edge nodes'\n            onChange={handleImageChange('arm')}\n            value={newItem.images.arm}\n            fullWidth\n            className={classes.textField}\n            margin='normal'\n            variant='outlined'\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            id='registry'\n            select\n            label='Registry'\n            fullWidth\n            className={classes.textField}\n            value={newItem.registryId}\n            onChange={handleChange('registryId')}\n            variant='outlined'\n            InputProps={{\n              style: { marginTop: '16px' }\n            }}\n            InputLabelProps={{\n              style: { marginTop: '16px' }\n            }}\n          >\n            {registries.map(option => (\n              <MenuItem key={option.id} value={option.id}>\n                {option.url}\n              </MenuItem>\n            ))}\n          </TextField>\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            id='category'\n            label='Category'\n            onChange={handleChange('category')}\n            value={newItem.category}\n            fullWidth\n            multiline\n            rowsMax='4'\n            className={classes.textField}\n            margin='normal'\n            variant='outlined'\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            id='publisher'\n            label='Publisher'\n            onChange={handleChange('publisher')}\n            value={newItem.publisher}\n            fullWidth\n            multiline\n            rowsMax='4'\n            className={classes.textField}\n            margin='normal'\n            variant='outlined'\n          />\n        </Grid>\n      </Grid>\n      <Grid container justify='flex-end'>\n        <Grid item>\n          <Button onClick={() => onSave(newItem)}>\n            {loading ? <Skeleton> </Skeleton> : 'Save'}\n          </Button>\n        </Grid>\n      </Grid>\n    </>\n  )\n}\n","import React from 'react'\nimport { Button, Divider, Grid } from '@material-ui/core'\n\nimport Modal from './Modal'\n\nimport { makeStyles } from '@material-ui/styles'\nconst useStyles = makeStyles(theme => ({\n  divider: {\n    margin: '5px'\n  }\n}))\n\nexport default function Confirm (props) {\n  const classes = useStyles()\n  const { open, onClose, title, onConfirm } = props\n  return (\n    <Modal\n      {...{\n        title,\n        open,\n        onClose\n      }}\n    >\n      {props.children}\n      <Divider className={classes.divider} />\n      <Grid container justify='flex-end' spacing={2}>\n        <Grid item>\n          <Button onClick={onClose}>\n            Cancel\n          </Button>\n        </Grid>\n        <Grid item>\n          <Button variant='contained' color='primary' onClick={onConfirm}>\n            Confirm\n          </Button>\n        </Grid>\n      </Grid>\n\n    </Modal>\n  )\n}\n","import React from 'react'\nimport { makeStyles } from '@material-ui/styles'\nimport ReactJson from 'react-json-view'\nimport yaml from 'js-yaml'\nimport { Avatar, Menu, MenuItem, Divider, Typography } from '@material-ui/core'\n\nimport { ControllerContext } from '../ControllerProvider'\nimport { FeedbackContext } from '../Utils/FeedbackContext'\nimport Modal from '../Utils/Modal'\nimport CatalogTable from './CatalogTable'\nimport AddCatalogItemForm from './AddCatalogItemForm'\nimport Confirm from '../Utils/Confirm'\nimport FileDrop from '../Utils/FileDrop'\n\nimport lget from 'lodash/get'\n\nconst useStyles = makeStyles(theme => ({\n  pointer: {\n    cursor: 'pointer'\n  },\n  avatarContainer: {\n    backgroundColor: theme.colors.chromium\n  },\n  container: {\n    padding: '10px 50px 10px 30px'\n  },\n  flexColumn: {\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  titleRow: {\n    marginBottom: '30px'\n  }\n}))\n\nconst mapImages = (images) => {\n  const supportedPlatforms = []\n  for (const img of images) {\n    if (img.containerImage) {\n      switch (img.fogTypeId) {\n        case 1:\n          supportedPlatforms.push('x86')\n          break\n        case 2:\n          supportedPlatforms.push('arm')\n          break\n        default:\n          break\n      }\n    }\n  }\n  return supportedPlatforms\n}\nconst mapCatalogItem = (item, registries) => {\n  item.supportedPlatforms = mapImages(item.images)\n  item.registry = registries.find(r => r.id === item.registryId)\n  if (item.configExample) {\n    try {\n      item.configExample = JSON.parse(item.configExample)\n    } catch (e) {\n    }\n  }\n  return item\n}\n\nconst getRegistryIdFromRegistry = (registry) => {\n  if (registry === 'remote') {\n    return 1\n  }\n  if (registry === 'local') {\n    return 2\n  }\n  return +(registry)\n}\n\nconst parseCatalogItem = (doc) => {\n  if (doc.apiVersion !== 'iofog.org/v2') {\n    return [{}, `Invalid API Version ${doc.apiVersion}, current version is iofog.org/v2`]\n  }\n  if (doc.kind !== 'CatalogItem') {\n    return [{}, `Invalid kind ${doc.kind}`]\n  }\n  if (!doc.metadata || !doc.spec) {\n    return [{}, 'Invalid YAML format']\n  }\n  const catalogItem = {\n    name: lget(doc, 'metadata.name', lget(doc, 'spec.name', undefined)),\n    images: {\n      x86: lget(doc, 'spec.x86', ''),\n      arm: lget(doc, 'spec.arm', '')\n    },\n    description: lget(doc, 'spec.description', ''),\n    publisher: lget(doc, 'spec.publisher', ''),\n    category: lget(doc, 'spec.category', ''),\n    registry: lget(doc, 'spec.registry', ''),\n    configExample: lget(doc, 'spec.configExample', {})\n  }\n\n  catalogItem.registryId = catalogItem.registry ? getRegistryIdFromRegistry(catalogItem.registry) : 1\n  return [catalogItem]\n}\n\nexport default function Catalog () {\n  const classes = useStyles()\n  const [openDetailsModal, setOpenDetailsModal] = React.useState(false)\n  const [openRemoveConfirm, setOpenRemoveConfirm] = React.useState(false)\n  const [openAddCatalogItemModal, setOpenAddCatalogItemModal] = React.useState(false)\n  const [newCatalogItem, setNewCatalogItem] = React.useState(null)\n  const [fetching, setFetching] = React.useState(true)\n  const [loading, setLoading] = React.useState(false)\n  const [catalog, setCatalog] = React.useState([])\n  const [registries, setRegistries] = React.useState([])\n  const [selectedItem, setSelectedItem] = React.useState({})\n  const [menuAnchorEl, setMenuAnchorEl] = React.useState(null)\n  const { request } = React.useContext(ControllerContext)\n  const { pushFeedback } = React.useContext(FeedbackContext)\n\n  const handleCloseMenu = () => setMenuAnchorEl(null)\n  const openMenu = (item, e) => {\n    setSelectedItem(item)\n    setMenuAnchorEl(e.currentTarget)\n  }\n  const openDetails = () => {\n    setOpenDetailsModal(true)\n    handleCloseMenu()\n  }\n  const openRemove = () => {\n    setOpenRemoveConfirm(true)\n    handleCloseMenu()\n  }\n\n  async function fetchCatalog () {\n    try {\n      setFetching(true)\n      const catalogItemsResponse = await request('/api/v3/catalog/microservices')\n      if (!catalogItemsResponse.ok) {\n        pushFeedback({ message: catalogItemsResponse.statusText, type: 'error' })\n        setFetching(false)\n        return\n      }\n      let catalogItems = (await catalogItemsResponse.json()).catalogItems\n      const registriesResponse = await request('/api/v3/registries')\n      if (!registriesResponse.ok) {\n        pushFeedback({ message: registriesResponse.statusText, type: 'error' })\n        setFetching(false)\n        return\n      }\n      const registries = (await registriesResponse.json()).registries\n      catalogItems = catalogItems.map(item => mapCatalogItem(item, registries))\n      console.log({ catalogItems })\n      setCatalog(catalogItems)\n      setRegistries(registries)\n      setFetching(false)\n    } catch (e) {\n      pushFeedback({ message: e.message, type: 'error' })\n      setFetching(false)\n    }\n  }\n\n  React.useEffect(() => {\n    fetchCatalog()\n  }, [])\n\n  const addCatalogItem = async (item) => {\n    const newItem = {\n      ...item,\n      images: [{\n        fogTypeId: 1,\n        containerImage: item.images.x86\n      }, {\n        fogTypeId: 2,\n        containerImage: item.images.arm\n      }]\n    }\n    if (newItem.configExample && typeof newItem.configExample === typeof ({})) {\n      newItem.configExample = JSON.stringify(newItem.configExample)\n    }\n    setLoading(true)\n    const response = await request('/api/v3/catalog/microservices', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newItem)\n    })\n    if (response.ok) {\n      pushFeedback({ message: 'Item added to the Catalog!', type: 'success' })\n      newItem.id = (await response.json()).id\n      setCatalog([mapCatalogItem(newItem, registries), ...catalog])\n      setLoading(false)\n    } else {\n      pushFeedback({ message: response.statusText, type: 'error' })\n      setLoading(false)\n    }\n  }\n\n  const removeCatalogItem = async (item) => {\n    try {\n      setLoading(true)\n      const res = await request(`/api/v3/catalog/microservices/${item.id}`, {\n        method: 'DELETE'\n      })\n      if (!res.ok) {\n        pushFeedback({ message: res.statusText, type: 'error' })\n      } else {\n        setCatalog(catalog.filter(i => i.id !== item.id))\n        pushFeedback({ message: 'Catalog item deleted', type: 'success' })\n      }\n      setLoading(false)\n    } catch (e) {\n      pushFeedback({ message: e.message, type: 'error', uuid: 'error' })\n      setLoading(false)\n    }\n  }\n\n  const readCatalogItemFile = async (item) => {\n    const file = item.files[0]\n    if (file) {\n      const reader = new window.FileReader()\n\n      reader.onload = function (evt) {\n        console.log({ evt })\n        try {\n          const doc = yaml.safeLoad(evt.target.result)\n          const [catalogItem, err] = parseCatalogItem(doc)\n          if (err) {\n            return pushFeedback({ message: err, type: 'error' })\n          }\n          setNewCatalogItem(catalogItem)\n          setOpenAddCatalogItemModal(true)\n        } catch (e) {\n          console.error({ e })\n          pushFeedback({ message: 'Could not parse the file', type: 'error' })\n        }\n      }\n\n      reader.onerror = function (evt) {\n        pushFeedback({ message: evt, type: 'error' })\n      }\n\n      reader.readAsText(file, 'UTF-8')\n    }\n  }\n\n  return (\n    <>\n      <div className={classes.container}>\n        <div className={classes.titleRow}>\n          <Typography variant='h5'>ECN Microservices Catalog</Typography>\n        </div>\n        <CatalogTable {...{ loading: fetching, openMenu, catalog }} />\n        <div>\n          <FileDrop {...{ onDrop: readCatalogItemFile }}>\n            <div className={classes.flexColumn}>\n              <span>Drag a file here</span>\n              <span>---</span>\n              <Avatar style={{ margin: 'auto' }} className={`${classes.avatarContainer} ${classes.pointer}`} onClick={() => setOpenAddCatalogItemModal(true)}>+</Avatar>\n            </div>\n          </FileDrop>\n        </div>\n      </div>\n      <Modal\n        {...{\n          open: openDetailsModal,\n          title: `${selectedItem.name} details`,\n          onClose: () => setOpenDetailsModal(false)\n        }}\n      >\n        <ReactJson title='Catalog item' src={selectedItem} name={false} />\n      </Modal>\n      <Modal\n        {...{\n          open: openAddCatalogItemModal,\n          title: 'Add an item to the Catalog',\n          onClose: () => setOpenAddCatalogItemModal(false)\n        }}\n      >\n        <AddCatalogItemForm {...{\n          loading,\n          registries,\n          newCatalogItem,\n          onSave: async (item) => {\n            try {\n              await addCatalogItem(item)\n              setNewCatalogItem(null)\n              setOpenAddCatalogItemModal(false)\n            } catch (e) {\n              pushFeedback({ message: e.message, type: 'error' })\n            }\n          }\n        }}\n        />\n      </Modal>\n      <Confirm\n        open={openRemoveConfirm}\n        title={`Delete catalog item ${selectedItem.name} ?`}\n        onClose={() => setOpenRemoveConfirm(false)}\n        onConfirm={() => {\n          removeCatalogItem(selectedItem)\n          setOpenRemoveConfirm(false)\n        }}\n      />\n      <Menu\n        id='catalog-menu'\n        anchorEl={menuAnchorEl}\n        keepMounted\n        open={Boolean(menuAnchorEl)}\n        onClose={handleCloseMenu}\n      >\n        <MenuItem onClick={openDetails}>Details</MenuItem>\n        <Divider />\n        <MenuItem onClick={openRemove}>Remove item</MenuItem>\n      </Menu>\n    </>\n  )\n}\n","import React from 'react'\nimport { TextField, Grid, Button, InputAdornment, Divider } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/styles'\n\nimport { ControllerContext } from '../ControllerProvider'\nimport { FeedbackContext } from '../Utils/FeedbackContext'\n\nconst useStyles = makeStyles({\n  skeleton: {\n    minHeight: '55px'\n  }\n})\n\nexport default function Config (props) {\n  const classes = useStyles()\n  const { pushFeedback } = React.useContext(FeedbackContext)\n  const { controller, updateController } = React.useContext(ControllerContext)\n  const [data, setData] = React.useState({ ...controller })\n\n  const save = async () => {\n    try {\n      await updateController(data)\n      pushFeedback({ message: data.dev ? 'Controller details saved!' : 'Authenticated!', type: 'success' })\n      props.onSave()\n    } catch (e) {\n      pushFeedback({ message: e.message, type: 'error' })\n    }\n  }\n\n  const handleChange = name => event => {\n    setData({ ...data, [name]: event.target.value })\n  }\n  const handleUserChange = name => event => {\n    setData({ ...data, user: { ...data.user, [name]: event.target.value } })\n  }\n  return (\n    <>\n      {data.dev &&\n        <Grid container spacing={2}>\n          <Grid item xs={12} sm={6}>\n            <TextField\n              id='ip'\n              label='IP'\n              onChange={handleChange('ip')}\n              value={data.ip}\n              fullWidth\n              className={classes.textField}\n              margin='normal'\n              variant='outlined'\n            />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <TextField\n              id='port'\n              label='Port'\n              onChange={handleChange('port')}\n              value={data.port}\n              fullWidth\n              className={classes.textField}\n              margin='normal'\n              variant='outlined'\n            />\n          </Grid>\n        </Grid>}\n      <Grid container spacing={2}>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            id='email'\n            label='Email'\n            onChange={handleUserChange('email')}\n            value={data.user.email}\n            fullWidth\n            className={classes.textField}\n            margin='normal'\n            variant='outlined'\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            id='password'\n            label='Password'\n            onChange={handleUserChange('password')}\n            onKeyPress={(e) => e.key === 'Enter' && data.user.email && data.user.password ? save() : null}\n            value={data.user.password}\n            fullWidth\n            type='password'\n            className={classes.textField}\n            margin='normal'\n            variant='outlined'\n          />\n        </Grid>\n      </Grid>\n      <Divider />\n      <Grid container spacing={2}>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            id='refresh'\n            label='Refresh'\n            type='number'\n            onChange={handleChange('refresh')}\n            value={data.refresh}\n            fullWidth\n            className={classes.textField}\n            margin='normal'\n            variant='outlined'\n            inputProps={{\n              min: '1000',\n              step: '500'\n            }}\n            InputProps={{\n              endAdornment: <InputAdornment position='end'>ms</InputAdornment>\n            }}\n          />\n        </Grid>\n      </Grid>\n      <Grid container justify='flex-end'>\n        <Grid item>\n          <Button onClick={save}>\n            Save\n          </Button>\n        </Grid>\n      </Grid>\n    </>\n  )\n}\n","import React from 'react'\nimport { HashRouter, Route, Switch, NavLink, Redirect } from 'react-router-dom'\nimport Avatar from '@material-ui/core/Avatar'\nimport SearchIcon from '@material-ui/icons/Search'\nimport NotificationsIcon from '@material-ui/icons/NotificationsOutlined'\nimport HomeIcon from '@material-ui/icons/HomeOutlined'\nimport CatalogIcon from '@material-ui/icons/GraphicEqOutlined'\nimport SettingsIcon from '@material-ui/icons/SettingsOutlined'\n\nimport ECNViewer from '../ECNViewer'\nimport Catalog from '../Catalog'\nimport Modal from '../Utils/Modal'\nimport Config from '../Config'\n// import ECNViewerConfig from '../ECNViewerConfig'\n// import SimpleTabs from '../Utils/Tabs'\nimport { ControllerContext } from '../ControllerProvider'\n\nimport logomark from '../assets/logomark.svg'\nimport './layout.scss'\n\nimport { makeStyles } from '@material-ui/styles'\nimport { MapProvider } from '../providers/Map'\n\nconst useStyles = makeStyles(theme => ({\n  wrapper: {\n    color: theme.colors.carbon,\n    backgroundColor: theme.colors.silver\n  },\n  divider: {\n    margin: '15px 0'\n  },\n  logo: {\n    backgroundColor: theme.colors.phosphorus,\n    color: theme.colors.white\n  },\n  latNav: {\n    backgroundColor: theme.colors.carbon\n  },\n  avatarContainer: {\n    backgroundColor: theme.colors.phosphorus,\n    marginRight: '45px'\n  },\n  latIcons: {\n    margin: 'auto',\n    marginTop: '15px',\n    cursor: 'pointer',\n    backgroundColor: theme.colors.carbon,\n    '.active &': {\n      backgroundColor: theme.colors.aluminium\n    }\n  },\n  topIcons: {\n    height: '100%',\n    width: '25px',\n    marginRight: '25px',\n    cursor: 'pointer'\n  },\n  nav: {\n    marginBottom: '15px',\n    height: '50px',\n    '& a': {\n      height: '100%',\n      '& img': {\n        height: '100%'\n      }\n    }\n  },\n  footerContainer: {\n    display: 'flex',\n    justifyContent: 'space-around',\n    justifyItems: 'center',\n    padding: '20px 10px 20px 0px'\n  },\n  footer: {\n    color: theme.colors.aluminium,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'flex-end',\n    fontSize: '9pt',\n    '& a': {\n      color: theme.colors.aluminium,\n      textDecoration: 'none!important'\n    }\n  }\n}))\n\nexport default function Layout () {\n  const classes = useStyles()\n  const { controller } = React.useContext(ControllerContext)\n  const [settingsOpen, setSettingsOpen] = React.useState(!(controller.user.email && controller.user.password))\n\n  console.log(' ====> Rendering layout')\n\n  return (\n    <>\n      <HashRouter>\n        <div className={classes.wrapper + ' wrapper'}>\n          <div className={classes.logo + ' logo'}>\n            <NavLink to='/overview'>\n              <img src={logomark} alt='Edgeworx logomark' />\n            </NavLink>\n          </div>\n          <div className='topnav'>\n            <SearchIcon className={classes.topIcons} />\n            <NotificationsIcon className={classes.topIcons} />\n            <Avatar className={classes.avatarContainer}>M</Avatar>\n          </div>\n          <div className={classes.latNav + ' latnav'}>\n            <NavLink to='/overview'>\n              <Avatar className={classes.latIcons}>\n                <HomeIcon />\n              </Avatar>\n            </NavLink>\n            <NavLink to='/catalog'>\n              <Avatar className={classes.latIcons}>\n                <CatalogIcon />\n              </Avatar>\n            </NavLink>\n            <Avatar className={classes.latIcons}>\n              <SettingsIcon onClick={() => setSettingsOpen(!settingsOpen)} />\n            </Avatar>\n          </div>\n          <div className='content'>\n            <Switch>\n              <Route path='/catalog' component={Catalog} />\n              <Route path='/overview' component={() => <MapProvider><ECNViewer /></MapProvider>} />\n              <Route component={() => <Redirect to='/overview' />} />\n            </Switch>\n          </div>\n          <div className={`${classes.footerContainer} footer`}>\n            <span className={classes.footer}>\n              <span>Controller v{controller.status.versions.controller} - ECN Viewer v{controller.status.versions.ecnViewer}</span>\n              <a style={{ margin: 'auto' }} href='http://www.eclipse.org/legal/copyright.php'>© 2020 Eclipse Foundation, Inc.</a>\n            </span>\n          </div>\n        </div>\n      </HashRouter>\n      <Modal\n        {...{\n          open: settingsOpen,\n          title: 'Configuration',\n          onClose: () => setSettingsOpen(false)\n        }}\n      >\n        {/* <SimpleTabs> */}\n        <Config title={controller.dev ? 'Controller details' : 'User credentials'} {...{ onSave: () => setSettingsOpen(false) }} />\n        {/* <ECNViewerConfig title='ECN Viewer' {...{ onSave: () => setSettingsOpen(false) }} /> */}\n        {/* </SimpleTabs> */}\n      </Modal>\n    </>\n  )\n}\n","import React from 'react'\n\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport Backend from 'react-dnd-html5-backend'\nimport { DndProvider } from 'react-dnd'\n\nimport Layout from './Layout'\n\nimport './App.css'\nimport FeedbackContext from './Utils/FeedbackContext'\nimport ThemeContext from './Theme/ThemeProvider'\nimport ControllerContext from './ControllerProvider'\nimport { ConfigProvider } from './providers/Config'\n\nfunction App () {\n  console.log(' ======> Rendering app ')\n  return (\n    <>\n      <CssBaseline />\n      <ThemeContext>\n        <DndProvider backend={Backend}>\n          <ControllerContext>\n            <ConfigProvider>\n              <FeedbackContext>\n                <Layout />\n              </FeedbackContext>\n            </ConfigProvider>\n          </ControllerContext>\n        </DndProvider>\n      </ThemeContext>\n    </>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\n/* globals fetch */\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}