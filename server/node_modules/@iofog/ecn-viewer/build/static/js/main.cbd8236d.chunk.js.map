{"version":3,"sources":["assets/logomark.svg","hooks/useInterval.js","ECNViewer/ControllerInfo.js","ECNViewer/ActiveResources.js","Theme/ThemeProvider.js","ECNViewer/utils.js","Utils/Modal.js","Utils/Alert.js","Utils/FeedbackContext.js","ControllerProvider/index.js","ECNViewer/AgentList/ConnectNode.js","Utils/Autocomplete.js","ECNViewer/AgentList/AddMicroservice.js","ECNViewer/AgentList/RemoveMicroservice.js","ECNViewer/AgentList/Tabs.js","ECNViewer/AgentList/index.js","ECNViewer/Map.js","ECNViewer/index.js","Catalog/CatalogTable.js","Catalog/AddCatalogItemForm.js","Utils/Confirm.js","Utils/FileDrop.js","Catalog/index.js","Config/index.js","Layout/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useRecursiveTimeout","callback","delay","savedCallback","useRef","useEffect","current","id","setTimeout","tick","ret","Promise","then","clearTimeout","useStyles","makeStyles","theme","controllerInfo","paddingTop","padding","controllerName","fontSize","fontFamily","fontWeight","lineHeight","letterSpacing","width","borderBottom","warningChip","backgroundColor","colors","danger","color","controllerTitle","display","justifyContent","alignItems","textEmphasis","ControllerInfo","props","classes","useTheme","controller","loading","error","location","city","country","lat","lon","query","controllerError","React","useState","window","localStorage","getItem","setControllerName","document","title","className","Typography","style","variant","Input","value","onChange","e","name","target","setItem","Tooltip","message","aria-label","Chip","label","gold","List","ListItem","ListItemIcon","ListItemText","primary","cursor","onClick","selectController","summary","gridTemplateColumns","gridColumnGap","textAlign","ActiveResources","activeFlows","activeAgents","activeMsvcs","Paper","length","phosphorus","cobalt","chromium","argon","carbon","lead","aluminium","silver","white","createMuiTheme","customTheme","success","Theming","ThemeProvider","children","statusColor","RUNNING","UNKNOWN","OFFLINE","msvcStatusColor","modalTitle","borderRadius","modal","top","left","position","modalContent","maxHeight","overflowY","modalActions","modalAction","marginLeft","_Modal","open","onClose","Modal","aria-labelledby","actions","map","a","Button","key","text","variantIcon","CheckCircleIcon","warning","WarningIcon","ErrorIcon","info","InfoIcon","icon","iconVariant","opacity","marginRight","spacing","alert","margin","boxShadow","container","flexDirection","bottom","zIndex","Alert","alerts","idx","handleClick","variantKey","type","Icon","SnackbarContent","aria-describedby","action","IconButton","FeedbackContext","createContext","feedbacks","setFeedbacks","pushFeedback","initState","nextId","reducer","state","data","timeout","dispatch","idxToRemove","findIndex","f","slice","Context","useReducer","console","log","Provider","newFeedbacks","newFeedback","push","Consumer","initControllerState","localUser","controllerJson","user","JSON","parse","api","protocol","ip","port","getUrl","path","dev","hostname","join","getHeaders","headers","controllerConfig","ControllerContext","updateController","lookUpControllerInfo","host","split","localhost","RegExp","test","fetch","response","ok","json","Error","statusText","updateControllerInfo","ipInfo","token","newState","authenticate","method","Accept","body","stringify","accessToken","request","options","t","Authorization","newController","effect","divider","initNode","newError","ConnectNode","node","setNode","useContext","handleChange","event","createAgent","agent","uuid","getProvisioningKey","linkAgent","ioFogApi","provisionAgent","connect","fogType","iofogUuid","provisioningKey","Grid","item","xs","sm","TextField","fullWidth","textField","helperText","Divider","justify","root","flexGrow","height","paper","marginTop","marginBot","right","chip","inputRoot","flexWrap","inputInput","Autocomplete","itemToString","get","initialSelectedItem","selectedItem","clearSelection","getInputProps","getItemProps","getLabelProps","getMenuProps","highlightedIndex","inputValue","isOpen","openMenu","onFocus","disabled","placeholder","onBlur","inputProps","InputProps","ref","others","inputRef","input","renderInput","InputLabelProps","shrink","square","showEmpty","deburr","trim","toLowerCase","inputLength","count","suggestions","filter","suggestion","keep","maxSuggestions","startsWith","getSuggestions","index","suggestionProps","itemProps","isHighlighted","isSelected","MenuItem","selected","component","renderSuggestion","formControl","rowIcon","newPaper","border","inputWithIcon","MenuProps","PaperProps","ITEM_HEIGHT","initMsvc","flow","catalog","images","volumeMappings","ports","rootHostAccess","_new","initFlow","isActivated","initCatalogItem","fogTypeId","containerImage","registryId","generateRouteSelect","list","isNewMsvc","m","AddMicroservice","flows","setFlows","setCatalog","config","ReactJsonRef","src","onAdd","updated_src","onEdit","onDelete","msvc","setMsvc","newFlow","setNewFlow","newCatalogItem","setNewCatalogItem","routes","setRoutes","all","flowRaw","flowsRes","catalogRaw","catalogRes","catalogItems","setter","prevState","handleMsvcChangeArray","objKey","valueDecorator","x","getCatalogImage","img","removeFromArray","addMsvc","flowId","catalogItemId","createFlow","createCatalogItem","catalogItem","Math","random","toString","replace","substr","createRoute","route","from","to","createRoutes","defaultUuid","createMsvc","onSuccess","routeList","microservices","concat","FormControl","required","FormControlLabel","control","Checkbox","checked","v","hostDestination","containerDestination","InputLabel","htmlFor","Select","accessMode","p","parseInt","external","internal","r","chips","marginBottom","RemoveMicroservice","msvcsToRemove","setMsvcsToRemove","remove","res","indexOf","msvcsPerUUID","msvcs","reduce","multiple","renderValue","TabContainer","palette","background","SimpleTabs","setValue","Tabs","newValue","child","Tab","avatarList","msvcChipList","flex","paddingRight","msvcChip","textOverflow","whiteSpace","overflow","jsonDisplay","minHeight","listTitle","link","secondary","textDecoration","AgentList","openDetailsModal","setOpenDetailsModal","openConnectNodeModal","setOpenConnectNodeModal","openAddMicroserviceModal","setOpenAddMicroserviceModal","openRemoveMicroserviceModal","setOpenRemoveMicroserviceModal","menuAnchorEl","setMenuAnchorEl","msvcsPerAgent","agents","setAgent","setAutozoom","handleCloseMenu","currentTarget","subheader","ListSubheader","disableGutters","disableSticky","button","ListItemAvatar","Avatar","daemonStatus","size","Fragment","flowActive","Menu","anchorEl","keepMounted","Boolean","mapMarkerTransform","transform","msvcBadge","mapMarker","mapWrapper","borderColor","hasValidCoordinates","coordinates","isFinite","Map","DomElementRef","autozoom","google","bounds","maps","LatLngBounds","latitude","longitude","center","zoom","forEach","marker","extend","LatLng","newBounds","ne","getNorthEast","lng","sw","getSouthWest","fitBounds","setMap","bootstrapURLKeys","Badge","badgeContent","invisible","groupBy","find","updateData","ECNViewer","setLoading","setError","styles","mapStyle","refresh","agentsResponse","fogs","flowsResponse","microservicesResponse","centerMap","pointer","avatarContainer","tableActions","filterFields","CatalogTable","setFilter","page","setPage","rowsPerPage","setRowsPerPage","filteredCatalog","field","lget","includes","emptyRows","min","startAdornment","InputAdornment","endAdornment","TableContainer","Table","table","stickyHeader","TableHead","TableRow","TableCell","align","TableBody","colSpan","row","scope","description","supportedPlatforms","publisher","registry","url","category","TablePagination","rowsPerPageOptions","onChangePage","newPage","onChangeRowsPerPage","AddCatalogItemForm","x86","arm","newItem","setNewItem","onSave","registries","handleImageChange","multiline","rowsMax","select","option","Confirm","onConfirm","FILE","NativeTypes","dropZone","active","FileDrop","useDrop","accept","drop","onDrop","collect","monitor","highlighted","canDrop","hovered","isOver","collectedProps","flexColumn","titleRow","mapCatalogItem","mapImages","configExample","parseCatalogItem","doc","apiVersion","kind","metadata","spec","undefined","Catalog","openRemoveConfirm","setOpenRemoveConfirm","openAddCatalogItemModal","setOpenAddCatalogItemModal","fetching","setFetching","setRegistries","setSelectedItem","catalogItemsResponse","registriesResponse","fetchCatalog","addCatalogItem","removeCatalogItem","i","readCatalogItemFile","file","files","reader","FileReader","onload","evt","yaml","safeLoad","result","err","onerror","readAsText","skeleton","Config","setData","save","handleUserChange","email","onKeyPress","password","step","wrapper","logo","latNav","latIcons","topIcons","nav","footerContainer","justifyItems","footer","Layout","settingsOpen","setSettingsOpen","logomark","alt","href","App","CssBaseline","DndProvider","backend","Backend","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cbd8236d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logomark.380acb6b.svg\";","import React, { useEffect, useRef } from 'react'\n\nfunction useRecursiveTimeout (\n  callback,\n  delay\n) {\n  const savedCallback = useRef(callback)\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback\n  }, [callback])\n\n  // Set up the timeout loop.\n  useEffect(() => {\n    let id\n    function tick () {\n      const ret = savedCallback.current()\n\n      if (ret instanceof Promise) {\n        ret.then(() => {\n          if (delay !== null) {\n            id = setTimeout(tick, delay)\n          }\n        })\n      } else {\n        if (delay !== null) {\n          id = setTimeout(tick, delay)\n        }\n      }\n    }\n    if (delay !== null) {\n      id = setTimeout(tick, delay)\n      return () => id && clearTimeout(id)\n    }\n  }, [delay])\n}\n\nexport default useRecursiveTimeout\n","import React from 'react'\nimport Skeleton from 'react-loading-skeleton'\n\nimport { Typography, List, ListItem, ListItemIcon, ListItemText, Chip, Tooltip, Input } from '@material-ui/core'\n\nimport LocationCityIcon from '@material-ui/icons/LocationCity'\nimport GPSFixedIcon from '@material-ui/icons/GpsFixed'\nimport IPIcon from '@material-ui/icons/WifiTethering'\n\nimport { makeStyles, useTheme } from '@material-ui/styles'\n\nconst CONTROLLER_NAME_KEY = 'ControllerName'\nconst DEFAULT_CONTROLLER_NAME = 'Controller'\n\nconst useStyles = makeStyles(theme => ({\n  controllerInfo: {\n    paddingTop: '0px',\n    '& .paper': {\n      padding: '5px'\n    }\n  },\n  controllerName: {\n    fontSize: '1.5rem',\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n    fontWeight: 400,\n    lineHeight: 1.33,\n    letterSpacing: '0em',\n    width: '100%',\n    '&::before': {\n      borderBottom: 'none !important'\n    }\n  },\n  warningChip: {\n    backgroundColor: `var(--color, ${theme.colors.danger})`,\n    color: 'white'\n  },\n  controllerTitle: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'baseline',\n    textEmphasis: 'bold'\n  }\n}))\n\nexport default function ControllerInfo (props) {\n  const classes = useStyles()\n  const theme = useTheme()\n  const { controller, loading, error } = props\n  const { city, country, lat, lon, query } = controller.location || {}\n\n  const controllerError = error || controller.error || null\n  const [controllerName, setControllerName] = React.useState(() => {\n    return window.localStorage.getItem(CONTROLLER_NAME_KEY) || DEFAULT_CONTROLLER_NAME\n  })\n\n  const updateControllerName = (e) => {\n    const name = e.target.value\n    window.localStorage.setItem(CONTROLLER_NAME_KEY, name)\n    setControllerName(name)\n  }\n\n  React.useEffect(() => {\n    if (controllerName === DEFAULT_CONTROLLER_NAME) {\n      window.document.title = 'ECN Viewer'\n      return\n    }\n    window.document.title = controllerName\n  }, [controllerName])\n\n  return (\n    <div className={classes.controllerInfo}>\n      <div className={classes.controllerTitle}>\n        <Typography style={{ width: '100%' }} variant='h5'>\n          <Input className={classes.controllerName} value={controllerName} onChange={updateControllerName} />\n        </Typography>\n        {controllerError &&\n          <Tooltip title={controllerError.message} aria-label='Error'>\n            <Chip label='The controller is not reachable' style={{ '--color': theme.colors.gold }} className={classes.warningChip} />\n          </Tooltip>}\n      </div>\n      <List>\n        <ListItem>\n          <ListItemIcon><LocationCityIcon /></ListItemIcon>\n          {loading ? <ListItemText><Skeleton /></ListItemText> : <ListItemText primary={`${city}, ${country}`} />}\n        </ListItem>\n        <ListItem style={{ cursor: 'pointer' }} onClick={() => props.selectController()}>\n          <ListItemIcon><GPSFixedIcon /></ListItemIcon>\n          {loading ? <ListItemText><Skeleton /></ListItemText> : <ListItemText primary={`${lat}, ${lon}`} />}\n        </ListItem>\n        <ListItem>\n          <ListItemIcon><IPIcon /></ListItemIcon>\n          {loading ? <ListItemText><Skeleton /></ListItemText> : <ListItemText primary={query} />}\n        </ListItem>\n      </List>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport { Typography, Paper } from '@material-ui/core'\n\nimport { makeStyles } from '@material-ui/styles'\nconst useStyles = makeStyles({\n  summary: {\n    display: 'grid',\n    gridTemplateColumns: 'repeat(3, 1fr)',\n    gridColumnGap: '15px',\n    textAlign: 'center'\n  }\n})\n\nexport default function ActiveResources (props) {\n  const classes = useStyles()\n  const { activeFlows, activeAgents, activeMsvcs, loading } = props\n  return (\n    <div>\n      <Typography variant='h5'>Active resources</Typography>\n      <br />\n      <div className={classes.summary}>\n        <Paper>\n          <Typography variant='h3'>{loading ? 0 : activeFlows.length}</Typography>\n          <Typography variant='subtitle1'>Applications</Typography>\n        </Paper>\n        <Paper>\n          <Typography variant='h3'>{loading ? 0 : activeAgents.length}</Typography>\n          <Typography variant='subtitle1'>Agents</Typography>\n        </Paper>\n        <Paper>\n          <Typography variant='h3'>{loading ? 0 : activeMsvcs.length}</Typography>\n          <Typography variant='subtitle1'>Microservices</Typography>\n        </Paper>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport { ThemeProvider } from '@material-ui/styles'\nimport { createMuiTheme } from '@material-ui/core/styles'\n\nimport customTheme from './theme.json'\n\nconst colors = {\n  phosphorus: '#FF585D',\n  cobalt: '#5064EC',\n  gold: '#F5A623',\n  chromium: '#00C0A9',\n  argon: '#7A3BFF',\n  carbon: '#002E43',\n  lead: '#57687D',\n  aluminium: '#ACB5C6',\n  silver: '#FAFCFF',\n  white: '#FFFFFF'\n}\n\nexport const theme = createMuiTheme({\n  ...customTheme,\n  colors: {\n    ...colors,\n    success: colors.chromium,\n    error: colors.phosphorus,\n    danger: colors.gold\n  }\n})\n\nexport default function Theming (props) {\n  return (\n    <ThemeProvider theme={theme}>\n      {props.children}\n    </ThemeProvider>\n  )\n}\n","import { theme } from '../Theme/ThemeProvider'\n\nexport const statusColor = {\n  RUNNING: theme.colors.chromium,\n  UNKNOWN: theme.colors.aluminium,\n  OFFLINE: theme.colors.phosphorus\n}\n\nexport const msvcStatusColor = {\n  RUNNING: theme.colors.cobalt,\n  UNKNOWN: theme.colors.aluminium,\n  OFFLINE: theme.colors.aluminium\n}\n","import React from 'react'\nimport { Modal, Paper, Typography, Button } from '@material-ui/core'\nimport CloseIcon from '@material-ui/icons/Close'\n\nimport { makeStyles } from '@material-ui/styles'\nconst useStyles = makeStyles(theme => ({\n  modalTitle: {\n    backgroundColor: theme.colors.carbon,\n    borderRadius: '4px 4px 0 0',\n    color: 'white',\n    padding: '5px',\n    display: 'flex',\n    justifyContent: 'space-between'\n  },\n  modal: {\n    width: '60%',\n    top: '15%',\n    left: '20%',\n    position: 'absolute',\n    borderRadius: '4px'\n  },\n  modalContent: {\n    maxHeight: '600px',\n    overflowY: 'scroll',\n    padding: '15px'\n  },\n  modalActions: {\n    display: 'flex',\n    backgroundColor: theme.colors.silver,\n    alignItems: 'flex-end'\n  },\n  modalAction: {\n    marginLeft: '5px'\n  }\n}))\n\nexport default function _Modal (props) {\n  const classes = useStyles()\n  const { title, open, onClose } = props\n  return (\n    <Modal\n      aria-labelledby={`${title} modal`}\n      {...{\n        open,\n        onClose\n      }}\n    >\n      <Paper className={classes.modal}>\n        <div className={classes.modalTitle}>\n          <Typography variant='h5'>{title}</Typography>\n          <CloseIcon style={{ cursor: 'pointer' }} onClick={onClose} />\n        </div>\n        <div className={classes.modalContent}>\n          {props.children}\n        </div>\n        {props.actions && !!props.actions.length &&\n          <div className={classes.modalActions}>\n            {props.actions.map(a => <Button key={a.text} className={`${a.className} ${classes.modalAction}`} {...{ variant: a.variant, onClick: a.onClick }}>{a.text}</Button>)}\n          </div>}\n      </Paper>\n    </Modal>\n  )\n}\n","import React from 'react'\nimport IconButton from '@material-ui/core/IconButton'\nimport WarningIcon from '@material-ui/icons/Warning'\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle'\nimport ErrorIcon from '@material-ui/icons/Error'\nimport InfoIcon from '@material-ui/icons/Info'\nimport CloseIcon from '@material-ui/icons/Close'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { SnackbarContent } from '@material-ui/core'\n\nconst variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon\n}\n\nconst useStyles = makeStyles(theme => ({\n  success: {\n    backgroundColor: theme.colors.success\n  },\n  error: {\n    backgroundColor: theme.colors.error\n  },\n  info: {\n    backgroundColor: theme.colors.cobalt\n  },\n  warning: {\n    backgroundColor: theme.colors.danger\n  },\n  icon: {\n    fontSize: 20\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing(1)\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  alert: {\n    margin: '5px',\n    borderRadius: '4px',\n    boxShadow: `0 4px 6px 0 ${theme.colors.carbon}`\n  },\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    position: 'fixed',\n    bottom: '10px',\n    left: '10px',\n    zIndex: '9999'\n  }\n}))\n\nexport default function Alert (props) {\n  const classes = useStyles()\n  const { open, alerts } = props\n\n  return open ? (\n    <div className={classes.container}>\n      {alerts.map((a, idx) => {\n        const handleClick = a.onClose\n        const variantKey = a.type || 'info'\n        const Icon = variantIcon[variantKey]\n        return (\n          <SnackbarContent\n            key={a.key || a.id || idx}\n            className={`${classes[variantKey]} ${classes.alert} ${a.className}`}\n            aria-describedby='client-snackbar'\n            message={\n              <span id='client-snackbar' className={classes.message}>\n                <Icon className={`${classes.icon} ${classes.iconVariant}`} />\n                {a.message}\n              </span>\n            }\n            action={[\n              <IconButton key='close' aria-label='Close' color='inherit' onClick={handleClick}>\n                <CloseIcon className={classes.icon} />\n              </IconButton>\n            ]}\n          />\n        )\n      })}\n    </div>\n  ) : null\n}\n","import React from 'react'\nimport { findIndex } from 'lodash'\nimport Alert from './Alert'\n\nexport const FeedbackContext = React.createContext({\n  feedbacks: [],\n  setFeedbacks: () => {},\n  pushFeedback: () => {}\n})\n\nconst AUTO_HIDE = 6000\n\nconst actions = {\n  ADD: 'add',\n  REMOVE: 'remove',\n  SET: 'set'\n}\n\nconst initState = {\n  feedbacks: [],\n  nextId: 0\n}\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case actions.ADD:\n      return {\n        feedbacks: [...state.feedbacks,\n          {\n            ...action.data,\n            timeout: setTimeout(() => {\n              action.dispatch({ type: actions.REMOVE, data: { id: state.nextId } })\n            }, AUTO_HIDE),\n            id: state.nextId\n          }],\n        nextId: state.nextId + 1\n      }\n    case actions.REMOVE: {\n      const idxToRemove = findIndex(state.feedbacks, f => f.id === action.data.id)\n      if (idxToRemove === -1) return state\n      return {\n        ...state,\n        feedbacks: [...state.feedbacks.slice(0, idxToRemove), ...state.feedbacks.slice(idxToRemove + 1)]\n      }\n    }\n    case actions.SET:\n      return {\n        ...state,\n        feedbacks: action.data\n      }\n    default:\n      return state\n  }\n}\n\nexport default function Context (props) {\n  const [state, dispatch] = React.useReducer(reducer, initState)\n  const setFeedbacks = (newFeedbacks) => {\n    console.log(' ---> SetFeedbacks ')\n    dispatch({ type: actions.SET, data: newFeedbacks })\n  }\n  const pushFeedback = (newFeedback) => {\n    console.log(' ---> pushFeedback ')\n    dispatch({ type: actions.ADD, data: newFeedback, dispatch })\n    // Update current feedback array (same array will be used if multiple calls to pushFeedback in the same render loop)\n    state.feedbacks.push(newFeedback)\n  }\n\n  console.log('======> Updating feedback context')\n\n  return (\n    <FeedbackContext.Provider value={{ feedbacks: state.feedbacks, setFeedbacks, pushFeedback }}>\n      {props.children}\n      <FeedbackContext.Consumer>\n        {({ feedbacks, setFeedbacks }) =>\n          <Alert\n            open={!!feedbacks.length}\n            alerts={feedbacks.map((f, idx) => ({\n              ...f,\n              onClose: () => dispatch({ type: actions.REMOVE, data: f })\n            }))}\n          />}\n      </FeedbackContext.Consumer>\n    </FeedbackContext.Provider>\n  )\n}\n","import React, { useEffect } from 'react'\n\nimport controllerJson from './controller.json'\n\nconst initControllerState = (() => {\n  const localUser = window.localStorage.getItem('iofogUser')\n  if (localUser) {\n    controllerJson.user = JSON.parse(localUser)\n  }\n  return {\n    ...controllerJson,\n    api: `${window.location.protocol}//${controllerJson.ip}:${controllerJson.port || 80}/`,\n    location: {\n      lat: 'Unknown',\n      lon: 'Unknown',\n      query: controllerJson.ip\n    }\n  }\n})()\n\nconst IPLookUp = 'http://ip-api.com/json/'\n\n// If dev mode, use proxy\n// Otherwise assume you are running on the Controller\nconst getUrl = (path) => controllerJson.dev ? `/api/controllerApi${path}` : `${window.location.protocol}//${[window.location.hostname, controllerJson.port].join(':')}${path}`\nconst getHeaders = (headers, controllerConfig) => controllerJson.dev\n  ? ({\n    ...headers,\n    'ECN-Api-Destination': controllerConfig.api\n  }) : headers\n\nexport const ControllerContext = React.createContext({\n  controller: {},\n  updateController: () => {}\n})\n\nconst lookUpControllerInfo = async (controllerConfig) => {\n  if (!controllerConfig.ip) {\n    controllerConfig.ip = window.location.host.split(':')[0] // Get only ip, not port\n  }\n  const localhost = new RegExp('(0\\.0\\.0\\.0|localhost|127\\.0\\.0\\.1|192\\.168\\.)') // eslint-disable-line no-useless-escape\n  const ip = localhost.test(controllerConfig.ip) ? '8.8.8.8' : controllerConfig.ip\n  const response = await window.fetch(IPLookUp + ip)\n  if (response.ok) {\n    return response.json()\n  } else {\n    throw new Error(response.statusText)\n  }\n}\n\nconst updateControllerInfo = async (controllerConfig) => {\n  let ipInfo = {}\n  try {\n    ipInfo = await lookUpControllerInfo(controllerConfig)\n  } catch (e) {\n    ipInfo = {\n      lat: 'Unknown',\n      lon: 'Unknown',\n      query: controllerConfig.ip\n    }\n  }\n\n  return {\n    ...controllerConfig,\n    location: ipInfo\n  }\n}\n\nconst initState = {\n  controller: initControllerState,\n  token: null\n}\n\nconst actions = {\n  ERROR: 'Error',\n  CLEAN_ERROR: 'Clean error',\n  UPDATE: 'Update',\n  SET_TOKEN: 'Set token'\n}\n\nconst reducer = (state, action) => {\n  console.log({ state, action })\n  const newState = (() => {\n    switch (action.type) {\n      case actions.ERROR:\n        return {\n          ...state,\n          controller: {\n            ...state.controller,\n            error: action.data\n          }\n        }\n      case actions.CLEAN_ERROR:\n        return {\n          ...state,\n          controller: {\n            ...state.controller,\n            error: null\n          }\n        }\n      case actions.UPDATE:\n        return {\n          ...state,\n          controller: {\n            ...state.controller,\n            ...action.data\n          }\n        }\n      case actions.SET_TOKEN:\n        return {\n          ...state,\n          token: action.data,\n          controller: {\n            ...state.controller,\n            error: null\n          }\n        }\n      default:\n        return state\n    }\n  })()\n  newState.controller.dev = controllerJson.dev\n  return newState\n}\n\nexport default function Context (props) {\n  const [state, dispatch] = React.useReducer(reducer, initState)\n  const { token, controller } = state\n\n  const authenticate = async (controllerConfig) => {\n    const response = await window.fetch(getUrl('/api/v3/user/login'), {\n      method: 'POST',\n      headers: getHeaders({\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      }, controllerConfig),\n      body: JSON.stringify(controllerConfig.user)\n    })\n    if (response.ok) {\n      const token = (await response.json()).accessToken\n      dispatch({ type: actions.SET_TOKEN, data: token })\n      return token\n    } else {\n      dispatch({ type: actions.SET_TOKEN, data: null })\n      throw new Error(response.statusText)\n    }\n  }\n\n  // Wrapper around window.fetch to add proxy and authorization headers\n  const request = async (path, options = {}) => {\n    try {\n      let t = token\n      if (!t) {\n        t = await authenticate(controller)\n      }\n      const response = await window.fetch(getUrl(path), {\n        ...options,\n        headers: getHeaders({\n          ...options.headers,\n          Authorization: t\n        }, controller)\n      })\n      if (state.controller.error) {\n        dispatch({ type: actions.CLEAN_ERROR })\n      }\n      return response\n    } catch (err) {\n      dispatch({ type: actions.ERROR, data: err })\n      return ({\n        ok: false,\n        statusText: err.message || 'Could not reach controller'\n      })\n    }\n  }\n\n  const updateController = async (newController) => {\n    if (controllerJson.dev) { newController.api = `http://${newController.ip}:${newController.port || 80}/` }\n    window.localStorage.setItem('iofogUser', JSON.stringify(newController.user))\n    try {\n      await authenticate(newController)\n    } catch (e) {\n      dispatch({ type: actions.ERROR, data: e })\n      dispatch({ type: actions.UPDATE, data: await updateControllerInfo(newController) })\n      throw e\n    }\n    dispatch({ type: actions.UPDATE, data: await updateControllerInfo(newController) })\n  }\n\n  useEffect(() => {\n    const effect = async () => {\n      dispatch({ type: actions.UPDATE, data: await updateControllerInfo(initState.controller) })\n    }\n    effect()\n  }, [])\n\n  return (\n    <ControllerContext.Provider value={{ controller, updateController, request }}>\n      {props.children}\n    </ControllerContext.Provider>\n  )\n}\n","import React from 'react'\n\nimport { Divider, TextField, Grid, Button } from '@material-ui/core'\nimport { FeedbackContext } from '../../Utils/FeedbackContext'\n\nimport { makeStyles } from '@material-ui/styles'\nimport { ControllerContext } from '../../ControllerProvider'\nconst useStyles = makeStyles({\n  divider: {\n    margin: '5px'\n  }\n})\n\nconst initNode = {\n  name: '',\n  ip: '',\n  key: '',\n  port: 54321\n}\n\nconst newError = (message) => ({ message })\n\nexport default function ConnectNode (props) {\n  const classes = useStyles()\n  const [node, setNode] = React.useState({ ...initNode })\n  const { pushFeedback } = React.useContext(FeedbackContext)\n  const { request } = React.useContext(ControllerContext)\n\n  const handleChange = key => (event) => {\n    setNode({ ...node, [key]: event.target.value })\n  }\n\n  const createAgent = async (agent) => {\n    const response = await request('/api/v3/iofog', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(agent)\n    })\n    if (response.ok) {\n      pushFeedback({ message: 'ioFog created!', type: 'success' })\n      const a = await response.json()\n      return a.uuid\n    }\n    throw (newError(`Failed to create iofog: ${response.statusText}`))\n  }\n\n  const getProvisioningKey = async (uuid) => {\n    const response = await request(`/api/v3/iofog/${uuid}/provisioning-key`)\n    if (response.ok) {\n      const a = await response.json()\n      return a.key\n    }\n    throw (newError(`Failed to retrieve provisioning key: ${response.statusText}`))\n  }\n\n  const linkAgent = async (agent, controller) => {\n    const response = await window.fetch('api/agentApi/v2/config', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        Authorization: agent.key,\n        ioFogApi: `http://${agent.ip}:${agent.port}`\n      },\n      body: JSON.stringify({ 'controller-url': `http://${controller.ip}:${controller.port}/api/v3/` })\n    })\n    if (response.ok) {\n      pushFeedback({ message: 'Agent linked!', type: 'success' })\n      return true\n    }\n    throw (newError(`Failed to link agent: ${response.statusText}`))\n  }\n\n  const provisionAgent = async (agent, key) => {\n    const response = await window.fetch('api/agentApi/v2/provision', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        Authorization: agent.key,\n        ioFogApi: `http://${agent.ip}:${agent.port}`\n      },\n      body: JSON.stringify({ 'provisioning-key': key })\n    })\n    if (response.ok) {\n      pushFeedback({ message: 'Agent provisioned!', type: 'success' })\n      return true\n    }\n    throw (newError(`Failed to provision agent: ${response.statusText}`))\n  }\n\n  const connect = async () => {\n    try {\n      const iofogUuid = await createAgent({ name: node.name, fogType: 0 })\n      const provisioningKey = await getProvisioningKey(iofogUuid)\n      await linkAgent(node, props.controller)\n      await provisionAgent(node, provisioningKey)\n      pushFeedback({ message: 'Agent connected!', type: 'success' })\n    } catch (e) {\n      pushFeedback({ message: e.message, type: 'error', uuid: 'error' })\n    }\n  }\n\n  return (\n    <>\n      <Grid container spacing={2}>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            id='name'\n            label='Name'\n            onChange={handleChange('name')}\n            value={node.name}\n            fullWidth\n            className={classes.textField}\n            margin='normal'\n          />\n        </Grid>\n        <Grid item xs={6} sm={3}>\n          <TextField\n            id='ip'\n            label='IP'\n            onChange={handleChange('ip')}\n            value={node.ip}\n            fullWidth\n            className={classes.textField}\n            margin='normal'\n          />\n        </Grid>\n        <Grid item xs={6} sm={3}>\n          <TextField\n            id='port'\n            label='Port'\n            onChange={handleChange('port')}\n            value={node.port}\n            fullWidth\n            type='number'\n            className={classes.textField}\n            margin='normal'\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            id='key'\n            label='Authorization key'\n            onChange={handleChange('key')}\n            value={node.key}\n            fullWidth\n            className={classes.textField}\n            margin='normal'\n            helperText='Authorization key can be found in /etc/iofog-agent/local-api file'\n          />\n        </Grid>\n      </Grid>\n      <Divider className={classes.divider} />\n      <Grid container justify='flex-end'>\n        <Grid item>\n          <Button onClick={connect}>\n            Connect\n          </Button>\n        </Grid>\n      </Grid>\n    </>\n  )\n}\n","import React from 'react'\nimport Downshift from 'downshift'\nimport deburr from 'lodash/deburr'\nimport get from 'lodash/get'\nimport { MenuItem, Paper, TextField } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    height: 250\n  },\n  container: {\n    flexGrow: 1,\n    position: 'relative'\n  },\n  paper: {\n    position: 'absolute',\n    zIndex: 1,\n    marginTop: theme.spacing(1),\n    marginBot: theme.spacing(2),\n    left: 0,\n    right: 0,\n    maxHeight: '250px',\n    overflowY: 'scroll'\n  },\n  chip: {\n    margin: theme.spacing(0.5, 0.25)\n  },\n  inputRoot: {\n    flexWrap: 'wrap'\n  },\n  inputInput: {\n    width: 'auto',\n    flexGrow: 1\n  },\n  divider: {\n    height: theme.spacing(2)\n  }\n}))\n\nfunction renderInput (inputProps) {\n  const { InputProps, classes, ref, ...others } = inputProps\n  return (\n    <TextField\n      InputProps={{\n        inputRef: ref,\n        classes: {\n          root: classes.inputRoot,\n          input: classes.inputInput\n        },\n        ...InputProps\n      }}\n      {...others}\n    />\n  )\n}\n\nfunction renderSuggestion (suggestionProps) {\n  const { suggestion, index, itemProps, highlightedIndex, selectedItem } = suggestionProps\n  const isHighlighted = highlightedIndex === index\n  const isSelected = (selectedItem || {}).label === suggestion.label\n\n  return (\n    <MenuItem\n      {...itemProps}\n      key={suggestion.label}\n      selected={isHighlighted}\n      component='div'\n      style={{\n        fontWeight: isSelected ? 500 : 400\n      }}\n    >\n      {suggestion.label}\n    </MenuItem>\n  )\n}\n\nexport default function Autocomplete (props) {\n  const classes = useStyles()\n\n  const getSuggestions = (value, { showEmpty = false } = {}) => {\n    const inputValue = deburr(value.trim()).toLowerCase()\n    const inputLength = inputValue.length\n    let count = 0\n\n    return inputLength === 0 && !showEmpty\n      ? []\n      : props.suggestions.filter(suggestion => {\n        const keep = count < props.maxSuggestions && suggestion.label.toLowerCase().startsWith(inputValue.toLowerCase())\n        if (keep) {\n          count += 1\n        }\n        return keep\n      })\n  }\n\n  return (\n    <Downshift\n      itemToString={item => get(item, 'label', '')}\n      onChange={props.onChange}\n      initialSelectedItem={props.initialSelectedItem}\n      {...(props.selectedItem ? { selectedItem: props.selectedItem } : {})}\n      id='downshift-options'\n    >\n      {({\n        clearSelection,\n        getInputProps,\n        getItemProps,\n        getLabelProps,\n        getMenuProps,\n        highlightedIndex,\n        inputValue,\n        isOpen,\n        openMenu,\n        selectedItem\n      }) => {\n        const { onBlur, onChange, onFocus, ...inputProps } = getInputProps({\n          onChange: event => {\n            if (event.target.value === '') {\n              clearSelection()\n            }\n          },\n          onFocus: openMenu,\n          disabled: props.disabled || false,\n          placeholder: props.placeholder || ''\n        })\n\n        return (\n          <div className={classes.container}>\n            {renderInput({\n              fullWidth: true,\n              classes,\n              label: props.label,\n              InputLabelProps: getLabelProps({ shrink: true }),\n              InputProps: { onBlur, onChange, onFocus },\n              inputProps\n            })}\n\n            <div {...getMenuProps()}>\n              {isOpen ? (\n                <Paper className={classes.paper} square>\n                  {getSuggestions(inputValue, { showEmpty: true }).map((suggestion, index) =>\n                    renderSuggestion({\n                      suggestion,\n                      index,\n                      itemProps: getItemProps({ item: suggestion }),\n                      highlightedIndex,\n                      selectedItem\n                    })\n                  )}\n                </Paper>\n              ) : null}\n            </div>\n          </div>\n        )\n      }}\n    </Downshift>\n  )\n}\n","import React from 'react'\nimport ReactJson from 'react-json-view'\nimport get from 'lodash/get'\n\nimport { Grid, Paper, Typography, TextField, Divider, Select, Input, Button, InputLabel, FormControl, FormControlLabel, Checkbox, MenuItem } from '@material-ui/core'\nimport CloseIcon from '@material-ui/icons/Close'\nimport SwapIcon from '@material-ui/icons/SwapHoriz'\n\nimport Autocomplete from '../../Utils/Autocomplete'\n\nimport { makeStyles } from '@material-ui/styles'\nimport { FeedbackContext } from '../../Utils/FeedbackContext'\nimport { ControllerContext } from '../../ControllerProvider'\n\nconst useStyles = makeStyles({\n  divider: {\n    margin: '5px'\n  },\n  formControl: {\n    width: '100%'\n  },\n  rowIcon: {\n    display: 'flex',\n    justifyContent: 'space-around'\n  },\n  newPaper: {\n    border: '1px solid hsla(0, 0%, 0%, 0.2)',\n    boxShadow: '0 4px 6px 0 hsla(0,0%,0%,0.2)',\n    borderRadius: '4px',\n    padding: '10px',\n    marginTop: '10px'\n  },\n  inputWithIcon: { display: 'flex', alignItems: 'baseline', justifyContent: 'space-between' }\n})\n\nconst ITEM_HEIGHT = 48\nconst ITEM_PADDING_TOP = 8\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250\n    }\n  }\n}\n\nconst initMsvc = {\n  flow: {},\n  name: '',\n  catalog: {\n    images: []\n  },\n  volumeMappings: [],\n  ports: [],\n  rootHostAccess: false,\n  _new: true\n}\n\nconst initFlow = {\n  name: '',\n  isActivated: true\n}\n\nconst initCatalogItem = (fogTypeId) => ({\n  name: '',\n  images: [{\n    containerImage: '',\n    fogTypeId\n  }],\n  registryId: 1\n})\n\nconst initRoute = (from) => ({\n  from,\n  to: {}\n})\n\nconst randomString = () => Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 5)\n\nconst generateRouteSelect = (current, list, label, onChange) => {\n  const isNewMsvc = get(current, '_new', false)\n  return (\n    <Autocomplete\n      label={label}\n      placeholder='Select a microservice'\n      onChange={onChange}\n      disabled={isNewMsvc}\n      selectedItem={isNewMsvc ? list[list.length - 1] : current}\n      maxSuggestions={20}\n      suggestions={list.filter(e => !isNewMsvc ? !!e.uuid : true).map(m => ({\n        ...m,\n        label: m.name\n      }))}\n    />\n  )\n}\n\nexport default function AddMicroservice (props) {\n  const classes = useStyles()\n  const [flows, setFlows] = React.useState([])\n  const [catalog, setCatalog] = React.useState([])\n  // Due to polling, the component is re-rendering every 3 sec.\n  // To avoid JSON edit popups to be closed every 3 sec,\n  // we need to keep the config and the JSX ReactJson component as ref\n  const config = React.useRef({})\n  const ReactJsonRef = React.useRef(\n    <ReactJson src={config.current} name={false} onAdd={(e) => { config.current = e.updated_src }} onEdit={(e) => { config.current = e.updated_src }} onDelete={(e) => { config.current = e.updated_src }} />\n  )\n  const [msvc, setMsvc] = React.useState(initMsvc)\n  const [newFlow, setNewFlow] = React.useState(initFlow)\n  const [newCatalogItem, setNewCatalogItem] = React.useState(() => initCatalogItem(get(props, 'target.fogTypeId', 1)))\n  const [routes, setRoutes] = React.useState([])\n\n  const agent = props.target\n  const { pushFeedback } = React.useContext(FeedbackContext)\n  const { request } = React.useContext(ControllerContext)\n\n  React.useEffect(() => {\n    Promise.all([(async () => {\n      const flowRaw = await request('/api/v3/flow')\n      if (flowRaw.ok) {\n        const flowsRes = await flowRaw.json()\n        setFlows(flowsRes.flows)\n      }\n    })(), (async () => {\n      const catalogRaw = await request('/api/v3/catalog/microservices')\n      if (catalogRaw.ok) {\n        const catalogRes = await catalogRaw.json()\n        setCatalog(catalogRes.catalogItems.filter(item => {\n          for (const img of item.images) {\n            if (img.fogTypeId === agent.fogTypeId) { return true }\n          }\n          return false\n        })) // TODO: filter per userId\n      }\n    })()])\n  }, [agent.fogTypeId, request])\n\n  const handleChange = (key, setter, prevState) => e => setter({ ...prevState, [key]: e.target.value })\n  const handleMsvcChangeArray = (key, objKey, idx, valueDecorator = x => x) => e => setMsvc({\n    ...msvc,\n    [key]: [\n      ...msvc[key].slice(0, idx),\n      {\n        ...msvc[key][idx],\n        [objKey]: valueDecorator(e.target.value)\n      },\n      ...msvc[key].slice(idx + 1)\n    ]\n  })\n  const getCatalogImage = item => {\n    if (!get(item, 'id', null)) { return 'Select an image' }\n    for (const img of item.images) {\n      if (img.fogTypeId === agent.fogTypeId) { return img.containerImage }\n    }\n    return 'Image not found'\n  }\n\n  const addVolume = () => setMsvc({\n    ...msvc,\n    volumeMappings: [\n      ...msvc.volumeMappings,\n      {\n        hostDestination: '',\n        containerDestination: '',\n        accessMode: 'z'\n      }\n    ]\n  })\n\n  const addPort = () => setMsvc({\n    ...msvc,\n    ports: [\n      ...msvc.ports,\n      {\n        internal: '',\n        external: ''\n      }\n    ]\n  })\n\n  const removeFromArray = (key, idx) => setMsvc({\n    ...msvc,\n    [key]: [...msvc[key].slice(0, idx), ...msvc[key].slice(idx + 1)]\n  })\n\n  const addMsvc = async () => {\n    try {\n      const { name, ports, volumeMappings, rootHostAccess } = msvc\n      const response = await request('/api/v3/microservices', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          config: JSON.stringify(config.current),\n          name,\n          ports,\n          volumeMappings,\n          rootHostAccess,\n          flowId: msvc.flow.id,\n          iofogUuid: agent.uuid,\n          catalogItemId: msvc.catalog.id\n        })\n      })\n      if (response.ok) {\n        pushFeedback({ message: 'Microservice added!', type: 'success' })\n        const m = await response.json()\n        setMsvc(initMsvc)\n        return m.uuid\n      } else {\n        pushFeedback({ message: response.statusText, type: 'error' })\n      }\n    } catch (e) {\n      pushFeedback({ message: e.message })\n    }\n  }\n\n  const createFlow = async () => {\n    try {\n      const { name } = newFlow\n      const response = await request('/api/v3/flow', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newFlow)\n      })\n      if (response.ok) {\n        pushFeedback({ message: 'Flow created!', type: 'success' })\n        setNewFlow(initFlow)\n        const flow = { ...await response.json(), name }\n        setMsvc({ ...msvc, flow })\n        msvc.flow = flow\n        return true\n      } else {\n        pushFeedback({ message: response.statusText, type: 'error' })\n        return false\n      }\n    } catch (e) {\n      pushFeedback({ message: e.message })\n      return false\n    }\n  }\n\n  const createCatalogItem = async () => {\n    try {\n      const catalogItem = {\n        ...newCatalogItem,\n        name: randomString()\n      }\n      const response = await request('/api/v3/catalog/microservices', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(catalogItem)\n      })\n      if (response.ok) {\n        pushFeedback({ message: 'Image added to catalog!', type: 'success' })\n        setNewCatalogItem(initCatalogItem(agent.fogTypeId))\n        const catalog = { ...await response.json(), ...catalogItem }\n        setMsvc({ ...msvc, catalog })\n        msvc.catalog = catalog\n        return true\n      } else {\n        pushFeedback({ message: response.statusText, type: 'error' })\n        return false\n      }\n    } catch (e) {\n      pushFeedback({ message: e.message })\n      return false\n    }\n  }\n\n  const createRoute = async (route) => {\n    try {\n      const from = get(route, 'from.uuid')\n      const to = get(route, 'to.uuid')\n      const response = await request(`/api/v3/microservices/${from}/routes/${to}`, {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: ''\n      })\n      if (response.ok) {\n        pushFeedback({ message: `Route from ${route.from.name} to ${route.to.name} created !`, type: 'success' })\n        return true\n      } else {\n        pushFeedback({ message: response.statusText, type: 'error' })\n        return false\n      }\n    } catch (e) {\n      pushFeedback({ message: e.message })\n      return false\n    }\n  }\n\n  const createRoutes = async (defaultUuid) => {\n    for (const route of routes) {\n      if (!route.from.uuid) {\n        route.from.uuid = defaultUuid\n      }\n      if (!route.to.uuid) {\n        route.to.uuid = defaultUuid\n      }\n      await createRoute(route)\n    }\n  }\n\n  const createMsvc = async () => {\n    let success = true\n    try {\n      if (msvc.flow.id === -1) {\n        success = await createFlow()\n      }\n      if (success && msvc.catalog.id === -1) {\n        success = await createCatalogItem()\n      }\n      if (success) {\n        const uuid = await addMsvc()\n        await createRoutes(uuid)\n        props.onSuccess()\n      }\n    } catch (e) {\n\n    }\n  }\n\n  const routeList = (props.microservices || [])\n    .map(m => ({\n      ...m,\n      label: m.name\n    }))\n    .concat([{\n      ...msvc,\n      label: msvc.name ? msvc.name : '<New microservice>'\n    }])\n\n  return (\n    <>\n      <Grid container spacing={2}>\n        <Grid item xs={12} sm={6}>\n          <FormControl className={classes.formControl}>\n            <Autocomplete\n              label='Flow'\n              placeholder='Select a flow'\n              onChange={(selected, state) => {\n                handleChange('flow', setMsvc, msvc)({ target: { value: selected || {} } })\n              }}\n              maxSuggestions={20}\n              suggestions={flows.map(f => ({\n                ...f,\n                label: f.name\n              })).concat([{\n                id: -1,\n                label: '+ Add a flow'\n              }])}\n            />\n          </FormControl>\n          {msvc.flow.id === -1 &&\n            <Paper className={classes.newPaper}>\n              <Typography variant='subtitle2'>New flow</Typography>\n              <TextField\n                id='name'\n                label='Name'\n                required\n                onChange={handleChange('name', setNewFlow, newFlow)}\n                value={newFlow.name}\n                fullWidth\n                className={classes.textField}\n                margin='normal'\n              />\n              <FormControlLabel\n                style={{ color: 'rgba(0, 0, 0, 0.54)' }}\n                control={\n                  <Checkbox\n                    checked={newFlow.isActivated}\n                    onChange={e => setNewFlow({ ...newFlow, isActivated: e.target.checked })}\n                    value='checkedB'\n                    color='primary'\n                  />\n                }\n                label='Active'\n              />\n            </Paper>}\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <FormControl className={classes.formControl}>\n            <Autocomplete\n              label='Image'\n              placeholder='Select an image'\n              onChange={(selected, state) => {\n                handleChange('catalog', setMsvc, msvc)({ target: { value: selected || {} } })\n              }}\n              maxSuggestions={20}\n              suggestions={catalog.map(m => ({\n                ...m,\n                label: getCatalogImage(m)\n              })).concat([{\n                id: -1,\n                label: '+ Add an image'\n              }])}\n            />\n          </FormControl>\n          {msvc.catalog.id === -1 &&\n            <Paper className={classes.newPaper}>\n              <Typography variant='subtitle2'>New image</Typography>\n              <TextField\n                id='name'\n                label='Name'\n                required\n                onChange={e => setNewCatalogItem({\n                  ...newCatalogItem,\n                  images: [{\n                    ...newCatalogItem.images[0],\n                    containerImage: e.target.value\n                  }]\n                })}\n                value={newCatalogItem.images[0].containerImage}\n                fullWidth\n                className={classes.textField}\n                margin='normal'\n              />\n            </Paper>}\n        </Grid>\n      </Grid>\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <TextField\n            id='name'\n            label='Name'\n            required\n            onChange={handleChange('name', setMsvc, msvc)}\n            value={msvc.name}\n            fullWidth\n            className={classes.textField}\n            margin='normal'\n          />\n        </Grid>\n      </Grid>\n      <Divider className={classes.divider} />\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <Typography style={{ color: 'rgba(0, 0, 0, 0.54)' }} variant='subtitle1'>Configuration</Typography><br />\n          {ReactJsonRef.current}\n        </Grid>\n      </Grid>\n      <Divider className={classes.divider} />\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <Typography style={{ color: 'rgba(0, 0, 0, 0.54)' }} variant='subtitle1'>Volumes</Typography><br />\n          {msvc.volumeMappings.map((v, idx) =>\n            <Grid container spacing={2} key={idx} style={{ alignItems: 'flex-end' }}>\n              <Grid item xs={11}>\n                <Grid container spacing={2}>\n                  <Grid item xs={12} sm={4}>\n                    <TextField\n                      id='host'\n                      label='Host'\n                      required\n                      onChange={handleMsvcChangeArray('volumeMappings', 'hostDestination', idx)}\n                      value={v.hostDestination}\n                      fullWidth\n                      className={classes.textField}\n                      margin='dense'\n                    />\n                  </Grid>\n                  <Grid item xs={12} sm={4}>\n                    <TextField\n                      id='Container'\n                      label='Container'\n                      required\n                      onChange={handleMsvcChangeArray('volumeMappings', 'containerDestination', idx)}\n                      value={v.containerDestination}\n                      fullWidth\n                      className={classes.textField}\n                      margin='dense'\n                    />\n                  </Grid>\n                  <Grid item xs={12} sm={4}>\n                    <FormControl className={classes.formControl} style={{ marginTop: '5px' }}>\n                      <InputLabel htmlFor='select-flow'>Access mode</InputLabel>\n                      <Select\n                        required\n                        value={v.accessMode}\n                        onChange={handleMsvcChangeArray('volumeMappings', 'accessMode', idx)}\n                        input={<Input id='select-flow-input' />}\n                        MenuProps={MenuProps}\n                      >\n                        <MenuItem value='z'>Z</MenuItem>\n                      </Select>\n                    </FormControl>\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid item xs={1} className={classes.rowIcon}>\n                <CloseIcon style={{ cursor: 'pointer' }} onClick={() => removeFromArray('volumeMappings', idx)} />\n              </Grid>\n            </Grid>\n          )}\n          <Typography style={{ color: 'rgba(0, 0, 0, 0.54)', cursor: 'pointer' }} variant='caption' onClick={() => addVolume()}>+ Add</Typography>\n        </Grid>\n      </Grid>\n      <Divider className={classes.divider} />\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <Typography style={{ color: 'rgba(0, 0, 0, 0.54)' }} variant='subtitle1'>Ports</Typography><br />\n          {msvc.ports.map((p, idx) =>\n            <Grid container spacing={2} key={idx} style={{ alignItems: 'flex-end' }}>\n              <Grid item xs={11}>\n                <Grid container spacing={2}>\n                  <Grid item xs={12} sm={6}>\n                    <TextField\n                      id='host'\n                      label='External'\n                      required\n                      type='number'\n                      onChange={handleMsvcChangeArray('ports', 'external', idx, parseInt)}\n                      value={p.external}\n                      fullWidth\n                      className={classes.textField}\n                      margin='dense'\n                    />\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                    <TextField\n                      id='Container'\n                      label='Internal'\n                      required\n                      fullWidth\n                      type='number'\n                      onChange={handleMsvcChangeArray('ports', 'internal', idx, parseInt)}\n                      value={p.internal}\n                      className={classes.textField}\n                      margin='dense'\n                    />\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid item xs={1} className={classes.rowIcon}>\n                <CloseIcon style={{ cursor: 'pointer' }} onClick={() => removeFromArray('ports', idx)} />\n              </Grid>\n            </Grid>\n          )}\n          <Typography style={{ color: 'rgba(0, 0, 0, 0.54)', cursor: 'pointer' }} variant='caption' onClick={() => addPort()}>+ Add</Typography>\n        </Grid>\n      </Grid>\n      <Divider className={classes.divider} />\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <Typography style={{ color: 'rgba(0, 0, 0, 0.54)' }} variant='subtitle1'>Routes</Typography><br />\n          {routes.map((r, idx) =>\n            <Grid container spacing={2} key={idx} style={{ alignItems: 'flex-end' }}>\n              <Grid item xs={11}>\n                <Grid container spacing={2} style={{ alignItems: 'flex-end' }}>\n                  <Grid item xs={12} sm={5}>\n                    {generateRouteSelect(r.from, routeList, 'From', selected => setRoutes([\n                      ...routes.slice(0, idx),\n                      {\n                        ...r,\n                        from: selected || {}\n                      },\n                      ...routes.slice(idx + 1)\n                    ]))}\n                  </Grid>\n                  <Grid item xs={2} className={classes.rowIcon}>\n                    <SwapIcon\n                      style={{ cursor: 'pointer' }} onClick={() => setRoutes([\n                        ...routes.slice(0, idx),\n                        {\n                          ...r,\n                          from: r.to,\n                          to: r.from\n                        },\n                        ...routes.slice(idx + 1)\n                      ])}\n                    />\n                  </Grid>\n                  <Grid item xs={12} sm={5}>\n                    {generateRouteSelect(r.to, routeList, 'To', selected => setRoutes([\n                      ...routes.slice(0, idx),\n                      {\n                        ...r,\n                        to: selected || {}\n                      },\n                      ...routes.slice(idx + 1)\n                    ]))}\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid item xs={1} className={classes.rowIcon}>\n                <CloseIcon style={{ cursor: 'pointer' }} onClick={() => setRoutes([...routes.slice(0, idx), ...routes.slice(idx + 1)])} />\n              </Grid>\n            </Grid>\n          )}\n          <Typography style={{ color: 'rgba(0, 0, 0, 0.54)', cursor: 'pointer' }} variant='caption' onClick={() => setRoutes([...routes, initRoute(msvc)])}>+ Add</Typography>\n        </Grid>\n      </Grid>\n      <Divider className={classes.divider} />\n      <FormControlLabel\n        style={{ color: 'rgba(0, 0, 0, 0.54)' }}\n        control={\n          <Checkbox\n            checked={msvc.rootHostAccess}\n            onChange={e => setMsvc({ ...msvc, rootHostAccess: e.target.checked })}\n            value='checkedB'\n            color='primary'\n          />\n        }\n        label='Root host access'\n      />\n      <Divider className={classes.divider} />\n      <Grid container justify='flex-end'>\n        <Grid item>\n          <Button onClick={createMsvc}>\n            Add\n          </Button>\n        </Grid>\n      </Grid>\n    </>\n  )\n}\n","import React from 'react'\n\nimport { FormControl, Divider, Grid, Button, Input, InputLabel, Select, MenuItem, Checkbox, ListItemText, Chip } from '@material-ui/core'\n\nimport { makeStyles } from '@material-ui/styles'\nimport { FeedbackContext } from '../../Utils/FeedbackContext'\nimport { ControllerContext } from '../../ControllerProvider'\nconst useStyles = makeStyles({\n  chips: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  chip: {\n    margin: 2\n  },\n  formControl: {\n    width: '100%',\n    marginBottom: '15px'\n  },\n  divider: {\n    margin: '5px'\n  }\n})\n\nconst ITEM_HEIGHT = 48\nconst ITEM_PADDING_TOP = 8\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250\n    }\n  }\n}\n\nexport default function RemoveMicroservice (props) {\n  const classes = useStyles()\n  const [msvcsToRemove, setMsvcsToRemove] = React.useState([])\n  const { pushFeedback } = React.useContext(FeedbackContext)\n  const { request } = React.useContext(ControllerContext)\n\n  function handleChange (event) {\n    setMsvcsToRemove(event.target.value)\n  }\n\n  const remove = async () => {\n    try {\n      let success = true\n      for (const uuid of msvcsToRemove) {\n        const res = request(`/api/v3/microservices/${uuid}`, {\n          method: 'DELETE'\n        })\n        if (!res.ok) {\n          success = false\n          pushFeedback({ message: `${msvcsPerUUID[uuid].name}: ${res.statusText}`, type: 'error', uuid })\n        } else {\n          const idx = msvcsToRemove.indexOf(uuid)\n          setMsvcsToRemove([...msvcsToRemove.slice(0, idx), ...msvcsToRemove.slice(idx + 1)])\n        }\n      }\n      if (success) {\n        pushFeedback({ message: 'Microservices removed', type: 'success', uuid: 'success' })\n        props.onSuccess()\n      }\n    } catch (e) {\n      pushFeedback({ message: e.message, type: 'error', uuid: 'error' })\n    }\n  }\n\n  const { msvcs } = props\n\n  const msvcsPerUUID = msvcs.reduce((r, m) => ({\n    ...r,\n    [m.uuid]: m\n  }), {})\n\n  return (\n    <>\n      <FormControl className={classes.formControl}>\n        <InputLabel htmlFor='select-multiple-checkbox'>Microservices to remove</InputLabel>\n        <Select\n          multiple\n          value={msvcsToRemove}\n          onChange={handleChange}\n          input={<Input id='select-multiple-checkbox-rm-msvcs' />}\n          renderValue={selected => (\n            <div className={classes.chips}>\n              {selected.map(uuid => (\n                msvcsPerUUID[uuid] && <Chip key={uuid} label={msvcsPerUUID[uuid].name} className={classes.chip} />\n              ))}\n            </div>\n          )}\n          MenuProps={MenuProps}\n        >\n          {msvcs.map(m => (\n            <MenuItem key={m.uuid} value={m.uuid}>\n              <Checkbox checked={msvcsToRemove.indexOf(m.uuid) > -1} />\n              <ListItemText primary={m.name} />\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n      <Divider className={classes.divider} />\n      <Grid container justify='flex-end'>\n        <Grid item>\n          <Button onClick={remove}>\n            Remove\n          </Button>\n        </Grid>\n      </Grid>\n    </>\n  )\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Tabs from '@material-ui/core/Tabs'\nimport Tab from '@material-ui/core/Tab'\nimport Typography from '@material-ui/core/Typography'\n\nfunction TabContainer (props) {\n  return (\n    <Typography component='div' style={{ padding: 8 * 3 }}>\n      {props.children}\n    </Typography>\n  )\n}\n\nTabContainer.propTypes = {\n  children: PropTypes.node.isRequired\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper\n  }\n}))\n\nexport default function SimpleTabs (props) {\n  const classes = useStyles()\n  const [value, setValue] = React.useState(0)\n\n  function handleChange (event, newValue) {\n    setValue(newValue)\n  }\n\n  return (\n    <div className={classes.root}>\n      <Tabs value={value} onChange={handleChange}>\n        {props.children.map((child, idx) => {\n          return (\n            <Tab key={child.id || idx} label={child.props.title} />\n          )\n        })}\n      </Tabs>\n      <TabContainer>{props.children[value]}</TabContainer>\n    </div>\n  )\n}\n","import React from 'react'\nimport ReactJson from 'react-json-view'\n\nimport { List, ListItem, ListSubheader, ListItemAvatar, Chip, Avatar, ListItemText, Menu, MenuItem, Typography } from '@material-ui/core'\n\nimport MoreIcon from '@material-ui/icons/MoreVert'\nimport MemoryIcon from '@material-ui/icons/Memory'\n\nimport { makeStyles } from '@material-ui/styles'\n\nimport { statusColor, msvcStatusColor } from '../utils'\nimport Modal from '../../Utils/Modal'\n\nimport ConnectNode from './ConnectNode'\nimport AddMicroservice from './AddMicroservice'\nimport RemoveMicroservice from './RemoveMicroservice'\nimport SimpleTabs from './Tabs'\n\nconst useStyles = makeStyles(theme => ({\n  avatarList: {\n    color: 'white',\n    backgroundColor: 'var(--statusColor, white)',\n    boxShadow: `0px 2px 2px ${theme.colors.carbon}`\n  },\n  msvcChipList: {\n    display: 'flex',\n    flexDirection: 'column',\n    width: '20%',\n    flex: '1',\n    paddingRight: '15px'\n  },\n  msvcChip: {\n    marginTop: 'var(--mTop, 0px)',\n    backgroundColor: `var(--color, ${theme.colors.cobalt})`,\n    fontSize: '10px',\n    borderRadius: '5px',\n    height: '20px',\n    margin: '2px',\n    width: '100px',\n    color: 'white',\n    '& .MuiChip-label': {\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap',\n      overflow: 'hidden',\n      display: 'block'\n    }\n  },\n  jsonDisplay: {\n    width: '99%',\n    minHeight: '30rem',\n    fontFamily: '\"Lucida Console\", Monaco, monospace',\n    fontSize: '0.8rem',\n    lineHeight: '1.2'\n  },\n  listTitle: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'baseline',\n    color: theme.palette.text.primary\n  },\n  link: {\n    color: theme.palette.text.secondary,\n    cursor: 'pointer',\n    '&:hover': {\n      textDecoration: 'underline'\n    }\n  }\n}))\n\nexport default function AgentList (props) {\n  const classes = useStyles()\n  const [openDetailsModal, setOpenDetailsModal] = React.useState(false)\n  const [openConnectNodeModal, setOpenConnectNodeModal] = React.useState(false)\n  const [openAddMicroserviceModal, setOpenAddMicroserviceModal] = React.useState(false)\n  const [openRemoveMicroserviceModal, setOpenRemoveMicroserviceModal] = React.useState(false)\n  const [menuAnchorEl, setMenuAnchorEl] = React.useState(null)\n  const { msvcsPerAgent, msvcs, agents, agent, setAgent, setAutozoom, loading } = props\n\n  const handleCloseMenu = () => setMenuAnchorEl(null)\n  const openMenu = (e) => setMenuAnchorEl(e.currentTarget)\n  const openDetails = () => {\n    setOpenDetailsModal(true)\n    handleCloseMenu()\n  }\n  // const openAddMicroservice = () => {\n  //   setOpenAddMicroserviceModal(true)\n  //   handleCloseMenu()\n  // }\n  // const openRemoveMicroservice = () => {\n  //   setOpenRemoveMicroserviceModal(true)\n  //   handleCloseMenu()\n  // }\n\n  return (\n    <>\n      <List\n        subheader={\n          <ListSubheader component='div' id='agent-list-subheader' style={{ position: 'relative' }} disableGutters disableSticky>\n            <div className={classes.listTitle}>\n              <div>\n                <Typography variant='h5'>Agents - <small>{loading ? 0 : agents.length} nodes</small></Typography>\n              </div>\n              <div>\n                <small className={classes.link} onClick={() => setAutozoom(true)}>See all ECN</small>\n              </div>\n            </div>\n          </ListSubheader>\n        }\n      >\n        {(loading ? [] : agents).map(a => {\n          const msvcs = msvcsPerAgent[a.uuid] || []\n          return (\n            <ListItem button key={a.uuid} onClick={() => setAgent(a)} selected={a.uuid === agent.uuid}>\n              <ListItemAvatar>\n                <Avatar style={{ '--statusColor': statusColor[a.daemonStatus] }} className={classes.avatarList}>\n                  <MemoryIcon />\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText primary={a.name} secondary={`${msvcs.length} Microservices`} />\n              <div className={classes.msvcChipList}>\n                {msvcs.length > 4\n                  ? (\n                    <Chip\n                      size='small'\n                      label={`${msvcs.length} microservices`}\n                      style={{\n                        '--mTop': '0px',\n                        '--color': msvcStatusColor[(a.daemonStatus === 'RUNNING') ? 'RUNNING' : 'UNKNOWN']\n                      }}\n                      className={classes.msvcChip}\n                      title={`${msvcs.length} microservices`}\n                    />\n                  )\n                  : msvcs.map((m, idx) => (\n                    <React.Fragment key={m.uuid}>\n                      <Chip\n                        size='small'\n                        label={m.name}\n                        style={{\n                          '--mTop': idx ? '2px' : '0px',\n                          '--color': msvcStatusColor[(a.daemonStatus === 'RUNNING' && m.flowActive) ? 'RUNNING' : 'UNKNOWN']\n                        }}\n                        className={classes.msvcChip}\n                        title={m.name}\n                      />\n                    </React.Fragment>\n                  ))}\n              </div>\n              <MoreIcon onClick={openMenu} />\n            </ListItem>\n          )\n        })}\n      </List>\n      <Modal\n        {...{\n          open: openDetailsModal,\n          title: `${agent.name} details`,\n          onClose: () => setOpenDetailsModal(false)\n        }}\n      >\n        <SimpleTabs>\n          <ReactJson title='Agent' src={agent} name={false} />\n          <ReactJson title='Microservices' src={msvcsPerAgent[agent.uuid]} name={false} />\n        </SimpleTabs>\n      </Modal>\n      <Modal\n        {...{\n          open: openAddMicroserviceModal,\n          title: `Deploy microservice to ${agent.name}`,\n          onClose: () => setOpenAddMicroserviceModal(false)\n        }}\n      >\n        <AddMicroservice {...{\n          target: agent,\n          microservices: msvcs,\n          onSuccess: () => setOpenAddMicroserviceModal(false)\n        }}\n        />\n      </Modal>\n      <Modal\n        {...{\n          open: openRemoveMicroserviceModal,\n          title: `Remove microservice from ${agent.name}`,\n          onClose: () => setOpenRemoveMicroserviceModal(false)\n        }}\n      >\n        <RemoveMicroservice\n          {...{\n            target: agent,\n            msvcs: msvcsPerAgent[agent.uuid] || [],\n            onSuccess: () => setOpenRemoveMicroserviceModal(false)\n          }}\n        />\n      </Modal>\n      <Modal\n        {...{\n          open: openConnectNodeModal,\n          title: 'Connect agent',\n          onClose: () => setOpenConnectNodeModal(false)\n        }}\n      >\n        <ConnectNode\n          {...{\n            controller: props.controller,\n            onSuccess: () => setOpenConnectNodeModal(false)\n          }}\n        />\n      </Modal>\n      <Menu\n        id='agent-menu'\n        anchorEl={menuAnchorEl}\n        keepMounted\n        open={Boolean(menuAnchorEl)}\n        onClose={handleCloseMenu}\n      >\n        <MenuItem onClick={openDetails}>Details</MenuItem>\n        {/* <Divider />\n        <MenuItem onClick={openAddMicroservice}>Add microservice</MenuItem>\n        <MenuItem onClick={openRemoveMicroservice}>Remove microservice</MenuItem> */}\n      </Menu>\n    </>\n  )\n}\n","import React from 'react'\nimport { isFinite, get } from 'lodash'\n\nimport GoogleMapReact from 'google-map-react'\nimport { fitBounds } from 'google-map-react/utils'\n\nimport { Badge, Avatar } from '@material-ui/core'\n\nimport MemoryIcon from '@material-ui/icons/Memory'\nimport CtrlIcon from '@material-ui/icons/DeveloperBoard'\n\nimport { makeStyles, useTheme } from '@material-ui/styles'\n\nimport { statusColor, msvcStatusColor } from './utils'\n\nconst useStyles = makeStyles(theme => ({\n  mapMarkerTransform: {\n    transform: 'translate(-50%, -100%)',\n    position: 'absolute'\n  },\n  msvcBadge: {\n    '& .MuiBadge-badge': {\n      backgroundColor: `var(--color, ${theme.colors.cobalt})`\n    }\n  },\n  mapMarker: {\n    backgroundColor: `var(--markerColor, ${theme.colors.success})`,\n    borderRadius: '50% 50% 50% 0 !important',\n    border: `2px solid var(--markerColor, ${theme.colors.success})`,\n    transform: 'rotate(-45deg)',\n    '& .MuiSvgIcon-root': {\n      transform: 'rotate(-45deg)'\n    }\n  },\n  mapWrapper: {\n    boxShadow: '0px 1px 3px 0px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 2px 1px -1px rgba(0,0,0,0.12)',\n    borderRadius: '4px',\n    width: '100%',\n    height: '100%',\n    maxHeight: '700px',\n    position: 'sticky',\n    top: '25px',\n    borderColor: theme.colors.aluminium,\n    '& div': {\n      borderRadius: '4px',\n      '& div': {\n        borderRadius: '4px'\n      }\n    }\n  }\n}))\n\nconst hasValidCoordinates = (coordinates) => {\n  return isFinite(coordinates[0]) && isFinite(coordinates[1])\n}\n\nexport default function Map (props) {\n  const classes = useStyles()\n  const theme = useTheme()\n  const DomElementRef = React.useRef()\n  const { controller, agent, setAgent, msvcsPerAgent, map, autozoom, loading } = props\n\n  const setMap = () => {\n    const bounds = new window.google.maps.LatLngBounds() // need handler incase `google` not yet available\n\n    const agents = (controller.agents || []).filter(a => hasValidCoordinates([a.latitude, a.longitude]))\n\n    if (!agents.length) {\n      map.center = [get(controller, 'info.location.lat', 0), get(controller, 'info.location.lon', 0)]\n      map.zoom = 9\n      return\n    }\n\n    agents.forEach(marker => {\n      bounds.extend(new window.google.maps.LatLng(get(marker, 'latitude', 0), get(marker, 'longitude', 0)))\n    })\n\n    bounds.extend(new window.google.maps.LatLng(get(controller, 'info.location.lat', 0), get(controller, 'info.location.lon', 0)))\n\n    const newBounds = {\n      ne: {\n        lat: bounds.getNorthEast().lat(),\n        lng: bounds.getNorthEast().lng()\n      },\n      sw: {\n        lat: bounds.getSouthWest().lat(),\n        lng: bounds.getSouthWest().lng()\n      }\n    }\n\n    const size = {\n      width: get(DomElementRef, 'current.offsetWidth', 600),\n      height: get(DomElementRef, 'current.offsetHeight', 800)\n    }\n\n    const { center, zoom } = fitBounds(newBounds, size)\n    map.center = center\n    map.zoom = zoom\n  }\n\n  if (autozoom && window.google) {\n    setMap()\n  }\n\n  return (\n    <div className={classes.mapWrapper} ref={DomElementRef}>\n      <GoogleMapReact\n        {...map}\n        bootstrapURLKeys={{\n          key: 'AIzaSyChp_fUXiK05ulRl_ewRGKWsQ1k0ULIFkA'\n        }}\n      >\n        {(loading ? [] : controller.agents).filter(a => hasValidCoordinates([a.latitude, a.longitude])).map(a =>\n          <div\n            key={a.uuid}\n            lat={a.latitude} lng={a.longitude}\n            className={classes.mapMarkerTransform}\n            onClick={() => setAgent(a)}\n          >\n            <Badge color='primary' style={{ '--color': msvcStatusColor[a.daemonStatus] }} badgeContent={(msvcsPerAgent[a.uuid] || []).filter(m => m.flowActive).length} invisible={a.uuid !== agent.uuid} className={`${classes.msvcBadge}`}>\n              <Avatar\n                style={{ '--markerColor': statusColor[a.daemonStatus] }}\n                className={classes.mapMarker}\n              >\n                <MemoryIcon />\n              </Avatar>\n            </Badge>\n          </div>\n        )}\n        {!loading && controller.info && hasValidCoordinates([controller.info.location.lat, controller.info.location.lon]) &&\n          <Avatar\n            lat={controller.info.location.lat}\n            lng={controller.info.location.lon}\n            style={{ '--markerColor': theme.colors.argon }}\n            className={classes.mapMarker}\n          >\n            <CtrlIcon />\n          </Avatar>}\n      </GoogleMapReact>\n    </div>\n  )\n}\n","import React, { useState } from 'react'\nimport useRecursiveTimeout from '../hooks/useInterval'\nimport { find, groupBy, get, isFinite } from 'lodash'\n\nimport Divider from '@material-ui/core/Divider'\nimport { makeStyles } from '@material-ui/styles'\n\nimport ControllerInfo from './ControllerInfo'\nimport ActiveResources from './ActiveResources'\nimport AgentList from './AgentList'\nimport Map from './Map'\n\n// import logo from '../assets/logo.png'\nimport './layout.scss'\n\nimport mapStyle from './mapStyle.json'\nimport { ControllerContext } from '../ControllerProvider'\n\nconst useStyles = makeStyles({\n  divider: {\n    margin: '15px 0'\n  }\n})\n\nconst initState = {\n  controller: {\n    info: {\n      location: {},\n      user: {}\n    },\n    agents: [],\n    flows: [],\n    microservices: []\n  },\n  agent: {},\n  activeAgents: [],\n  activeFlows: [],\n  activeMsvcs: [],\n  msvcsPerAgent: []\n}\n\nexport const actions = {\n  UPDATE: 'UPDATE',\n  SET_AGENT: 'SET_AGENT'\n}\n\nconst updateData = (state, newController) => {\n  if (!newController) {\n    return state\n  }\n  const activeFlows = newController.flows.filter(f => f.isActivated === true)\n  const activeAgents = newController.agents.filter(a => a.daemonStatus === 'RUNNING')\n  const msvcsPerAgent = groupBy(newController.microservices.map(m => ({\n    ...m,\n    flowActive: !!find(activeFlows, f => m.flowId === f.id)\n  })), 'iofogUuid')\n  const activeMsvcs = activeAgents.reduce((res, a) => res.concat(get(msvcsPerAgent, a.uuid, []).filter(m => !!find(activeFlows, f => f.id === m.flowId)) || []), [])\n\n  if (!state.agent || !state.agent.uuid) {\n    state.agent = newController.agents[0] || {}\n  }\n\n  return {\n    ...state,\n    controller: newController,\n    activeFlows,\n    activeAgents,\n    activeMsvcs,\n    msvcsPerAgent\n  }\n}\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case actions.UPDATE:\n      return updateData(state, action.data)\n    case actions.SET_AGENT:\n      return {\n        ...state,\n        agent: action.data\n      }\n    default:\n      return state\n  }\n}\n\nexport default function ECNViewer () {\n  const classes = useStyles()\n  const [state, dispatch] = React.useReducer(reducer, initState)\n  const [autozoom, setAutozoom] = useState(true)\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState(false)\n  const [map, setMap] = useState({\n    center: [0, 0],\n    zoom: 15,\n    options: {\n      styles: mapStyle\n    }\n  })\n  const { controller: controllerInfo, request } = React.useContext(ControllerContext)\n  const timeout = +controllerInfo.refresh || 3000\n  React.useEffect(() => {\n    setLoading(true)\n    setError(null)\n  }, [controllerInfo.ip, controllerInfo.port, controllerInfo.user])\n\n  const update = async () => {\n    const agentsResponse = await request('/api/v3/iofog-list')\n    if (!agentsResponse.ok) {\n      setError({ message: agentsResponse.statusText })\n      return\n    }\n    const agents = (await agentsResponse.json()).fogs\n    const flowsResponse = await request('/api/v3/flow')\n    if (!flowsResponse.ok) {\n      setError({ message: agentsResponse.statusText })\n      return\n    }\n    const flows = (await flowsResponse.json()).flows\n\n    let microservices = []\n    for (const flow of flows) {\n      const microservicesResponse = await request(`/api/v3/microservices?flowId=${flow.id}`)\n      if (!flowsResponse.ok) {\n        setError({ message: agentsResponse.statusText })\n        return\n      }\n      microservices = microservices.concat((await microservicesResponse.json()).microservices)\n    }\n    if (loading) {\n      setLoading(false)\n    }\n    if (error) {\n      setError(false)\n    }\n    dispatch({ type: actions.UPDATE, data: { agents, flows, microservices } })\n  }\n\n  useRecursiveTimeout(update, timeout)\n\n  const setAgent = a => dispatch({ type: actions.SET_AGENT, data: a })\n\n  const selectAgent = (a) => {\n    setAgent(a)\n    if (isFinite(a.latitude) && isFinite(a.longitude)) {\n      setMap({ ...map, center: [a.latitude, a.longitude], zoom: 15 })\n      setAutozoom(false)\n    }\n  }\n\n  const selectController = () => {\n    setMap({ ...map, center: [controllerInfo.location.lat, controllerInfo.location.lon], zoom: 15 })\n    setAutozoom(false)\n  }\n\n  const centerMap = (coordinates) => { setMap({ ...map, center: coordinates }) }\n\n  const { controller, activeAgents, activeFlows, activeMsvcs, agent, msvcsPerAgent } = state\n  return (\n    <div className='viewer-layout-container'>\n      <div className='box sidebar'>\n        <ControllerInfo {...{ controller: controllerInfo, selectController, loading, error }} />\n        <Divider className={classes.divider} />\n        <ActiveResources {...{ activeAgents, activeFlows, activeMsvcs, loading }} />\n        <Divider className={classes.divider} />\n        <AgentList {...{ msvcsPerAgent, loading, msvcs: controller.microservices, agents: controller.agents, agent, setAgent: selectAgent, centerMap, setAutozoom, controller: controller.info }} />\n      </div>\n      <div className='map-grid-container'>\n        <Map {...{ controller: { ...controller, info: controllerInfo }, agent, setAgent, msvcsPerAgent, map, autozoom, setAutozoom, loading }} />\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport { makeStyles } from '@material-ui/styles'\n\nimport Skeleton from 'react-loading-skeleton'\nimport { TextField, InputAdornment, Paper, Table, TableRow, TableCell, TableContainer, TableHead, TableBody, TablePagination } from '@material-ui/core'\n\nimport MoreIcon from '@material-ui/icons/MoreVert'\nimport SearchIcon from '@material-ui/icons/Search'\nimport ClearIcon from '@material-ui/icons/Clear'\nimport lget from 'lodash/get'\n\nconst useStyles = makeStyles(theme => ({\n  pointer: {\n    cursor: 'pointer'\n  },\n  avatarContainer: {\n    backgroundColor: theme.colors.chromium\n  },\n  tableActions: {\n    marginBottom: '10px',\n    display: 'flex',\n    justifyContent: 'space-between'\n  }\n}))\n\nconst filterFields = [\n  'name',\n  'description',\n  'publisher',\n  'supportedPlatforms',\n  'category',\n  'registry.url'\n]\n\nexport default function CatalogTable (props) {\n  const classes = useStyles()\n  const { loading, openMenu, catalog } = props\n  const [filter, setFilter] = React.useState('')\n  const [page, setPage] = React.useState(0)\n  const [rowsPerPage, setRowsPerPage] = React.useState(5)\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage)\n  }\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10))\n    setPage(0)\n  }\n\n  const filterItem = (item) => {\n    for (const field of filterFields) {\n      if (lget(item, field, '').toString().toLowerCase().includes(filter)) { return true }\n    }\n    return false\n  }\n\n  const filteredCatalog = catalog.filter(filterItem)\n\n  const emptyRows = loading ? 0 : rowsPerPage - Math.min(rowsPerPage, filteredCatalog.length - page * rowsPerPage)\n  return (\n    <>\n      <div className={`${classes.tableActions} ${classes.pointer}`}>\n        <TextField\n          className={classes.margin}\n          id='input-with-icon-textfield'\n          label='Filter'\n          value={filter}\n          onChange={(e) => setFilter(e.target.value.toLowerCase())}\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position='start'>\n                <SearchIcon />\n              </InputAdornment>\n            ),\n            endAdornment: (\n              <InputAdornment className={classes.pointer} position='start'>\n                <ClearIcon onClick={() => setFilter('')} />\n              </InputAdornment>\n            )\n          }}\n        />\n      </div>\n      <TableContainer component={Paper}>\n        <Table className={classes.table} stickyHeader aria-label='simple table'>\n          <TableHead>\n            <TableRow>\n              <TableCell>Name</TableCell>\n              <TableCell align='right'>Description</TableCell>\n              <TableCell align='right'>Supported platforms</TableCell>\n              <TableCell align='right'>Publisher</TableCell>\n              <TableCell align='right'>Registry</TableCell>\n              <TableCell align='right'>Category</TableCell>\n              <TableCell align='right' />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {loading ? <TableRow><TableCell colSpan={7}><Skeleton height={50} count={5} /></TableCell></TableRow> : filteredCatalog\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              .map(row => (\n                <TableRow key={row.name}>\n                  <TableCell component='th' scope='row'>\n                    {row.name}\n                  </TableCell>\n                  <TableCell align='right'>{row.description}</TableCell>\n                  <TableCell align='right'>{row.supportedPlatforms.join(', ')}</TableCell>\n                  <TableCell align='right'>{row.publisher}</TableCell>\n                  <TableCell align='right'>{row.registry.url}</TableCell>\n                  <TableCell align='right'>{row.category}</TableCell>\n                  <TableCell align='right' className={classes.pointer}>\n                    <MoreIcon onClick={(e) => openMenu(row, e)} />\n                  </TableCell>\n                </TableRow>\n              ))}\n            {emptyRows > 0 && (\n              <TableRow style={{ height: 53 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination\n        rowsPerPageOptions={[5, 10, 25]}\n        component='div'\n        count={filteredCatalog.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onChangePage={handleChangePage}\n        onChangeRowsPerPage={handleChangeRowsPerPage}\n      />\n    </>\n  )\n}\n","import React from 'react'\nimport { makeStyles } from '@material-ui/styles'\n\nimport Skeleton from 'react-loading-skeleton'\nimport { TextField, Grid, Button, MenuItem } from '@material-ui/core'\n\nconst useStyles = makeStyles(theme => ({\n  pointer: {\n    cursor: 'pointer'\n  },\n  avatarContainer: {\n    backgroundColor: theme.colors.chromium\n  },\n  tableActions: {\n    marginBottom: '10px',\n    display: 'flex',\n    justifyContent: 'space-between'\n  }\n}))\nexport default function AddCatalogItemForm (props) {\n  const classes = useStyles()\n  const [newItem, setNewItem] = React.useState({\n    images: {\n      x86: '',\n      arm: ''\n    },\n    registryId: 1,\n    name: '',\n    description: '',\n    category: '',\n    ...props.newCatalogItem\n  })\n  const { onSave, loading, registries } = props\n  const handleChange = (key) => (e) => setNewItem({ ...newItem, [key]: e.target.value })\n  const handleImageChange = (key) => (e) => setNewItem({ ...newItem, images: { ...newItem.images, [key]: e.target.value } })\n  return (\n    <>\n      <Grid container spacing={2}>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            id='name'\n            label='Name'\n            onChange={handleChange('name')}\n            value={newItem.name}\n            fullWidth\n            className={classes.textField}\n            margin='normal'\n            variant='outlined'\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            id='description'\n            label='Description'\n            onChange={handleChange('description')}\n            value={newItem.description}\n            fullWidth\n            multiline\n            rowsMax='4'\n            className={classes.textField}\n            margin='normal'\n            variant='outlined'\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            id='x86'\n            label='x86'\n            helperText='image to be used on x86 edge nodes'\n            onChange={handleImageChange('x86')}\n            value={newItem.images.x86}\n            fullWidth\n            className={classes.textField}\n            margin='normal'\n            variant='outlined'\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            id='arm'\n            label='ARM'\n            helperText='image to be used on ARM edge nodes'\n            onChange={handleImageChange('arm')}\n            value={newItem.images.arm}\n            fullWidth\n            className={classes.textField}\n            margin='normal'\n            variant='outlined'\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            id='registry'\n            select\n            label='Registry'\n            fullWidth\n            className={classes.textField}\n            value={newItem.registryId}\n            onChange={handleChange('registryId')}\n            variant='outlined'\n            InputProps={{\n              style: { marginTop: '16px' }\n            }}\n            InputLabelProps={{\n              style: { marginTop: '16px' }\n            }}\n          >\n            {registries.map(option => (\n              <MenuItem key={option.id} value={option.id}>\n                {option.url}\n              </MenuItem>\n            ))}\n          </TextField>\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            id='category'\n            label='Category'\n            onChange={handleChange('category')}\n            value={newItem.category}\n            fullWidth\n            multiline\n            rowsMax='4'\n            className={classes.textField}\n            margin='normal'\n            variant='outlined'\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            id='publisher'\n            label='Publisher'\n            onChange={handleChange('publisher')}\n            value={newItem.publisher}\n            fullWidth\n            multiline\n            rowsMax='4'\n            className={classes.textField}\n            margin='normal'\n            variant='outlined'\n          />\n        </Grid>\n      </Grid>\n      <Grid container justify='flex-end'>\n        <Grid item>\n          <Button onClick={() => onSave(newItem)}>\n            {loading ? <Skeleton> </Skeleton> : 'Save'}\n          </Button>\n        </Grid>\n      </Grid>\n    </>\n  )\n}\n","import React from 'react'\nimport { Button, Divider, Grid } from '@material-ui/core'\n\nimport Modal from './Modal'\n\nimport { makeStyles } from '@material-ui/styles'\nconst useStyles = makeStyles(theme => ({\n  divider: {\n    margin: '5px'\n  }\n}))\n\nexport default function Confirm (props) {\n  const classes = useStyles()\n  const { open, onClose, title, onConfirm } = props\n  return (\n    <Modal\n      {...{\n        title,\n        open,\n        onClose\n      }}\n    >\n      {props.children}\n      <Divider className={classes.divider} />\n      <Grid container justify='flex-end' spacing={2}>\n        <Grid item>\n          <Button onClick={onClose}>\n            Cancel\n          </Button>\n        </Grid>\n        <Grid item>\n          <Button variant='contained' color='primary' onClick={onConfirm}>\n            Confirm\n          </Button>\n        </Grid>\n      </Grid>\n\n    </Modal>\n  )\n}\n","import React from 'react'\nimport { useDrop } from 'react-dnd'\nimport { NativeTypes } from 'react-dnd-html5-backend'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst { FILE } = NativeTypes\n\nconst useStyles = makeStyles(theme => ({\n  dropZone: {\n    width: '100%',\n    border: '1px dashed',\n    height: '120px',\n    padding: '1rem',\n    textAlign: 'center',\n    borderRadius: '4px',\n    borderColor: theme.colors.carbon,\n    color: theme.colors.carbon\n  },\n  active: {\n    backgroundColor: 'white',\n    fontWeight: 'bold'\n  }\n}))\n\nexport default function FileDrop (props) {\n  const classes = useStyles()\n  const [collectedProps, drop] = useDrop({\n    accept: FILE,\n    drop: props.onDrop,\n    collect: (monitor) => ({\n      highlighted: monitor.canDrop(),\n      hovered: monitor.isOver()\n    })\n  })\n\n  const active = collectedProps.hovered && collectedProps.highlighted\n  const className = [\n    classes.dropZone,\n    (collectedProps.hovered ? classes.hovered : ''),\n    (collectedProps.highlighted ? classes.highlighted : ''),\n    (active ? classes.active : '')\n  ].join(' ')\n\n  return (\n    <div className={className} ref={drop}>\n      {active ? 'Release to drop' : props.children}\n    </div>\n  )\n}\n","import React from 'react'\nimport { makeStyles } from '@material-ui/styles'\nimport ReactJson from 'react-json-view'\nimport yaml from 'js-yaml'\nimport { Avatar, Menu, MenuItem, Divider, Typography } from '@material-ui/core'\n\nimport { ControllerContext } from '../ControllerProvider'\nimport { FeedbackContext } from '../Utils/FeedbackContext'\nimport Modal from '../Utils/Modal'\nimport CatalogTable from './CatalogTable'\nimport AddCatalogItemForm from './AddCatalogItemForm'\nimport Confirm from '../Utils/Confirm'\nimport FileDrop from '../Utils/FileDrop'\n\nimport lget from 'lodash/get'\n\nconst useStyles = makeStyles(theme => ({\n  pointer: {\n    cursor: 'pointer'\n  },\n  avatarContainer: {\n    backgroundColor: theme.colors.chromium\n  },\n  container: {\n    padding: '10px 50px 10px 30px'\n  },\n  flexColumn: {\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  titleRow: {\n    marginBottom: '30px'\n  }\n}))\n\nconst mapImages = (images) => {\n  const supportedPlatforms = []\n  for (const img of images) {\n    if (img.containerImage) {\n      switch (img.fogTypeId) {\n        case 1:\n          supportedPlatforms.push('x86')\n          break\n        case 2:\n          supportedPlatforms.push('arm')\n          break\n        default:\n          break\n      }\n    }\n  }\n  return supportedPlatforms\n}\nconst mapCatalogItem = (item, registries) => {\n  item.supportedPlatforms = mapImages(item.images)\n  item.registry = registries.find(r => r.id === item.registryId)\n  if (item.configExample) {\n    try {\n      item.configExample = JSON.parse(item.configExample)\n    } catch (e) {\n    }\n  }\n  return item\n}\n\nconst getRegistryIdFromRegistry = (registry) => {\n  if (registry === 'remote') {\n    return 1\n  }\n  if (registry === 'local') {\n    return 2\n  }\n  return +(registry)\n}\n\nconst parseCatalogItem = (doc) => {\n  if (doc.apiVersion !== 'iofog.org/v2') {\n    return [{}, `Invalid API Version ${doc.apiVersion}, current version is iofog.org/v2`]\n  }\n  if (doc.kind !== 'CatalogItem') {\n    return [{}, `Invalid kind ${doc.kind}`]\n  }\n  if (!doc.metadata || !doc.spec) {\n    return [{}, 'Invalid YAML format']\n  }\n  const catalogItem = {\n    name: lget(doc, 'metadata.name', lget(doc, 'spec.name', undefined)),\n    images: {\n      x86: lget(doc, 'spec.x86', ''),\n      arm: lget(doc, 'spec.arm', '')\n    },\n    description: lget(doc, 'spec.description', ''),\n    publisher: lget(doc, 'spec.publisher', ''),\n    category: lget(doc, 'spec.category', ''),\n    registry: lget(doc, 'spec.registry', ''),\n    configExample: lget(doc, 'spec.configExample', {})\n  }\n\n  catalogItem.registryId = catalogItem.registry ? getRegistryIdFromRegistry(catalogItem.registry) : 1\n  return [catalogItem]\n}\n\nexport default function Catalog () {\n  const classes = useStyles()\n  const [openDetailsModal, setOpenDetailsModal] = React.useState(false)\n  const [openRemoveConfirm, setOpenRemoveConfirm] = React.useState(false)\n  const [openAddCatalogItemModal, setOpenAddCatalogItemModal] = React.useState(false)\n  const [newCatalogItem, setNewCatalogItem] = React.useState(null)\n  const [fetching, setFetching] = React.useState(true)\n  const [loading, setLoading] = React.useState(false)\n  const [catalog, setCatalog] = React.useState([])\n  const [registries, setRegistries] = React.useState([])\n  const [selectedItem, setSelectedItem] = React.useState({})\n  const [menuAnchorEl, setMenuAnchorEl] = React.useState(null)\n  const { request } = React.useContext(ControllerContext)\n  const { pushFeedback } = React.useContext(FeedbackContext)\n\n  const handleCloseMenu = () => setMenuAnchorEl(null)\n  const openMenu = (item, e) => {\n    setSelectedItem(item)\n    setMenuAnchorEl(e.currentTarget)\n  }\n  const openDetails = () => {\n    setOpenDetailsModal(true)\n    handleCloseMenu()\n  }\n  const openRemove = () => {\n    setOpenRemoveConfirm(true)\n    handleCloseMenu()\n  }\n\n  async function fetchCatalog () {\n    try {\n      setFetching(true)\n      const catalogItemsResponse = await request('/api/v3/catalog/microservices')\n      if (!catalogItemsResponse.ok) {\n        pushFeedback({ message: catalogItemsResponse.statusText, type: 'error' })\n        setFetching(false)\n        return\n      }\n      let catalogItems = (await catalogItemsResponse.json()).catalogItems\n      const registriesResponse = await request('/api/v3/registries')\n      if (!registriesResponse.ok) {\n        pushFeedback({ message: registriesResponse.statusText, type: 'error' })\n        setFetching(false)\n        return\n      }\n      const registries = (await registriesResponse.json()).registries\n      catalogItems = catalogItems.map(item => mapCatalogItem(item, registries))\n      console.log({ catalogItems })\n      setCatalog(catalogItems)\n      setRegistries(registries)\n      setFetching(false)\n    } catch (e) {\n      pushFeedback({ message: e.message, type: 'error' })\n      setFetching(false)\n    }\n  }\n\n  React.useEffect(() => {\n    fetchCatalog()\n  }, [])\n\n  const addCatalogItem = async (item) => {\n    const newItem = {\n      ...item,\n      images: [{\n        fogTypeId: 1,\n        containerImage: item.images.x86\n      }, {\n        fogTypeId: 2,\n        containerImage: item.images.arm\n      }]\n    }\n    if (newItem.configExample && typeof newItem.configExample === typeof ({})) {\n      newItem.configExample = JSON.stringify(newItem.configExample)\n    }\n    setLoading(true)\n    const response = await request('/api/v3/catalog/microservices', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newItem)\n    })\n    if (response.ok) {\n      pushFeedback({ message: 'Item added to the Catalog!', type: 'success' })\n      newItem.id = (await response.json()).id\n      setCatalog([mapCatalogItem(newItem, registries), ...catalog])\n      setLoading(false)\n    } else {\n      pushFeedback({ message: response.statusText, type: 'error' })\n      setLoading(false)\n    }\n  }\n\n  const removeCatalogItem = async (item) => {\n    try {\n      setLoading(true)\n      const res = await request(`/api/v3/catalog/microservices/${item.id}`, {\n        method: 'DELETE'\n      })\n      if (!res.ok) {\n        pushFeedback({ message: res.statusText, type: 'error' })\n      } else {\n        setCatalog(catalog.filter(i => i.id !== item.id))\n        pushFeedback({ message: 'Catalog item deleted', type: 'success' })\n      }\n      setLoading(false)\n    } catch (e) {\n      pushFeedback({ message: e.message, type: 'error', uuid: 'error' })\n      setLoading(false)\n    }\n  }\n\n  const readCatalogItemFile = async (item) => {\n    const file = item.files[0]\n    if (file) {\n      const reader = new window.FileReader()\n\n      reader.onload = function (evt) {\n        console.log({ evt })\n        try {\n          const doc = yaml.safeLoad(evt.target.result)\n          const [catalogItem, err] = parseCatalogItem(doc)\n          if (err) {\n            return pushFeedback({ message: err, type: 'error' })\n          }\n          setNewCatalogItem(catalogItem)\n          setOpenAddCatalogItemModal(true)\n        } catch (e) {\n          console.error({ e })\n          pushFeedback({ message: 'Could not parse the file', type: 'error' })\n        }\n      }\n\n      reader.onerror = function (evt) {\n        pushFeedback({ message: evt, type: 'error' })\n      }\n\n      reader.readAsText(file, 'UTF-8')\n    }\n  }\n\n  return (\n    <>\n      <div className={classes.container}>\n        <div className={classes.titleRow}>\n          <Typography variant='h5'>ECN Microservices Catalog</Typography>\n        </div>\n        <CatalogTable {...{ loading: fetching, openMenu, catalog }} />\n        <div>\n          <FileDrop {...{ onDrop: readCatalogItemFile }}>\n            <div className={classes.flexColumn}>\n              <span>Drag a file here</span>\n              <span>---</span>\n              <Avatar style={{ margin: 'auto' }} className={`${classes.avatarContainer} ${classes.pointer}`} onClick={() => setOpenAddCatalogItemModal(true)}>+</Avatar>\n            </div>\n          </FileDrop>\n        </div>\n      </div>\n      <Modal\n        {...{\n          open: openDetailsModal,\n          title: `${selectedItem.name} details`,\n          onClose: () => setOpenDetailsModal(false)\n        }}\n      >\n        <ReactJson title='Catalog item' src={selectedItem} name={false} />\n      </Modal>\n      <Modal\n        {...{\n          open: openAddCatalogItemModal,\n          title: 'Add an item to the Catalog',\n          onClose: () => setOpenAddCatalogItemModal(false)\n        }}\n      >\n        <AddCatalogItemForm {...{\n          loading,\n          registries,\n          newCatalogItem,\n          onSave: async (item) => {\n            try {\n              await addCatalogItem(item)\n              setNewCatalogItem(null)\n              setOpenAddCatalogItemModal(false)\n            } catch (e) {\n              pushFeedback({ message: e.message, type: 'error' })\n            }\n          }\n        }}\n        />\n      </Modal>\n      <Confirm\n        open={openRemoveConfirm}\n        title={`Delete catalog item ${selectedItem.name} ?`}\n        onClose={() => setOpenRemoveConfirm(false)}\n        onConfirm={() => {\n          removeCatalogItem(selectedItem)\n          setOpenRemoveConfirm(false)\n        }}\n      />\n      <Menu\n        id='catalog-menu'\n        anchorEl={menuAnchorEl}\n        keepMounted\n        open={Boolean(menuAnchorEl)}\n        onClose={handleCloseMenu}\n      >\n        <MenuItem onClick={openDetails}>Details</MenuItem>\n        <Divider />\n        <MenuItem onClick={openRemove}>Remove item</MenuItem>\n      </Menu>\n    </>\n  )\n}\n","import React from 'react'\nimport { TextField, Grid, Button, InputAdornment, Divider } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/styles'\n\nimport { ControllerContext } from '../ControllerProvider'\nimport { FeedbackContext } from '../Utils/FeedbackContext'\n\nconst useStyles = makeStyles({\n  skeleton: {\n    minHeight: '55px'\n  }\n})\n\nexport default function Config (props) {\n  const classes = useStyles()\n  const { pushFeedback } = React.useContext(FeedbackContext)\n  const { controller, updateController } = React.useContext(ControllerContext)\n  const [data, setData] = React.useState({ ...controller })\n\n  const save = async () => {\n    try {\n      await updateController(data)\n      pushFeedback({ message: data.dev ? 'Controller details saved!' : 'Authenticated!', type: 'success' })\n      props.onSave()\n    } catch (e) {\n      pushFeedback({ message: e.message, type: 'error' })\n    }\n  }\n\n  const handleChange = name => event => {\n    setData({ ...data, [name]: event.target.value })\n  }\n  const handleUserChange = name => event => {\n    setData({ ...data, user: { ...data.user, [name]: event.target.value } })\n  }\n  return (\n    <>\n      {data.dev &&\n        <Grid container spacing={2}>\n          <Grid item xs={12} sm={6}>\n            <TextField\n              id='ip'\n              label='IP'\n              onChange={handleChange('ip')}\n              value={data.ip}\n              fullWidth\n              className={classes.textField}\n              margin='normal'\n              variant='outlined'\n            />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <TextField\n              id='port'\n              label='Port'\n              onChange={handleChange('port')}\n              value={data.port}\n              fullWidth\n              className={classes.textField}\n              margin='normal'\n              variant='outlined'\n            />\n          </Grid>\n        </Grid>}\n      <Grid container spacing={2}>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            id='email'\n            label='Email'\n            onChange={handleUserChange('email')}\n            value={data.user.email}\n            fullWidth\n            className={classes.textField}\n            margin='normal'\n            variant='outlined'\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            id='password'\n            label='Password'\n            onChange={handleUserChange('password')}\n            onKeyPress={(e) => e.key === 'Enter' && data.user.email && data.user.password ? save() : null}\n            value={data.user.password}\n            fullWidth\n            type='password'\n            className={classes.textField}\n            margin='normal'\n            variant='outlined'\n          />\n        </Grid>\n      </Grid>\n      <Divider />\n      <Grid container spacing={2}>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            id='refresh'\n            label='Refresh'\n            type='number'\n            onChange={handleChange('refresh')}\n            value={data.refresh}\n            fullWidth\n            className={classes.textField}\n            margin='normal'\n            variant='outlined'\n            inputProps={{\n              min: '1000',\n              step: '500'\n            }}\n            InputProps={{\n              endAdornment: <InputAdornment position='end'>ms</InputAdornment>\n            }}\n          />\n        </Grid>\n      </Grid>\n      <Grid container justify='flex-end'>\n        <Grid item>\n          <Button onClick={save}>\n            Save\n          </Button>\n        </Grid>\n      </Grid>\n    </>\n  )\n}\n","import React from 'react'\nimport { HashRouter, Route, Switch, NavLink, Redirect } from 'react-router-dom'\nimport Avatar from '@material-ui/core/Avatar'\nimport SearchIcon from '@material-ui/icons/Search'\nimport NotificationsIcon from '@material-ui/icons/NotificationsOutlined'\nimport HomeIcon from '@material-ui/icons/HomeOutlined'\nimport CatalogIcon from '@material-ui/icons/GraphicEqOutlined'\nimport SettingsIcon from '@material-ui/icons/SettingsOutlined'\n\nimport ECNViewer from '../ECNViewer'\nimport Catalog from '../Catalog'\nimport Modal from '../Utils/Modal'\nimport Config from '../Config'\nimport { ControllerContext } from '../ControllerProvider'\n\nimport logomark from '../assets/logomark.svg'\nimport './layout.scss'\n\nimport { makeStyles } from '@material-ui/styles'\n\nconst useStyles = makeStyles(theme => ({\n  wrapper: {\n    color: theme.colors.carbon,\n    backgroundColor: theme.colors.silver\n  },\n  divider: {\n    margin: '15px 0'\n  },\n  logo: {\n    backgroundColor: theme.colors.phosphorus,\n    color: theme.colors.white\n  },\n  latNav: {\n    backgroundColor: theme.colors.carbon\n  },\n  avatarContainer: {\n    backgroundColor: theme.colors.phosphorus,\n    marginRight: '45px'\n  },\n  latIcons: {\n    margin: 'auto',\n    marginTop: '15px',\n    cursor: 'pointer',\n    backgroundColor: theme.colors.carbon,\n    '.active &': {\n      backgroundColor: theme.colors.aluminium\n    }\n  },\n  topIcons: {\n    height: '100%',\n    width: '25px',\n    marginRight: '25px',\n    cursor: 'pointer'\n  },\n  nav: {\n    marginBottom: '15px',\n    height: '50px',\n    '& a': {\n      height: '100%',\n      '& img': {\n        height: '100%'\n      }\n    }\n  },\n  footerContainer: {\n    display: 'flex',\n    justifyContent: 'space-around',\n    justifyItems: 'center',\n    padding: '20px 10px 20px 0px'\n  },\n  footer: {\n    color: theme.colors.aluminium,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'flex-end',\n    fontSize: '9pt',\n    '& a': {\n      color: theme.colors.aluminium,\n      textDecoration: 'none!important'\n    }\n  }\n}))\n\nexport default function Layout () {\n  const classes = useStyles()\n  const { controller } = React.useContext(ControllerContext)\n  const [settingsOpen, setSettingsOpen] = React.useState(!(controller.user.email && controller.user.password))\n\n  console.log(' ====> Rendering layout')\n\n  return (\n    <>\n      <HashRouter>\n        <div className={classes.wrapper + ' wrapper'}>\n          <div className={classes.logo + ' logo'}>\n            <NavLink to='/overview'>\n              <img src={logomark} alt='Edgeworx logomark' />\n            </NavLink>\n          </div>\n          <div className='topnav'>\n            <SearchIcon className={classes.topIcons} />\n            <NotificationsIcon className={classes.topIcons} />\n            <Avatar className={classes.avatarContainer}>M</Avatar>\n          </div>\n          <div className={classes.latNav + ' latnav'}>\n            <NavLink to='/overview'>\n              <Avatar className={classes.latIcons}>\n                <HomeIcon />\n              </Avatar>\n            </NavLink>\n            <NavLink to='/catalog'>\n              <Avatar className={classes.latIcons}>\n                <CatalogIcon />\n              </Avatar>\n            </NavLink>\n            <Avatar className={classes.latIcons}>\n              <SettingsIcon onClick={() => setSettingsOpen(!settingsOpen)} />\n            </Avatar>\n          </div>\n          <div className='content'>\n            <Switch>\n              <Route path='/catalog' component={Catalog} />\n              <Route path='/overview' component={ECNViewer} />\n              <Route component={() => <Redirect to='/overview' />} />\n            </Switch>\n          </div>\n          <div className={`${classes.footerContainer} footer`}>\n            <span className={classes.footer}><a href='http://www.eclipse.org/legal/copyright.php'>© 2019 Eclipse Foundation, Inc.</a></span>\n          </div>\n        </div>\n      </HashRouter>\n      <Modal\n        {...{\n          open: settingsOpen,\n          title: controller.dev ? 'Controller details' : 'User credentials',\n          onClose: () => setSettingsOpen(false)\n        }}\n      >\n        <Config {...{ onSave: () => setSettingsOpen(false) }} />\n      </Modal>\n    </>\n  )\n}\n","import React from 'react'\n\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport Backend from 'react-dnd-html5-backend'\nimport { DndProvider } from 'react-dnd'\n\nimport Layout from './Layout'\n\nimport './App.css'\nimport FeedbackContext from './Utils/FeedbackContext'\nimport ThemeContext from './Theme/ThemeProvider'\nimport ControllerContext from './ControllerProvider'\n\nfunction App () {\n  console.log(' ======> Rendering app ')\n  return (\n    <>\n      <CssBaseline />\n      <ThemeContext>\n        <DndProvider backend={Backend}>\n          <ControllerContext>\n            <FeedbackContext>\n              <Layout />\n            </FeedbackContext>\n          </ControllerContext>\n        </DndProvider>\n      </ThemeContext>\n    </>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\n/* globals fetch */\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}